/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    this._$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (! this._$jscoverage) {
  this._$jscoverage = {};
}
if (! _$jscoverage['js/vs_ext.js']) {
  _$jscoverage['js/vs_ext.js'] = [];
  _$jscoverage['js/vs_ext.js'][19] = 0;
  _$jscoverage['js/vs_ext.js'][21] = 0;
  _$jscoverage['js/vs_ext.js'][45] = 0;
  _$jscoverage['js/vs_ext.js'][98] = 0;
  _$jscoverage['js/vs_ext.js'][100] = 0;
  _$jscoverage['js/vs_ext.js'][101] = 0;
  _$jscoverage['js/vs_ext.js'][102] = 0;
  _$jscoverage['js/vs_ext.js'][104] = 0;
  _$jscoverage['js/vs_ext.js'][105] = 0;
  _$jscoverage['js/vs_ext.js'][106] = 0;
  _$jscoverage['js/vs_ext.js'][108] = 0;
  _$jscoverage['js/vs_ext.js'][110] = 0;
  _$jscoverage['js/vs_ext.js'][112] = 0;
  _$jscoverage['js/vs_ext.js'][113] = 0;
  _$jscoverage['js/vs_ext.js'][117] = 0;
  _$jscoverage['js/vs_ext.js'][120] = 0;
  _$jscoverage['js/vs_ext.js'][126] = 0;
  _$jscoverage['js/vs_ext.js'][127] = 0;
  _$jscoverage['js/vs_ext.js'][128] = 0;
  _$jscoverage['js/vs_ext.js'][133] = 0;
  _$jscoverage['js/vs_ext.js'][134] = 0;
  _$jscoverage['js/vs_ext.js'][148] = 0;
  _$jscoverage['js/vs_ext.js'][153] = 0;
  _$jscoverage['js/vs_ext.js'][158] = 0;
  _$jscoverage['js/vs_ext.js'][164] = 0;
  _$jscoverage['js/vs_ext.js'][166] = 0;
  _$jscoverage['js/vs_ext.js'][168] = 0;
  _$jscoverage['js/vs_ext.js'][169] = 0;
  _$jscoverage['js/vs_ext.js'][171] = 0;
  _$jscoverage['js/vs_ext.js'][173] = 0;
  _$jscoverage['js/vs_ext.js'][175] = 0;
  _$jscoverage['js/vs_ext.js'][178] = 0;
  _$jscoverage['js/vs_ext.js'][181] = 0;
  _$jscoverage['js/vs_ext.js'][261] = 0;
  _$jscoverage['js/vs_ext.js'][263] = 0;
  _$jscoverage['js/vs_ext.js'][271] = 0;
  _$jscoverage['js/vs_ext.js'][272] = 0;
  _$jscoverage['js/vs_ext.js'][274] = 0;
  _$jscoverage['js/vs_ext.js'][283] = 0;
  _$jscoverage['js/vs_ext.js'][285] = 0;
  _$jscoverage['js/vs_ext.js'][311] = 0;
  _$jscoverage['js/vs_ext.js'][313] = 0;
  _$jscoverage['js/vs_ext.js'][314] = 0;
  _$jscoverage['js/vs_ext.js'][322] = 0;
  _$jscoverage['js/vs_ext.js'][329] = 0;
  _$jscoverage['js/vs_ext.js'][330] = 0;
  _$jscoverage['js/vs_ext.js'][332] = 0;
  _$jscoverage['js/vs_ext.js'][344] = 0;
  _$jscoverage['js/vs_ext.js'][358] = 0;
  _$jscoverage['js/vs_ext.js'][369] = 0;
  _$jscoverage['js/vs_ext.js'][371] = 0;
  _$jscoverage['js/vs_ext.js'][377] = 0;
  _$jscoverage['js/vs_ext.js'][388] = 0;
  _$jscoverage['js/vs_ext.js'][389] = 0;
  _$jscoverage['js/vs_ext.js'][391] = 0;
  _$jscoverage['js/vs_ext.js'][414] = 0;
  _$jscoverage['js/vs_ext.js'][416] = 0;
  _$jscoverage['js/vs_ext.js'][418] = 0;
  _$jscoverage['js/vs_ext.js'][419] = 0;
  _$jscoverage['js/vs_ext.js'][420] = 0;
  _$jscoverage['js/vs_ext.js'][435] = 0;
  _$jscoverage['js/vs_ext.js'][437] = 0;
  _$jscoverage['js/vs_ext.js'][439] = 0;
  _$jscoverage['js/vs_ext.js'][454] = 0;
  _$jscoverage['js/vs_ext.js'][455] = 0;
  _$jscoverage['js/vs_ext.js'][456] = 0;
  _$jscoverage['js/vs_ext.js'][458] = 0;
  _$jscoverage['js/vs_ext.js'][459] = 0;
  _$jscoverage['js/vs_ext.js'][470] = 0;
  _$jscoverage['js/vs_ext.js'][472] = 0;
  _$jscoverage['js/vs_ext.js'][487] = 0;
  _$jscoverage['js/vs_ext.js'][490] = 0;
  _$jscoverage['js/vs_ext.js'][496] = 0;
  _$jscoverage['js/vs_ext.js'][507] = 0;
  _$jscoverage['js/vs_ext.js'][508] = 0;
  _$jscoverage['js/vs_ext.js'][510] = 0;
  _$jscoverage['js/vs_ext.js'][512] = 0;
  _$jscoverage['js/vs_ext.js'][514] = 0;
  _$jscoverage['js/vs_ext.js'][523] = 0;
  _$jscoverage['js/vs_ext.js'][535] = 0;
  _$jscoverage['js/vs_ext.js'][536] = 0;
  _$jscoverage['js/vs_ext.js'][538] = 0;
  _$jscoverage['js/vs_ext.js'][540] = 0;
  _$jscoverage['js/vs_ext.js'][542] = 0;
  _$jscoverage['js/vs_ext.js'][551] = 0;
  _$jscoverage['js/vs_ext.js'][563] = 0;
  _$jscoverage['js/vs_ext.js'][565] = 0;
  _$jscoverage['js/vs_ext.js'][567] = 0;
  _$jscoverage['js/vs_ext.js'][569] = 0;
  _$jscoverage['js/vs_ext.js'][578] = 0;
  _$jscoverage['js/vs_ext.js'][590] = 0;
  _$jscoverage['js/vs_ext.js'][592] = 0;
  _$jscoverage['js/vs_ext.js'][594] = 0;
  _$jscoverage['js/vs_ext.js'][596] = 0;
  _$jscoverage['js/vs_ext.js'][605] = 0;
  _$jscoverage['js/vs_ext.js'][617] = 0;
  _$jscoverage['js/vs_ext.js'][618] = 0;
  _$jscoverage['js/vs_ext.js'][620] = 0;
  _$jscoverage['js/vs_ext.js'][622] = 0;
  _$jscoverage['js/vs_ext.js'][624] = 0;
  _$jscoverage['js/vs_ext.js'][633] = 0;
  _$jscoverage['js/vs_ext.js'][645] = 0;
  _$jscoverage['js/vs_ext.js'][647] = 0;
  _$jscoverage['js/vs_ext.js'][649] = 0;
  _$jscoverage['js/vs_ext.js'][650] = 0;
  _$jscoverage['js/vs_ext.js'][652] = 0;
  _$jscoverage['js/vs_ext.js'][654] = 0;
  _$jscoverage['js/vs_ext.js'][663] = 0;
  _$jscoverage['js/vs_ext.js'][665] = 0;
  _$jscoverage['js/vs_ext.js'][666] = 0;
  _$jscoverage['js/vs_ext.js'][678] = 0;
  _$jscoverage['js/vs_ext.js'][680] = 0;
  _$jscoverage['js/vs_ext.js'][682] = 0;
  _$jscoverage['js/vs_ext.js'][684] = 0;
  _$jscoverage['js/vs_ext.js'][693] = 0;
  _$jscoverage['js/vs_ext.js'][695] = 0;
  _$jscoverage['js/vs_ext.js'][696] = 0;
  _$jscoverage['js/vs_ext.js'][708] = 0;
  _$jscoverage['js/vs_ext.js'][709] = 0;
  _$jscoverage['js/vs_ext.js'][711] = 0;
  _$jscoverage['js/vs_ext.js'][713] = 0;
  _$jscoverage['js/vs_ext.js'][715] = 0;
  _$jscoverage['js/vs_ext.js'][724] = 0;
  _$jscoverage['js/vs_ext.js'][737] = 0;
  _$jscoverage['js/vs_ext.js'][738] = 0;
  _$jscoverage['js/vs_ext.js'][739] = 0;
  _$jscoverage['js/vs_ext.js'][740] = 0;
  _$jscoverage['js/vs_ext.js'][742] = 0;
  _$jscoverage['js/vs_ext.js'][743] = 0;
  _$jscoverage['js/vs_ext.js'][745] = 0;
  _$jscoverage['js/vs_ext.js'][746] = 0;
  _$jscoverage['js/vs_ext.js'][748] = 0;
  _$jscoverage['js/vs_ext.js'][750] = 0;
  _$jscoverage['js/vs_ext.js'][760] = 0;
  _$jscoverage['js/vs_ext.js'][762] = 0;
  _$jscoverage['js/vs_ext.js'][764] = 0;
  _$jscoverage['js/vs_ext.js'][765] = 0;
  _$jscoverage['js/vs_ext.js'][767] = 0;
  _$jscoverage['js/vs_ext.js'][775] = 0;
  _$jscoverage['js/vs_ext.js'][781] = 0;
  _$jscoverage['js/vs_ext.js'][783] = 0;
  _$jscoverage['js/vs_ext.js'][813] = 0;
  _$jscoverage['js/vs_ext.js'][815] = 0;
  _$jscoverage['js/vs_ext.js'][816] = 0;
  _$jscoverage['js/vs_ext.js'][817] = 0;
  _$jscoverage['js/vs_ext.js'][818] = 0;
  _$jscoverage['js/vs_ext.js'][820] = 0;
  _$jscoverage['js/vs_ext.js'][822] = 0;
  _$jscoverage['js/vs_ext.js'][823] = 0;
  _$jscoverage['js/vs_ext.js'][825] = 0;
  _$jscoverage['js/vs_ext.js'][827] = 0;
  _$jscoverage['js/vs_ext.js'][829] = 0;
  _$jscoverage['js/vs_ext.js'][830] = 0;
  _$jscoverage['js/vs_ext.js'][832] = 0;
  _$jscoverage['js/vs_ext.js'][837] = 0;
  _$jscoverage['js/vs_ext.js'][839] = 0;
  _$jscoverage['js/vs_ext.js'][846] = 0;
  _$jscoverage['js/vs_ext.js'][852] = 0;
  _$jscoverage['js/vs_ext.js'][854] = 0;
  _$jscoverage['js/vs_ext.js'][857] = 0;
  _$jscoverage['js/vs_ext.js'][859] = 0;
  _$jscoverage['js/vs_ext.js'][866] = 0;
  _$jscoverage['js/vs_ext.js'][867] = 0;
  _$jscoverage['js/vs_ext.js'][868] = 0;
  _$jscoverage['js/vs_ext.js'][873] = 0;
  _$jscoverage['js/vs_ext.js'][874] = 0;
  _$jscoverage['js/vs_ext.js'][875] = 0;
  _$jscoverage['js/vs_ext.js'][879] = 0;
  _$jscoverage['js/vs_ext.js'][886] = 0;
  _$jscoverage['js/vs_ext.js'][888] = 0;
  _$jscoverage['js/vs_ext.js'][889] = 0;
  _$jscoverage['js/vs_ext.js'][891] = 0;
  _$jscoverage['js/vs_ext.js'][892] = 0;
  _$jscoverage['js/vs_ext.js'][893] = 0;
  _$jscoverage['js/vs_ext.js'][895] = 0;
  _$jscoverage['js/vs_ext.js'][904] = 0;
  _$jscoverage['js/vs_ext.js'][913] = 0;
  _$jscoverage['js/vs_ext.js'][915] = 0;
  _$jscoverage['js/vs_ext.js'][916] = 0;
  _$jscoverage['js/vs_ext.js'][920] = 0;
  _$jscoverage['js/vs_ext.js'][929] = 0;
  _$jscoverage['js/vs_ext.js'][939] = 0;
  _$jscoverage['js/vs_ext.js'][941] = 0;
  _$jscoverage['js/vs_ext.js'][942] = 0;
  _$jscoverage['js/vs_ext.js'][944] = 0;
  _$jscoverage['js/vs_ext.js'][946] = 0;
  _$jscoverage['js/vs_ext.js'][956] = 0;
  _$jscoverage['js/vs_ext.js'][966] = 0;
  _$jscoverage['js/vs_ext.js'][967] = 0;
  _$jscoverage['js/vs_ext.js'][976] = 0;
  _$jscoverage['js/vs_ext.js'][985] = 0;
  _$jscoverage['js/vs_ext.js'][1008] = 0;
  _$jscoverage['js/vs_ext.js'][1010] = 0;
  _$jscoverage['js/vs_ext.js'][1011] = 0;
  _$jscoverage['js/vs_ext.js'][1012] = 0;
  _$jscoverage['js/vs_ext.js'][1013] = 0;
  _$jscoverage['js/vs_ext.js'][1016] = 0;
  _$jscoverage['js/vs_ext.js'][1018] = 0;
  _$jscoverage['js/vs_ext.js'][1023] = 0;
  _$jscoverage['js/vs_ext.js'][1025] = 0;
  _$jscoverage['js/vs_ext.js'][1027] = 0;
  _$jscoverage['js/vs_ext.js'][1028] = 0;
  _$jscoverage['js/vs_ext.js'][1036] = 0;
  _$jscoverage['js/vs_ext.js'][1038] = 0;
  _$jscoverage['js/vs_ext.js'][1044] = 0;
  _$jscoverage['js/vs_ext.js'][1046] = 0;
  _$jscoverage['js/vs_ext.js'][1048] = 0;
  _$jscoverage['js/vs_ext.js'][1054] = 0;
  _$jscoverage['js/vs_ext.js'][1056] = 0;
  _$jscoverage['js/vs_ext.js'][1058] = 0;
  _$jscoverage['js/vs_ext.js'][1060] = 0;
  _$jscoverage['js/vs_ext.js'][1061] = 0;
  _$jscoverage['js/vs_ext.js'][1062] = 0;
  _$jscoverage['js/vs_ext.js'][1063] = 0;
  _$jscoverage['js/vs_ext.js'][1064] = 0;
  _$jscoverage['js/vs_ext.js'][1066] = 0;
  _$jscoverage['js/vs_ext.js'][1072] = 0;
  _$jscoverage['js/vs_ext.js'][1074] = 0;
  _$jscoverage['js/vs_ext.js'][1075] = 0;
  _$jscoverage['js/vs_ext.js'][1081] = 0;
  _$jscoverage['js/vs_ext.js'][1083] = 0;
  _$jscoverage['js/vs_ext.js'][1084] = 0;
  _$jscoverage['js/vs_ext.js'][1090] = 0;
  _$jscoverage['js/vs_ext.js'][1092] = 0;
  _$jscoverage['js/vs_ext.js'][1093] = 0;
  _$jscoverage['js/vs_ext.js'][1099] = 0;
  _$jscoverage['js/vs_ext.js'][1101] = 0;
  _$jscoverage['js/vs_ext.js'][1102] = 0;
  _$jscoverage['js/vs_ext.js'][1103] = 0;
  _$jscoverage['js/vs_ext.js'][1104] = 0;
  _$jscoverage['js/vs_ext.js'][1106] = 0;
  _$jscoverage['js/vs_ext.js'][1108] = 0;
  _$jscoverage['js/vs_ext.js'][1109] = 0;
  _$jscoverage['js/vs_ext.js'][1111] = 0;
  _$jscoverage['js/vs_ext.js'][1113] = 0;
  _$jscoverage['js/vs_ext.js'][1115] = 0;
  _$jscoverage['js/vs_ext.js'][1116] = 0;
  _$jscoverage['js/vs_ext.js'][1122] = 0;
  _$jscoverage['js/vs_ext.js'][1124] = 0;
  _$jscoverage['js/vs_ext.js'][1126] = 0;
  _$jscoverage['js/vs_ext.js'][1128] = 0;
  _$jscoverage['js/vs_ext.js'][1134] = 0;
  _$jscoverage['js/vs_ext.js'][1136] = 0;
  _$jscoverage['js/vs_ext.js'][1138] = 0;
  _$jscoverage['js/vs_ext.js'][1142] = 0;
  _$jscoverage['js/vs_ext.js'][1144] = 0;
  _$jscoverage['js/vs_ext.js'][1145] = 0;
  _$jscoverage['js/vs_ext.js'][1146] = 0;
  _$jscoverage['js/vs_ext.js'][1147] = 0;
  _$jscoverage['js/vs_ext.js'][1149] = 0;
  _$jscoverage['js/vs_ext.js'][1150] = 0;
  _$jscoverage['js/vs_ext.js'][1151] = 0;
  _$jscoverage['js/vs_ext.js'][1152] = 0;
  _$jscoverage['js/vs_ext.js'][1156] = 0;
  _$jscoverage['js/vs_ext.js'][1158] = 0;
  _$jscoverage['js/vs_ext.js'][1161] = 0;
  _$jscoverage['js/vs_ext.js'][1164] = 0;
  _$jscoverage['js/vs_ext.js'][1165] = 0;
  _$jscoverage['js/vs_ext.js'][1168] = 0;
  _$jscoverage['js/vs_ext.js'][1169] = 0;
  _$jscoverage['js/vs_ext.js'][1170] = 0;
  _$jscoverage['js/vs_ext.js'][1171] = 0;
  _$jscoverage['js/vs_ext.js'][1173] = 0;
  _$jscoverage['js/vs_ext.js'][1174] = 0;
  _$jscoverage['js/vs_ext.js'][1179] = 0;
  _$jscoverage['js/vs_ext.js'][1180] = 0;
  _$jscoverage['js/vs_ext.js'][1182] = 0;
  _$jscoverage['js/vs_ext.js'][1183] = 0;
  _$jscoverage['js/vs_ext.js'][1184] = 0;
  _$jscoverage['js/vs_ext.js'][1185] = 0;
  _$jscoverage['js/vs_ext.js'][1187] = 0;
  _$jscoverage['js/vs_ext.js'][1189] = 0;
  _$jscoverage['js/vs_ext.js'][1190] = 0;
  _$jscoverage['js/vs_ext.js'][1199] = 0;
  _$jscoverage['js/vs_ext.js'][1201] = 0;
  _$jscoverage['js/vs_ext.js'][1203] = 0;
  _$jscoverage['js/vs_ext.js'][1204] = 0;
  _$jscoverage['js/vs_ext.js'][1207] = 0;
  _$jscoverage['js/vs_ext.js'][1208] = 0;
  _$jscoverage['js/vs_ext.js'][1210] = 0;
  _$jscoverage['js/vs_ext.js'][1219] = 0;
  _$jscoverage['js/vs_ext.js'][1221] = 0;
  _$jscoverage['js/vs_ext.js'][1224] = 0;
  _$jscoverage['js/vs_ext.js'][1225] = 0;
  _$jscoverage['js/vs_ext.js'][1233] = 0;
  _$jscoverage['js/vs_ext.js'][1235] = 0;
  _$jscoverage['js/vs_ext.js'][1236] = 0;
  _$jscoverage['js/vs_ext.js'][1238] = 0;
  _$jscoverage['js/vs_ext.js'][1239] = 0;
  _$jscoverage['js/vs_ext.js'][1240] = 0;
  _$jscoverage['js/vs_ext.js'][1242] = 0;
  _$jscoverage['js/vs_ext.js'][1243] = 0;
  _$jscoverage['js/vs_ext.js'][1245] = 0;
  _$jscoverage['js/vs_ext.js'][1246] = 0;
  _$jscoverage['js/vs_ext.js'][1247] = 0;
  _$jscoverage['js/vs_ext.js'][1251] = 0;
  _$jscoverage['js/vs_ext.js'][1253] = 0;
  _$jscoverage['js/vs_ext.js'][1254] = 0;
  _$jscoverage['js/vs_ext.js'][1256] = 0;
  _$jscoverage['js/vs_ext.js'][1257] = 0;
  _$jscoverage['js/vs_ext.js'][1258] = 0;
  _$jscoverage['js/vs_ext.js'][1265] = 0;
  _$jscoverage['js/vs_ext.js'][1267] = 0;
  _$jscoverage['js/vs_ext.js'][1269] = 0;
  _$jscoverage['js/vs_ext.js'][1270] = 0;
  _$jscoverage['js/vs_ext.js'][1272] = 0;
  _$jscoverage['js/vs_ext.js'][1279] = 0;
  _$jscoverage['js/vs_ext.js'][1281] = 0;
  _$jscoverage['js/vs_ext.js'][1283] = 0;
  _$jscoverage['js/vs_ext.js'][1284] = 0;
  _$jscoverage['js/vs_ext.js'][1308] = 0;
  _$jscoverage['js/vs_ext.js'][1310] = 0;
  _$jscoverage['js/vs_ext.js'][1313] = 0;
  _$jscoverage['js/vs_ext.js'][1314] = 0;
  _$jscoverage['js/vs_ext.js'][1316] = 0;
  _$jscoverage['js/vs_ext.js'][1322] = 0;
  _$jscoverage['js/vs_ext.js'][1387] = 0;
  _$jscoverage['js/vs_ext.js'][1389] = 0;
  _$jscoverage['js/vs_ext.js'][1390] = 0;
  _$jscoverage['js/vs_ext.js'][1391] = 0;
  _$jscoverage['js/vs_ext.js'][1393] = 0;
  _$jscoverage['js/vs_ext.js'][1401] = 0;
  _$jscoverage['js/vs_ext.js'][1408] = 0;
  _$jscoverage['js/vs_ext.js'][1410] = 0;
  _$jscoverage['js/vs_ext.js'][1484] = 0;
  _$jscoverage['js/vs_ext.js'][1486] = 0;
  _$jscoverage['js/vs_ext.js'][1495] = 0;
  _$jscoverage['js/vs_ext.js'][1497] = 0;
  _$jscoverage['js/vs_ext.js'][1499] = 0;
  _$jscoverage['js/vs_ext.js'][1501] = 0;
  _$jscoverage['js/vs_ext.js'][1502] = 0;
  _$jscoverage['js/vs_ext.js'][1503] = 0;
  _$jscoverage['js/vs_ext.js'][1504] = 0;
  _$jscoverage['js/vs_ext.js'][1513] = 0;
  _$jscoverage['js/vs_ext.js'][1514] = 0;
  _$jscoverage['js/vs_ext.js'][1516] = 0;
  _$jscoverage['js/vs_ext.js'][1529] = 0;
  _$jscoverage['js/vs_ext.js'][1531] = 0;
  _$jscoverage['js/vs_ext.js'][1532] = 0;
  _$jscoverage['js/vs_ext.js'][1535] = 0;
  _$jscoverage['js/vs_ext.js'][1536] = 0;
  _$jscoverage['js/vs_ext.js'][1538] = 0;
  _$jscoverage['js/vs_ext.js'][1540] = 0;
  _$jscoverage['js/vs_ext.js'][1542] = 0;
  _$jscoverage['js/vs_ext.js'][1543] = 0;
  _$jscoverage['js/vs_ext.js'][1546] = 0;
  _$jscoverage['js/vs_ext.js'][1548] = 0;
  _$jscoverage['js/vs_ext.js'][1572] = 0;
  _$jscoverage['js/vs_ext.js'][1573] = 0;
  _$jscoverage['js/vs_ext.js'][1599] = 0;
  _$jscoverage['js/vs_ext.js'][1601] = 0;
  _$jscoverage['js/vs_ext.js'][1602] = 0;
  _$jscoverage['js/vs_ext.js'][1605] = 0;
  _$jscoverage['js/vs_ext.js'][1607] = 0;
  _$jscoverage['js/vs_ext.js'][1609] = 0;
  _$jscoverage['js/vs_ext.js'][1610] = 0;
  _$jscoverage['js/vs_ext.js'][1625] = 0;
  _$jscoverage['js/vs_ext.js'][1626] = 0;
  _$jscoverage['js/vs_ext.js'][1628] = 0;
  _$jscoverage['js/vs_ext.js'][1630] = 0;
  _$jscoverage['js/vs_ext.js'][1631] = 0;
  _$jscoverage['js/vs_ext.js'][1633] = 0;
  _$jscoverage['js/vs_ext.js'][1643] = 0;
  _$jscoverage['js/vs_ext.js'][1645] = 0;
  _$jscoverage['js/vs_ext.js'][1646] = 0;
  _$jscoverage['js/vs_ext.js'][1661] = 0;
  _$jscoverage['js/vs_ext.js'][1671] = 0;
  _$jscoverage['js/vs_ext.js'][1683] = 0;
  _$jscoverage['js/vs_ext.js'][1695] = 0;
  _$jscoverage['js/vs_ext.js'][1698] = 0;
  _$jscoverage['js/vs_ext.js'][1704] = 0;
  _$jscoverage['js/vs_ext.js'][1715] = 0;
  _$jscoverage['js/vs_ext.js'][1716] = 0;
  _$jscoverage['js/vs_ext.js'][1717] = 0;
  _$jscoverage['js/vs_ext.js'][1719] = 0;
  _$jscoverage['js/vs_ext.js'][1720] = 0;
  _$jscoverage['js/vs_ext.js'][1722] = 0;
  _$jscoverage['js/vs_ext.js'][1723] = 0;
  _$jscoverage['js/vs_ext.js'][1725] = 0;
  _$jscoverage['js/vs_ext.js'][1726] = 0;
  _$jscoverage['js/vs_ext.js'][1735] = 0;
  _$jscoverage['js/vs_ext.js'][1736] = 0;
  _$jscoverage['js/vs_ext.js'][1738] = 0;
  _$jscoverage['js/vs_ext.js'][1739] = 0;
  _$jscoverage['js/vs_ext.js'][1741] = 0;
  _$jscoverage['js/vs_ext.js'][1757] = 0;
  _$jscoverage['js/vs_ext.js'][1771] = 0;
  _$jscoverage['js/vs_ext.js'][1773] = 0;
  _$jscoverage['js/vs_ext.js'][1774] = 0;
  _$jscoverage['js/vs_ext.js'][1778] = 0;
  _$jscoverage['js/vs_ext.js'][1779] = 0;
  _$jscoverage['js/vs_ext.js'][1792] = 0;
  _$jscoverage['js/vs_ext.js'][1793] = 0;
  _$jscoverage['js/vs_ext.js'][1795] = 0;
  _$jscoverage['js/vs_ext.js'][1796] = 0;
  _$jscoverage['js/vs_ext.js'][1798] = 0;
  _$jscoverage['js/vs_ext.js'][1799] = 0;
  _$jscoverage['js/vs_ext.js'][1803] = 0;
  _$jscoverage['js/vs_ext.js'][1804] = 0;
  _$jscoverage['js/vs_ext.js'][1806] = 0;
  _$jscoverage['js/vs_ext.js'][1807] = 0;
  _$jscoverage['js/vs_ext.js'][1816] = 0;
  _$jscoverage['js/vs_ext.js'][1826] = 0;
  _$jscoverage['js/vs_ext.js'][1879] = 0;
  _$jscoverage['js/vs_ext.js'][1881] = 0;
  _$jscoverage['js/vs_ext.js'][1882] = 0;
  _$jscoverage['js/vs_ext.js'][1883] = 0;
  _$jscoverage['js/vs_ext.js'][1885] = 0;
  _$jscoverage['js/vs_ext.js'][1894] = 0;
  _$jscoverage['js/vs_ext.js'][1902] = 0;
  _$jscoverage['js/vs_ext.js'][1905] = 0;
  _$jscoverage['js/vs_ext.js'][1948] = 0;
  _$jscoverage['js/vs_ext.js'][1949] = 0;
  _$jscoverage['js/vs_ext.js'][1950] = 0;
  _$jscoverage['js/vs_ext.js'][1951] = 0;
  _$jscoverage['js/vs_ext.js'][1967] = 0;
  _$jscoverage['js/vs_ext.js'][1968] = 0;
  _$jscoverage['js/vs_ext.js'][1970] = 0;
  _$jscoverage['js/vs_ext.js'][1972] = 0;
  _$jscoverage['js/vs_ext.js'][1974] = 0;
  _$jscoverage['js/vs_ext.js'][1975] = 0;
  _$jscoverage['js/vs_ext.js'][1976] = 0;
  _$jscoverage['js/vs_ext.js'][1978] = 0;
  _$jscoverage['js/vs_ext.js'][1979] = 0;
  _$jscoverage['js/vs_ext.js'][1994] = 0;
  _$jscoverage['js/vs_ext.js'][1995] = 0;
  _$jscoverage['js/vs_ext.js'][1996] = 0;
  _$jscoverage['js/vs_ext.js'][1998] = 0;
  _$jscoverage['js/vs_ext.js'][1999] = 0;
  _$jscoverage['js/vs_ext.js'][2000] = 0;
  _$jscoverage['js/vs_ext.js'][2001] = 0;
  _$jscoverage['js/vs_ext.js'][2002] = 0;
  _$jscoverage['js/vs_ext.js'][2003] = 0;
  _$jscoverage['js/vs_ext.js'][2004] = 0;
  _$jscoverage['js/vs_ext.js'][2005] = 0;
  _$jscoverage['js/vs_ext.js'][2007] = 0;
  _$jscoverage['js/vs_ext.js'][2009] = 0;
  _$jscoverage['js/vs_ext.js'][2012] = 0;
  _$jscoverage['js/vs_ext.js'][2013] = 0;
  _$jscoverage['js/vs_ext.js'][2017] = 0;
  _$jscoverage['js/vs_ext.js'][2025] = 0;
  _$jscoverage['js/vs_ext.js'][2027] = 0;
  _$jscoverage['js/vs_ext.js'][2029] = 0;
  _$jscoverage['js/vs_ext.js'][2031] = 0;
  _$jscoverage['js/vs_ext.js'][2032] = 0;
  _$jscoverage['js/vs_ext.js'][2033] = 0;
  _$jscoverage['js/vs_ext.js'][2034] = 0;
  _$jscoverage['js/vs_ext.js'][2035] = 0;
  _$jscoverage['js/vs_ext.js'][2037] = 0;
  _$jscoverage['js/vs_ext.js'][2045] = 0;
  _$jscoverage['js/vs_ext.js'][2047] = 0;
  _$jscoverage['js/vs_ext.js'][2048] = 0;
  _$jscoverage['js/vs_ext.js'][2049] = 0;
  _$jscoverage['js/vs_ext.js'][2051] = 0;
  _$jscoverage['js/vs_ext.js'][2052] = 0;
  _$jscoverage['js/vs_ext.js'][2054] = 0;
  _$jscoverage['js/vs_ext.js'][2056] = 0;
  _$jscoverage['js/vs_ext.js'][2058] = 0;
  _$jscoverage['js/vs_ext.js'][2060] = 0;
  _$jscoverage['js/vs_ext.js'][2061] = 0;
  _$jscoverage['js/vs_ext.js'][2062] = 0;
  _$jscoverage['js/vs_ext.js'][2063] = 0;
  _$jscoverage['js/vs_ext.js'][2065] = 0;
  _$jscoverage['js/vs_ext.js'][2067] = 0;
  _$jscoverage['js/vs_ext.js'][2068] = 0;
  _$jscoverage['js/vs_ext.js'][2072] = 0;
  _$jscoverage['js/vs_ext.js'][2073] = 0;
  _$jscoverage['js/vs_ext.js'][2074] = 0;
  _$jscoverage['js/vs_ext.js'][2077] = 0;
  _$jscoverage['js/vs_ext.js'][2079] = 0;
  _$jscoverage['js/vs_ext.js'][2081] = 0;
  _$jscoverage['js/vs_ext.js'][2082] = 0;
  _$jscoverage['js/vs_ext.js'][2083] = 0;
  _$jscoverage['js/vs_ext.js'][2084] = 0;
  _$jscoverage['js/vs_ext.js'][2105] = 0;
  _$jscoverage['js/vs_ext.js'][2107] = 0;
  _$jscoverage['js/vs_ext.js'][2110] = 0;
  _$jscoverage['js/vs_ext.js'][2112] = 0;
  _$jscoverage['js/vs_ext.js'][2115] = 0;
  _$jscoverage['js/vs_ext.js'][2116] = 0;
  _$jscoverage['js/vs_ext.js'][2118] = 0;
  _$jscoverage['js/vs_ext.js'][2119] = 0;
  _$jscoverage['js/vs_ext.js'][2120] = 0;
  _$jscoverage['js/vs_ext.js'][2123] = 0;
  _$jscoverage['js/vs_ext.js'][2124] = 0;
  _$jscoverage['js/vs_ext.js'][2125] = 0;
  _$jscoverage['js/vs_ext.js'][2127] = 0;
  _$jscoverage['js/vs_ext.js'][2128] = 0;
  _$jscoverage['js/vs_ext.js'][2129] = 0;
  _$jscoverage['js/vs_ext.js'][2130] = 0;
  _$jscoverage['js/vs_ext.js'][2132] = 0;
  _$jscoverage['js/vs_ext.js'][2134] = 0;
  _$jscoverage['js/vs_ext.js'][2136] = 0;
  _$jscoverage['js/vs_ext.js'][2137] = 0;
  _$jscoverage['js/vs_ext.js'][2139] = 0;
  _$jscoverage['js/vs_ext.js'][2140] = 0;
  _$jscoverage['js/vs_ext.js'][2165] = 0;
  _$jscoverage['js/vs_ext.js'][2167] = 0;
  _$jscoverage['js/vs_ext.js'][2170] = 0;
  _$jscoverage['js/vs_ext.js'][2171] = 0;
  _$jscoverage['js/vs_ext.js'][2172] = 0;
  _$jscoverage['js/vs_ext.js'][2174] = 0;
  _$jscoverage['js/vs_ext.js'][2176] = 0;
  _$jscoverage['js/vs_ext.js'][2178] = 0;
  _$jscoverage['js/vs_ext.js'][2180] = 0;
  _$jscoverage['js/vs_ext.js'][2181] = 0;
  _$jscoverage['js/vs_ext.js'][2183] = 0;
  _$jscoverage['js/vs_ext.js'][2184] = 0;
  _$jscoverage['js/vs_ext.js'][2199] = 0;
  _$jscoverage['js/vs_ext.js'][2201] = 0;
  _$jscoverage['js/vs_ext.js'][2209] = 0;
  _$jscoverage['js/vs_ext.js'][2210] = 0;
  _$jscoverage['js/vs_ext.js'][2211] = 0;
  _$jscoverage['js/vs_ext.js'][2213] = 0;
  _$jscoverage['js/vs_ext.js'][2214] = 0;
  _$jscoverage['js/vs_ext.js'][2215] = 0;
  _$jscoverage['js/vs_ext.js'][2216] = 0;
  _$jscoverage['js/vs_ext.js'][2217] = 0;
  _$jscoverage['js/vs_ext.js'][2219] = 0;
  _$jscoverage['js/vs_ext.js'][2233] = 0;
  _$jscoverage['js/vs_ext.js'][2235] = 0;
  _$jscoverage['js/vs_ext.js'][2237] = 0;
  _$jscoverage['js/vs_ext.js'][2239] = 0;
  _$jscoverage['js/vs_ext.js'][2242] = 0;
  _$jscoverage['js/vs_ext.js'][2244] = 0;
  _$jscoverage['js/vs_ext.js'][2245] = 0;
  _$jscoverage['js/vs_ext.js'][2247] = 0;
  _$jscoverage['js/vs_ext.js'][2248] = 0;
  _$jscoverage['js/vs_ext.js'][2250] = 0;
  _$jscoverage['js/vs_ext.js'][2251] = 0;
  _$jscoverage['js/vs_ext.js'][2253] = 0;
  _$jscoverage['js/vs_ext.js'][2254] = 0;
  _$jscoverage['js/vs_ext.js'][2256] = 0;
  _$jscoverage['js/vs_ext.js'][2258] = 0;
  _$jscoverage['js/vs_ext.js'][2260] = 0;
  _$jscoverage['js/vs_ext.js'][2261] = 0;
  _$jscoverage['js/vs_ext.js'][2263] = 0;
  _$jscoverage['js/vs_ext.js'][2265] = 0;
  _$jscoverage['js/vs_ext.js'][2266] = 0;
  _$jscoverage['js/vs_ext.js'][2269] = 0;
  _$jscoverage['js/vs_ext.js'][2271] = 0;
  _$jscoverage['js/vs_ext.js'][2272] = 0;
  _$jscoverage['js/vs_ext.js'][2274] = 0;
  _$jscoverage['js/vs_ext.js'][2275] = 0;
  _$jscoverage['js/vs_ext.js'][2276] = 0;
  _$jscoverage['js/vs_ext.js'][2282] = 0;
  _$jscoverage['js/vs_ext.js'][2284] = 0;
  _$jscoverage['js/vs_ext.js'][2286] = 0;
  _$jscoverage['js/vs_ext.js'][2287] = 0;
  _$jscoverage['js/vs_ext.js'][2291] = 0;
  _$jscoverage['js/vs_ext.js'][2293] = 0;
  _$jscoverage['js/vs_ext.js'][2296] = 0;
  _$jscoverage['js/vs_ext.js'][2298] = 0;
  _$jscoverage['js/vs_ext.js'][2299] = 0;
  _$jscoverage['js/vs_ext.js'][2302] = 0;
  _$jscoverage['js/vs_ext.js'][2303] = 0;
  _$jscoverage['js/vs_ext.js'][2306] = 0;
  _$jscoverage['js/vs_ext.js'][2308] = 0;
  _$jscoverage['js/vs_ext.js'][2310] = 0;
  _$jscoverage['js/vs_ext.js'][2312] = 0;
  _$jscoverage['js/vs_ext.js'][2315] = 0;
  _$jscoverage['js/vs_ext.js'][2316] = 0;
  _$jscoverage['js/vs_ext.js'][2318] = 0;
  _$jscoverage['js/vs_ext.js'][2319] = 0;
  _$jscoverage['js/vs_ext.js'][2320] = 0;
  _$jscoverage['js/vs_ext.js'][2323] = 0;
  _$jscoverage['js/vs_ext.js'][2325] = 0;
  _$jscoverage['js/vs_ext.js'][2329] = 0;
  _$jscoverage['js/vs_ext.js'][2332] = 0;
  _$jscoverage['js/vs_ext.js'][2342] = 0;
  _$jscoverage['js/vs_ext.js'][2344] = 0;
  _$jscoverage['js/vs_ext.js'][2358] = 0;
  _$jscoverage['js/vs_ext.js'][2359] = 0;
  _$jscoverage['js/vs_ext.js'][2361] = 0;
  _$jscoverage['js/vs_ext.js'][2363] = 0;
  _$jscoverage['js/vs_ext.js'][2365] = 0;
  _$jscoverage['js/vs_ext.js'][2367] = 0;
  _$jscoverage['js/vs_ext.js'][2371] = 0;
  _$jscoverage['js/vs_ext.js'][2373] = 0;
  _$jscoverage['js/vs_ext.js'][2387] = 0;
  _$jscoverage['js/vs_ext.js'][2395] = 0;
  _$jscoverage['js/vs_ext.js'][2398] = 0;
  _$jscoverage['js/vs_ext.js'][2402] = 0;
  _$jscoverage['js/vs_ext.js'][2406] = 0;
}
_$jscoverage['js/vs_ext.js'].source = ["<span class=\"c\">/** @license</span>","<span class=\"c\">  Copyright (C) 2009-2012. David Thevenin, ViniSketch SARL (c), and </span>","<span class=\"c\">  contributors. All rights reserved</span>","<span class=\"c\">  </span>","<span class=\"c\">  This program is free software: you can redistribute it and/or modify</span>","<span class=\"c\">  it under the terms of the GNU Lesser General Public License as published</span>","<span class=\"c\">  by the Free Software Foundation, either version 3 of the License, or</span>","<span class=\"c\">  (at your option) any later version.</span>","<span class=\"c\">  </span>","<span class=\"c\">  This program is distributed in the hope that it will be useful,</span>","<span class=\"c\">  but WITHOUT ANY WARRANTY; without even the implied warranty of</span>","<span class=\"c\">  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the</span>","<span class=\"c\">  GNU Lesser General Public License for more details.</span>","<span class=\"c\">  </span>","<span class=\"c\">  You should have received a copy of the GNU Lesser General Public License</span>","<span class=\"c\">  along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.</span>","<span class=\"c\">*/</span>","","<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>window<span class=\"k\">,</span> undefined<span class=\"k\">)</span> <span class=\"k\">{</span>","","<span class=\"k\">var</span> document <span class=\"k\">=</span> window<span class=\"k\">.</span>document<span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\">  Copyright (C) 2009-2012. David Thevenin, ViniSketch SARL (c), and </span>","<span class=\"c\">  contributors. All rights reserved</span>","<span class=\"c\">  </span>","<span class=\"c\">  This program is free software: you can redistribute it and/or modify</span>","<span class=\"c\">  it under the terms of the GNU Lesser General Public License as published</span>","<span class=\"c\">  by the Free Software Foundation, either version 3 of the License, or</span>","<span class=\"c\">  (at your option) any later version.</span>","<span class=\"c\">  </span>","<span class=\"c\">  This program is distributed in the hope that it will be useful,</span>","<span class=\"c\">  but WITHOUT ANY WARRANTY; without even the implied warranty of</span>","<span class=\"c\">  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the</span>","<span class=\"c\">  GNU Lesser General Public License for more details.</span>","<span class=\"c\">  </span>","<span class=\"c\">  You should have received a copy of the GNU Lesser General Public License</span>","<span class=\"c\">  along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.</span>","<span class=\"c\">*/</span>","","<span class=\"c\">/********************************************************************</span>","<span class=\"c\">                   </span>","<span class=\"c\">*********************************************************************/</span>","<span class=\"c\">/** @private */</span>","<span class=\"k\">var</span> vs <span class=\"k\">=</span> window<span class=\"k\">.</span>vs<span class=\"k\">,</span>","  util <span class=\"k\">=</span> vs<span class=\"k\">.</span>util<span class=\"k\">,</span>","  core <span class=\"k\">=</span> vs<span class=\"k\">.</span>core<span class=\"k\">,</span>","  ui <span class=\"k\">=</span> vs<span class=\"k\">.</span>ui<span class=\"k\">,</span>","  fx <span class=\"k\">=</span> vs<span class=\"k\">.</span>fx<span class=\"k\">,</span>","  ext <span class=\"k\">=</span> vs<span class=\"k\">.</span>ext<span class=\"k\">,</span>","  ext_ui <span class=\"k\">=</span> ext<span class=\"k\">.</span>ui<span class=\"k\">,</span>","  ext_fx <span class=\"k\">=</span> ext<span class=\"k\">.</span>fx<span class=\"k\">;</span>","<span class=\"c\">/**</span>","<span class=\"c\">  Copyright (C) 2009-2012. David Thevenin, ViniSketch SARL (c), and </span>","<span class=\"c\">  contributors. All rights reserved</span>","<span class=\"c\">  </span>","<span class=\"c\">  This program is free software: you can redistribute it and/or modify</span>","<span class=\"c\">  it under the terms of the GNU Lesser General Public License as published</span>","<span class=\"c\">  by the Free Software Foundation, either version 3 of the License, or</span>","<span class=\"c\">  (at your option) any later version.</span>","<span class=\"c\">  </span>","<span class=\"c\">  This program is distributed in the hope that it will be useful,</span>","<span class=\"c\">  but WITHOUT ANY WARRANTY; without even the implied warranty of</span>","<span class=\"c\">  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the</span>","<span class=\"c\">  GNU Lesser General Public License for more details.</span>","<span class=\"c\">  </span>","<span class=\"c\">  You should have received a copy of the GNU Lesser General Public License</span>","<span class=\"c\">  along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.</span>","<span class=\"c\">*/</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> *  The vs.ext.ui.GMap class</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  @extends vs.ui.View</span>","<span class=\"c\"> *  @class</span>","<span class=\"c\"> *  GMap provides a widget for embedding maps directly into your application. </span>","<span class=\"c\"> *  This widget uses the Google GMaps Javascript API V3, especially optimized </span>","<span class=\"c\"> *  to run on mobile platform.</span>","<span class=\"c\"> *  &lt;p&gt;</span>","<span class=\"c\"> *  The widget allows to add annotations which are marker + information bubble</span>","<span class=\"c\"> *  which are added to the map.</span>","<span class=\"c\"> *  &lt;p&gt;</span>","<span class=\"c\"> *  Events:</span>","<span class=\"c\"> *  &lt;ul&gt; mapload : fire when the map is loaded and ready to use.&lt;/ul&gt;</span>","<span class=\"c\"> *  &lt;ul&gt; annotationselect : fire when a marker's information bubble is </span>","<span class=\"c\"> *       selected.&lt;/ul&gt;</span>","<span class=\"c\"> *  &lt;p&gt;</span>","<span class=\"c\"> *  @example</span>","<span class=\"c\"> *  </span>","<span class=\"c\"> *  @author David Thevenin</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @name vs.ext.ui.GMap</span>","<span class=\"c\"> *  @constructor</span>","<span class=\"c\"> *   Creates a new GMap.</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  @param {Object} config the configuration structure [mandatory]</span>","<span class=\"c\"> */</span>","<span class=\"k\">var</span> GMap <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>config<span class=\"k\">)</span>","<span class=\"k\">{</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>parent <span class=\"k\">=</span> vs<span class=\"k\">.</span>ui<span class=\"k\">.</span>View<span class=\"k\">;</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>parent <span class=\"k\">(</span>config<span class=\"k\">);</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>constructor <span class=\"k\">=</span> GMap<span class=\"k\">;</span>","  ","  <span class=\"k\">this</span><span class=\"k\">.</span>_center <span class=\"k\">=</span> <span class=\"k\">new</span> Array <span class=\"k\">();</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>_center <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">48.83763339660763</span><span class=\"k\">;</span> ","  <span class=\"k\">this</span><span class=\"k\">.</span>_center <span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">2.3397827148437544</span><span class=\"k\">;</span>","  ","  <span class=\"k\">if</span> <span class=\"k\">(!</span>GMap<span class=\"k\">.</span>__google_loaded__<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>GMap<span class=\"k\">.</span>__google_wait_loaded__<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      GMap<span class=\"k\">.</span>__google_wait_loaded__ <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","      vs<span class=\"k\">.</span>util<span class=\"k\">.</span>importFile ","  <span class=\"k\">(</span><span class=\"s\">\"http://maps.google.com/maps/api/js?sensor=true&amp;callback=vs.ext.ui.GMap.__on_laoded\"</span><span class=\"k\">,</span> <span class=\"k\">null</span><span class=\"k\">,</span> <span class=\"k\">null</span><span class=\"k\">,</span> <span class=\"s\">'js'</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","    ","    GMap<span class=\"k\">.</span>_to_finish_init<span class=\"k\">.</span>push <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","  <span class=\"k\">}</span>","  ","  <span class=\"k\">this</span><span class=\"k\">.</span>__annotations <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * @private</span>","<span class=\"c\"> */</span>","GMap<span class=\"k\">.</span>NO_MARKER <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","GMap<span class=\"k\">.</span>DEVICE_IMAGE_MARKER <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">;</span>","GMap<span class=\"k\">.</span>IMAGE_MARKER <span class=\"k\">=</span> <span class=\"s\">2</span><span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * @private</span>","<span class=\"c\"> */</span>","GMap<span class=\"k\">.</span>_anotation_templates_ <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","GMap<span class=\"k\">.</span>_anotation_templates_ <span class=\"k\">[</span><span class=\"s\">'default'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","  marker<span class=\"k\">:</span> <span class=\"k\">{</span>","    type<span class=\"k\">:</span> GMap<span class=\"k\">.</span>DEVICE_IMAGE_MARKER","  <span class=\"k\">}</span><span class=\"k\">,</span>","  infoWindow <span class=\"k\">:</span>","  <span class=\"s\">\"&lt;div class=</span><span class=\"t\">\\\"</span><span class=\"s\">vs_ext_ui_gmap_info</span><span class=\"t\">\\\"</span><span class=\"s\">&gt;</span><span class=\"t\">\\</span>","<span class=\"s\">    &lt;div&gt;{title}&lt;/div&gt;</span><span class=\"t\">\\</span>","<span class=\"s\">    &lt;div&gt;{subtitle}&lt;/div&gt;</span><span class=\"t\">\\</span>","<span class=\"s\">  &lt;/div&gt;\"</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * @private</span>","<span class=\"c\"> */</span>","GMap<span class=\"k\">.</span>__google_wait_loaded__ <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * @private</span>","<span class=\"c\"> */</span>","GMap<span class=\"k\">.</span>__google_loaded__ <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * @private</span>","<span class=\"c\"> */</span>","GMap<span class=\"k\">.</span>_to_finish_init <span class=\"k\">=</span> <span class=\"k\">new</span> Array <span class=\"k\">();</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * @private</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> */</span>","GMap<span class=\"k\">.</span>__on_laoded <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","<span class=\"k\">{</span>","  <span class=\"k\">var</span> i<span class=\"k\">,</span> l<span class=\"k\">;</span> ","  ","  GMap<span class=\"k\">.</span>__google_loaded__ <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","  GMap<span class=\"k\">.</span>__google_wait_loaded__ <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","  ","  createInfoWindowClass <span class=\"k\">();</span>","  ","  <span class=\"k\">for</span> <span class=\"k\">(</span>i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> l <span class=\"k\">=</span> GMap<span class=\"k\">.</span>_to_finish_init<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> l<span class=\"k\">;</span> i <span class=\"k\">++)</span>","  <span class=\"k\">{</span>","    GMap<span class=\"k\">.</span>_to_finish_init <span class=\"k\">[</span>i<span class=\"k\">].</span>finishInit <span class=\"k\">();</span>","  <span class=\"k\">}</span>","  ","  GMap<span class=\"k\">.</span>_to_finish_init <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","<span class=\"k\">}</span>","","GMap<span class=\"k\">.</span>prototype <span class=\"k\">=</span> <span class=\"k\">{</span>",""," <span class=\"c\">/**********************************************************************</span>","<span class=\"c\"> </span>","<span class=\"c\"> *********************************************************************/</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @type {number}</span>","<span class=\"c\">   */</span>","  _zoom<span class=\"k\">:</span> <span class=\"s\">10</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @type {number}</span>","<span class=\"c\">   */</span>","  _tilt<span class=\"k\">:</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @type {boolean}</span>","<span class=\"c\">   */</span>","  _scroll<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @type {boolean}</span>","<span class=\"c\">   */</span>","  _tap_to_zoom<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @type {number}</span>","<span class=\"c\">   */</span>","  _max_zoom<span class=\"k\">:</span> <span class=\"s\">20</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @type {number}</span>","<span class=\"c\">   */</span>","  _min_zoom<span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @type {boolean}</span>","<span class=\"c\">   */</span>","  _zoom_control<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @type {boolean}</span>","<span class=\"c\">   */</span>","  _street_view_control<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @type {Array&lt;.number&gt;}</span>","<span class=\"c\">   */</span>","  _center<span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @private</span>","<span class=\"c\">   */</span>","  _gmap<span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">,</span>","  __init_finished<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * @private</span>","<span class=\"c\">   */</span>","  __annotations<span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">,</span>","","  <span class=\"c\">/*****************************************************************</span>","<span class=\"c\">   *</span>","<span class=\"c\">   ****************************************************************/</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   */</span>","  destructor <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    <span class=\"k\">delete</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_gmap<span class=\"k\">);</span>","    ","    vs<span class=\"k\">.</span>ui<span class=\"k\">.</span>View<span class=\"k\">.</span>prototype<span class=\"k\">.</span>destructor<span class=\"k\">.</span>call <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   */</span>","  initComponent <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    vs<span class=\"k\">.</span>ui<span class=\"k\">.</span>View<span class=\"k\">.</span>prototype<span class=\"k\">.</span>initComponent<span class=\"k\">.</span>call <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>GMap<span class=\"k\">.</span>__google_loaded__<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>finishInit <span class=\"k\">();</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @private</span>","<span class=\"c\">   */</span>","  finishInit <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    <span class=\"k\">var</span> latLng <span class=\"k\">=</span> <span class=\"k\">new</span> google<span class=\"k\">.</span>maps<span class=\"k\">.</span>LatLng <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_center <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">],</span> <span class=\"k\">this</span><span class=\"k\">.</span>_center <span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]);</span>","    ","    <span class=\"k\">var</span> myOptions <span class=\"k\">=</span> <span class=\"k\">{</span>","      zoom<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>_zoom<span class=\"k\">,</span>","      center<span class=\"k\">:</span> latLng<span class=\"k\">,</span>","      disableDefaultUI<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","      draggable<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>_scroll<span class=\"k\">,</span>","      maxZoom<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>_max_zoom<span class=\"k\">,</span>","      minZoom<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>_min_zoom<span class=\"k\">,</span>","      disableDoubleClickZoom<span class=\"k\">:</span> <span class=\"k\">!</span><span class=\"k\">this</span><span class=\"k\">.</span>_tap_to_zoom<span class=\"k\">,</span>","      streetViewControl<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>_street_view_control<span class=\"k\">,</span>","      streetViewControlOptions<span class=\"k\">:</span> <span class=\"k\">{</span>","        position<span class=\"k\">:</span> google<span class=\"k\">.</span>maps<span class=\"k\">.</span>ControlPosition<span class=\"k\">.</span>LEFT_TOP","      <span class=\"k\">}</span><span class=\"k\">,</span>","      zoomControl<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>_zoom_control<span class=\"k\">,</span>","      zoomControlOptions<span class=\"k\">:</span> <span class=\"k\">{</span>","        position<span class=\"k\">:</span> google<span class=\"k\">.</span>maps<span class=\"k\">.</span>ControlPosition<span class=\"k\">.</span>LEFT_BOTTOM<span class=\"k\">,</span>","        style<span class=\"k\">:</span> google<span class=\"k\">.</span>maps<span class=\"k\">.</span>ZoomControlStyle<span class=\"k\">.</span>SMALL","      <span class=\"k\">}</span><span class=\"k\">,</span>","      mapTypeControlOptions<span class=\"k\">:</span> <span class=\"k\">{</span>","        style<span class=\"k\">:</span> google<span class=\"k\">.</span>maps<span class=\"k\">.</span>ControlPosition<span class=\"k\">.</span>HORIZONTAL_BAR","      <span class=\"k\">}</span><span class=\"k\">,</span>","      mapTypeId<span class=\"k\">:</span> google<span class=\"k\">.</span>maps<span class=\"k\">.</span>MapTypeId<span class=\"k\">.</span>ROADMAP<span class=\"k\">,</span>","      mapTypeControlOptions<span class=\"k\">:</span> <span class=\"k\">{</span>","        style<span class=\"k\">:</span> google<span class=\"k\">.</span>maps<span class=\"k\">.</span>MapTypeControlStyle<span class=\"k\">.</span>DROPDOWN_MENU","     <span class=\"k\">}</span>    ","    <span class=\"k\">}</span><span class=\"k\">;</span>","    ","    <span class=\"k\">this</span><span class=\"k\">.</span>_gmap <span class=\"k\">=</span> <span class=\"k\">new</span> google<span class=\"k\">.</span>maps<span class=\"k\">.</span>Map <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>view<span class=\"k\">,</span> myOptions<span class=\"k\">);</span>","    ","    <span class=\"k\">var</span> self <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","    setTimeout <span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span> clear_view_style <span class=\"k\">(</span>self<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @private</span>","<span class=\"c\">   */</span>","  __init_did_finish <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>__init_finished <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","","<span class=\"c\">//     this.center = this._center;</span>","<span class=\"c\">//     this.maxZoom = this._max_zoom;</span>","<span class=\"c\">//     this.minZoom = this._min_zoom;</span>","<span class=\"c\">//     this.scroll = this._scroll;</span>","<span class=\"c\">//     this.tapToZoom = this._tap_to_zoom;</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>streetViewControl <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_street_view_control<span class=\"k\">;</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>zoomControl <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_zoom_control<span class=\"k\">;</span>    ","","    <span class=\"k\">this</span><span class=\"k\">.</span>propagate <span class=\"k\">(</span><span class=\"s\">'mapload'</span><span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","    ","  <span class=\"c\">/**</span>","<span class=\"c\">   * Returns true if the map is ready to use</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.ext.ui.GMap#isReady </span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   * @return Boolean </span>","<span class=\"c\">   */</span>","  isReady <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>__init_finished<span class=\"k\">;</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * Returns a reference to the Google Maps object.</span>","<span class=\"c\">   * &lt;p/&gt;</span>","<span class=\"c\">   * This object uses the Google GMaps Javascript API V3.</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.ext.ui.GMap#getGoogleMapObject </span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   * @return GMap the google.maps.Map object</span>","<span class=\"c\">   */</span>","  getGoogleMapObject <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_gmap<span class=\"k\">;</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * Shows the center marker of the map</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.ext.ui.GMap#showCenterMark </span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  showCenterMark <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_center_mark<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_center_mark <span class=\"k\">=</span> <span class=\"k\">new</span> google<span class=\"k\">.</span>maps<span class=\"k\">.</span>Marker<span class=\"k\">(</span><span class=\"k\">{</span>","        position<span class=\"k\">:</span> <span class=\"k\">new</span> google<span class=\"k\">.</span>maps<span class=\"k\">.</span>LatLng <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_center <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">],</span> <span class=\"k\">this</span><span class=\"k\">.</span>_center <span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]),</span>","        icon<span class=\"k\">:</span> <span class=\"s\">\"mapCenter.png\"</span><span class=\"k\">,</span>","      <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">this</span><span class=\"k\">.</span>_center_mark<span class=\"k\">.</span>setGMap <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_gmap<span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * Hides the center marker of the map</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.ext.ui.GMap#hideCenterMark </span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  hideCenterMark <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_center_mark<span class=\"k\">)</span>","    <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    ","    <span class=\"k\">this</span><span class=\"k\">.</span>_center_mark<span class=\"k\">.</span>setGMap <span class=\"k\">(</span><span class=\"k\">null</span><span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","<span class=\"c\">/********************************************************************</span>","<span class=\"c\">                  Annotations management</span>","<span class=\"c\">********************************************************************/</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * Adds the specified annotation to the map view.</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.ext.ui.GMap#addAnnotation </span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @param {string} id The identifier of the marker</span>","<span class=\"c\">   * @param {number} lat The latitude between -90 degrees and +90 degrees</span>","<span class=\"c\">   * @param {number} lon The longitude between -180 degrees and +180 degrees</span>","<span class=\"c\">   * @param {Object} info The information window data (should follow template spec)</span>","<span class=\"c\">   * @param {string} name A annotation type (a specific image can be assign to  </span>","<span class=\"c\">   *    type) [Optional]</span>","<span class=\"c\">   * @return {GMap.Annotation} the annotation id (need for removing it)</span>","<span class=\"c\">   */</span>","  addAnnotation <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>id<span class=\"k\">,</span> lat<span class=\"k\">,</span> lon<span class=\"k\">,</span> info<span class=\"k\">,</span> type<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>__init_finished<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    ","    <span class=\"k\">if</span> <span class=\"k\">(!</span>util<span class=\"k\">.</span>isString <span class=\"k\">(</span>id<span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"k\">!</span>id<span class=\"k\">)</span> id <span class=\"k\">=</span> core<span class=\"k\">.</span>createId <span class=\"k\">();</span>","    ","    <span class=\"k\">var</span> annotation <span class=\"k\">=</span> <span class=\"k\">new</span> GMap<span class=\"k\">.</span>Annotation <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> id<span class=\"k\">,</span> lat<span class=\"k\">,</span> lon<span class=\"k\">,</span> info<span class=\"k\">,</span> type<span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>__annotations <span class=\"k\">[</span>id<span class=\"k\">]</span> <span class=\"k\">=</span> annotation<span class=\"k\">;</span>","    <span class=\"k\">return</span> annotation<span class=\"k\">;</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * Adds the specified annotation to the map view.</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.ext.ui.GMap#setAnnotationTemplate </span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @param {string} name The name</span>","<span class=\"c\">   * @param {Object} marker The marker information</span>","<span class=\"c\">   * @param {string} infoWindow The info window HTML template</span>","<span class=\"c\">   */</span>","  setAnnotationTemplate <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>name<span class=\"k\">,</span> marker<span class=\"k\">,</span> infoWindow<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>util<span class=\"k\">.</span>isString <span class=\"k\">(</span>name<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>name<span class=\"k\">)</span> <span class=\"k\">return</span><span class=\"k\">;</span>","    ","    <span class=\"k\">var</span> default_tmp <span class=\"k\">=</span> GMap<span class=\"k\">.</span>_anotation_templates_ <span class=\"k\">[</span><span class=\"s\">'default'</span><span class=\"k\">];</span>","    ","    GMap<span class=\"k\">.</span>_anotation_templates_ <span class=\"k\">[</span>name<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","      marker<span class=\"k\">:</span> util<span class=\"k\">.</span>clone <span class=\"k\">((</span>marker<span class=\"k\">)?</span>marker<span class=\"k\">:</span>default_tmp<span class=\"k\">.</span>marker<span class=\"k\">),</span>","      infoWindow<span class=\"k\">:</span> util<span class=\"k\">.</span>clone <span class=\"k\">((</span>infoWindow<span class=\"k\">)?</span>infoWindow<span class=\"k\">:</span>default_tmp<span class=\"k\">.</span>infoWindow<span class=\"k\">)</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * Removes a specified annotation from the map view.</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.ext.ui.GMap#removeAnnotation</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   * @param {string/GMap.Annotation} id/annotation The identifier or the annotation</span>","<span class=\"c\">   */</span>","  removeAnnotation <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>id<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>util<span class=\"k\">.</span>isString <span class=\"k\">(</span>id<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> id<span class=\"k\">.</span>id<span class=\"k\">)</span> id <span class=\"k\">=</span> id<span class=\"k\">.</span>id<span class=\"k\">;</span>","    <span class=\"k\">var</span> annotation <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>__annotations <span class=\"k\">[</span>id<span class=\"k\">];</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>annotation<span class=\"k\">)</span> <span class=\"k\">return</span><span class=\"k\">;</span>","    ","    util<span class=\"k\">.</span>free <span class=\"k\">(</span>annotation<span class=\"k\">);</span>","    <span class=\"k\">delete</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__annotations <span class=\"k\">[</span>id<span class=\"k\">]);</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * Removes all annotations from the map view.</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.ext.ui.GMap#removeAnnotations </span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  removeAnnotations <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> id <span class=\"k\">in</span> <span class=\"k\">this</span><span class=\"k\">.</span>__annotations<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>removeAnnotation <span class=\"k\">(</span>id<span class=\"k\">);</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","<span class=\"c\">/********************************************************************</span>","<span class=\"c\">                  Annotations management</span>","<span class=\"c\">********************************************************************/</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * @name vs.ext.ui.GMap#annotationSelect </span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   */</span>","  annotationSelect <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>id<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>propagate <span class=\"k\">(</span><span class=\"s\">'annotationselect'</span><span class=\"k\">,</span> id<span class=\"k\">);</span>","  <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","util<span class=\"k\">.</span>extendClass <span class=\"k\">(</span>GMap<span class=\"k\">,</span> vs<span class=\"k\">.</span>ui<span class=\"k\">.</span>View<span class=\"k\">);</span>","","<span class=\"c\">/********************************************************************</span>","<span class=\"c\">                  Define class properties</span>","<span class=\"c\">********************************************************************/</span>","","util<span class=\"k\">.</span>defineClassProperties <span class=\"k\">(</span>GMap<span class=\"k\">,</span> <span class=\"k\">{</span>","","  <span class=\"s\">'scroll'</span><span class=\"k\">:</span> <span class=\"k\">{</span>","    <span class=\"c\">/** </span>","<span class=\"c\">     * Allow to scroll the map.</span>","<span class=\"c\">     * By default its set to true</span>","<span class=\"c\">     * @name vs.ext.ui.GMap#scroll </span>","<span class=\"c\">     * @type {boolean}</span>","<span class=\"c\">     */</span> ","    set <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>v<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>v<span class=\"k\">)</span>","      <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>_scroll <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      <span class=\"k\">else</span>","      <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>_scroll <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      ","      <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>__init_finished<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      ","      <span class=\"k\">this</span><span class=\"k\">.</span>_gmap<span class=\"k\">.</span>setOptions <span class=\"k\">(</span><span class=\"k\">{</span>draggable<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>_scroll<span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","  ","    <span class=\"c\">/** </span>","<span class=\"c\">     * @ignore</span>","<span class=\"c\">     * @type {boolean}</span>","<span class=\"c\">     */</span> ","    get <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","    <span class=\"k\">{</span>","      <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_scroll","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  <span class=\"s\">'tapToZoom'</span><span class=\"k\">:</span> <span class=\"k\">{</span>","    <span class=\"c\">/** </span>","<span class=\"c\">     * Enabled/disabled to zoom after user tap.</span>","<span class=\"c\">     * By default its set to true</span>","<span class=\"c\">     * @name vs.ext.ui.GMap#tapToZoom </span>","<span class=\"c\">     * @type {boolean}</span>","<span class=\"c\">     */</span> ","    set <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>v<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>v<span class=\"k\">)</span>","      <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>_tap_to_zoom <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      <span class=\"k\">else</span>","      <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>_tap_to_zoom <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      ","      <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>__init_finished<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      ","      <span class=\"k\">this</span><span class=\"k\">.</span>_gmap<span class=\"k\">.</span>setOptions <span class=\"k\">(</span><span class=\"k\">{</span>disableDoubleClickZoom<span class=\"k\">:</span> <span class=\"k\">!</span><span class=\"k\">this</span><span class=\"k\">.</span>_tap_to_zoom<span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","  ","    <span class=\"c\">/** </span>","<span class=\"c\">     * @ignore</span>","<span class=\"c\">     * @type {boolean}</span>","<span class=\"c\">     */</span> ","    get <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","    <span class=\"k\">{</span>","      <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_tap_to_zoom","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  <span class=\"s\">'maxZoom'</span><span class=\"k\">:</span> <span class=\"k\">{</span>","    <span class=\"c\">/** </span>","<span class=\"c\">     * Set the maximum authorized map's zoom</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * @name vs.ext.ui.GMap#maxZoom </span>","<span class=\"c\">     * @type {number}</span>","<span class=\"c\">     */</span> ","    set <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>v<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(!</span>vs<span class=\"k\">.</span>util<span class=\"k\">.</span>isNumber <span class=\"k\">(</span>v<span class=\"k\">))</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      ","      <span class=\"k\">this</span><span class=\"k\">.</span>_max_zoom <span class=\"k\">=</span> v<span class=\"k\">;</span>","      ","      <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>__init_finished<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      ","      <span class=\"k\">this</span><span class=\"k\">.</span>_gmap<span class=\"k\">.</span>setOptions <span class=\"k\">(</span><span class=\"k\">{</span>maxZoom<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>_max_zoom<span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","  ","    <span class=\"c\">/** </span>","<span class=\"c\">     * @ignore</span>","<span class=\"c\">     * @type {number}</span>","<span class=\"c\">     */</span> ","    get <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","    <span class=\"k\">{</span>","      <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_max_zoom<span class=\"k\">;</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  <span class=\"s\">'minZoom'</span><span class=\"k\">:</span> <span class=\"k\">{</span>","    <span class=\"c\">/** </span>","<span class=\"c\">     * Set the minimum authorized map's zoom</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * @name vs.ext.ui.GMap#minZoom </span>","<span class=\"c\">     * @type {number}</span>","<span class=\"c\">     */</span> ","    set <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>v<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(!</span>vs<span class=\"k\">.</span>util<span class=\"k\">.</span>isNumber <span class=\"k\">(</span>v<span class=\"k\">))</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      ","      <span class=\"k\">this</span><span class=\"k\">.</span>_min_zoom <span class=\"k\">=</span> v<span class=\"k\">;</span>","      ","      <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>__init_finished<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      ","      <span class=\"k\">this</span><span class=\"k\">.</span>_gmap<span class=\"k\">.</span>setOptions <span class=\"k\">(</span><span class=\"k\">{</span>maxZoom<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>_min_zoom<span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","  ","    <span class=\"c\">/** </span>","<span class=\"c\">     * @ignore</span>","<span class=\"c\">     * @type {number}</span>","<span class=\"c\">     */</span> ","    get <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","    <span class=\"k\">{</span>","      <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_min_zoom<span class=\"k\">;</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  <span class=\"s\">'zoomControl'</span><span class=\"k\">:</span> <span class=\"k\">{</span>","    <span class=\"c\">/** </span>","<span class=\"c\">     * Enabled/disabled the zoom controls.</span>","<span class=\"c\">     * By default its set to false</span>","<span class=\"c\">     * @name vs.ext.ui.GMap#zoomControl </span>","<span class=\"c\">     * @type {boolean}</span>","<span class=\"c\">     */</span> ","    set <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>v<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>v<span class=\"k\">)</span>","      <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>_zoom_control <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      <span class=\"k\">else</span>","      <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>_zoom_control <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      ","      <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>__init_finished<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      ","      <span class=\"k\">this</span><span class=\"k\">.</span>_gmap<span class=\"k\">.</span>setOptions <span class=\"k\">(</span><span class=\"k\">{</span>zoomControl<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>_zoom_control<span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","  ","    <span class=\"c\">/** </span>","<span class=\"c\">     * @ignore</span>","<span class=\"c\">     * @type {boolean}</span>","<span class=\"c\">     */</span> ","    get <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","    <span class=\"k\">{</span>","      <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_zoom_control","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  <span class=\"s\">'zoom'</span><span class=\"k\">:</span> <span class=\"k\">{</span>","    <span class=\"c\">/** </span>","<span class=\"c\">     * Set the current map zoom</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * @name vs.ext.ui.GMap#zoom </span>","<span class=\"c\">     * @type {number}</span>","<span class=\"c\">     */</span> ","    set <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>v<span class=\"k\">)</span>","    <span class=\"k\">{</span>","     <span class=\"k\">if</span> <span class=\"k\">(!</span>vs<span class=\"k\">.</span>util<span class=\"k\">.</span>isNumber <span class=\"k\">(</span>v<span class=\"k\">))</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      ","      <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>__init_finished<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      ","      v <span class=\"k\">=</span> Math<span class=\"k\">.</span>floor <span class=\"k\">(</span>v<span class=\"k\">);</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>v <span class=\"k\">===</span> <span class=\"k\">this</span><span class=\"k\">.</span>_zoom<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      ","      <span class=\"k\">this</span><span class=\"k\">.</span>_zoom <span class=\"k\">=</span> v<span class=\"k\">;</span>","      ","      <span class=\"k\">this</span><span class=\"k\">.</span>_gmap<span class=\"k\">.</span>setZoom <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_zoom<span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","  ","    <span class=\"c\">/** </span>","<span class=\"c\">     * @ignore</span>","<span class=\"c\">     * @type {number}</span>","<span class=\"c\">     */</span> ","    get <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_gmap<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      ","      <span class=\"k\">this</span><span class=\"k\">.</span>_zoom <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_gmap<span class=\"k\">.</span>getZoom <span class=\"k\">();</span>","      <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_zoom","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  <span class=\"s\">'tilt'</span><span class=\"k\">:</span> <span class=\"k\">{</span>","    <span class=\"c\">/** </span>","<span class=\"c\">     * Set the current map tilt</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * @name vs.ext.ui.GMap#tilt </span>","<span class=\"c\">     * @type {number}</span>","<span class=\"c\">     */</span> ","    set <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>v<span class=\"k\">)</span>","    <span class=\"k\">{</span>","     <span class=\"k\">if</span> <span class=\"k\">(!</span>vs<span class=\"k\">.</span>util<span class=\"k\">.</span>isNumber <span class=\"k\">(</span>v<span class=\"k\">))</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      ","      <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>__init_finished<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      ","      <span class=\"k\">this</span><span class=\"k\">.</span>_tilt <span class=\"k\">=</span> v<span class=\"k\">;</span>","      ","      <span class=\"k\">this</span><span class=\"k\">.</span>_gmap<span class=\"k\">.</span>setTilt <span class=\"k\">(</span>v<span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","  ","    <span class=\"c\">/** </span>","<span class=\"c\">     * @ignore</span>","<span class=\"c\">     * @type {number}</span>","<span class=\"c\">     */</span> ","    get <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_gmap<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      ","      <span class=\"k\">this</span><span class=\"k\">.</span>_tilt <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_gmap<span class=\"k\">.</span>getTilt <span class=\"k\">();</span>","      <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_tilt<span class=\"k\">;</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  <span class=\"s\">'streetViewControl'</span><span class=\"k\">:</span> <span class=\"k\">{</span>","    <span class=\"c\">/** </span>","<span class=\"c\">     * Enabled/disabled the street view access controls.</span>","<span class=\"c\">     * By default its set to false</span>","<span class=\"c\">     * @name vs.ext.ui.GMap#streetViewControl </span>","<span class=\"c\">     * @type {boolean}</span>","<span class=\"c\">     */</span> ","    set <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>v<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>v<span class=\"k\">)</span>","      <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>_street_view_control <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      <span class=\"k\">else</span>","      <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>_street_view_control <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      ","      <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>__init_finished<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      ","      <span class=\"k\">this</span><span class=\"k\">.</span>_gmap<span class=\"k\">.</span>setOptions <span class=\"k\">(</span><span class=\"k\">{</span>streetViewControl<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>_street_view_control<span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","  ","    <span class=\"c\">/** </span>","<span class=\"c\">     * @ignore</span>","<span class=\"c\">     * @type {boolean}</span>","<span class=\"c\">     */</span> ","    get <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","    <span class=\"k\">{</span>","      <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_street_view_control","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  <span class=\"s\">'center'</span><span class=\"k\">:</span> <span class=\"k\">{</span>","    <span class=\"c\">/** </span>","<span class=\"c\">     * Changes / access the center coordinate of the map</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * Positions is a array of latitude and longitude in degrees.</span>","<span class=\"c\">     * @name vs.ext.ui.GMap#center </span>","<span class=\"c\">     * @type {Array}</span>","<span class=\"c\">     */</span> ","    set <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>v<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>__init_finished<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      <span class=\"k\">if</span> <span class=\"k\">(!</span>v<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span> ","      <span class=\"k\">if</span> <span class=\"k\">(!</span>vs<span class=\"k\">.</span>util<span class=\"k\">.</span>isArray <span class=\"k\">(</span>v<span class=\"k\">)</span> <span class=\"k\">||</span> v<span class=\"k\">.</span>length <span class=\"k\">!==</span> <span class=\"s\">2</span><span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      <span class=\"k\">if</span> <span class=\"k\">(!</span>vs<span class=\"k\">.</span>util<span class=\"k\">.</span>isNumber <span class=\"k\">(</span>v<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">])</span> <span class=\"k\">||</span> <span class=\"k\">!</span>vs<span class=\"k\">.</span>util<span class=\"k\">.</span>isNumber<span class=\"k\">(</span>v<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]))</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      ","      <span class=\"k\">this</span><span class=\"k\">.</span>_center <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">=</span> v <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_center <span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]</span> <span class=\"k\">=</span> v <span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">];</span>","      ","      <span class=\"k\">var</span> latLng <span class=\"k\">=</span> <span class=\"k\">new</span> google<span class=\"k\">.</span>maps<span class=\"k\">.</span>LatLng <span class=\"k\">(</span>v <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">],</span> v <span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]);</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_gmap<span class=\"k\">.</span>setCenter <span class=\"k\">(</span>latLng<span class=\"k\">);</span>","      ","      <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_center_mark<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>_center_mark<span class=\"k\">.</span>setPosition <span class=\"k\">(</span>latLng<span class=\"k\">);</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","    ","    <span class=\"c\">/** </span>","<span class=\"c\">     * @ignore</span>","<span class=\"c\">     * @type {Array}</span>","<span class=\"c\">     */</span> ","    get <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_gmap<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span> <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">];</span> <span class=\"k\">}</span>","      ","      <span class=\"k\">var</span> pos <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_gmap<span class=\"k\">.</span>getCenter<span class=\"k\">();</span>","  ","      <span class=\"k\">this</span><span class=\"k\">.</span>_center <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">=</span> pos<span class=\"k\">.</span>lat <span class=\"k\">();</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_center <span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]</span> <span class=\"k\">=</span> pos<span class=\"k\">.</span>lng <span class=\"k\">();</span>","      ","      <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_center<span class=\"k\">.</span>slice <span class=\"k\">();</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">);</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * @private</span>","<span class=\"c\"> */</span>","<span class=\"k\">var</span> clear_view_style_nb_cur <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * @private</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> */</span>","<span class=\"k\">var</span> clear_view_style <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>map<span class=\"k\">)</span>","<span class=\"k\">{</span>","  map<span class=\"k\">.</span>__init_did_finish <span class=\"k\">();</span>","<span class=\"k\">}</span>","","<span class=\"c\">/********************************************************************</span>","<span class=\"c\">                      Export</span>","<span class=\"c\">*********************************************************************/</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> *  The GMap.Annotation class</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  @extends vs.ui.View</span>","<span class=\"c\"> *  @class</span>","<span class=\"c\"> *  Creates a marker with the options specified. If a map is specified, the </span>","<span class=\"c\"> *  marker is added to the map upon construction. Note that the position must be </span>","<span class=\"c\"> *  set for the marker to display</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * Events:</span>","<span class=\"c\"> *  &lt;ul&gt; mapload : fire when the map is loaded and ready to use.</span>","<span class=\"c\"> *  &lt;/ul&gt;</span>","<span class=\"c\"> *  &lt;p&gt;</span>","<span class=\"c\"> *  @example</span>","<span class=\"c\"> *  </span>","<span class=\"c\"> * @author David Thevenin</span>","<span class=\"c\"> * @name vs.ext.ui.GMap.Annotation</span>","<span class=\"c\"> * @private</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @constructor</span>","<span class=\"c\"> *  Creates a new GMap.Annotation.</span>","<span class=\"c\"> *</span>","<span class=\"c\"> */</span>","GMap<span class=\"k\">.</span>Annotation <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>map<span class=\"k\">,</span> id<span class=\"k\">,</span> lat<span class=\"k\">,</span> lon<span class=\"k\">,</span> info<span class=\"k\">,</span> type<span class=\"k\">)</span>","<span class=\"k\">{</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>map <span class=\"k\">=</span> map<span class=\"k\">;</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>id <span class=\"k\">=</span> id<span class=\"k\">;</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>info <span class=\"k\">=</span> info<span class=\"k\">;</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>type <span class=\"k\">=</span> <span class=\"k\">(</span>type<span class=\"k\">)?</span>type<span class=\"k\">:</span><span class=\"s\">'default'</span><span class=\"k\">;</span>","  ","  <span class=\"k\">this</span><span class=\"k\">.</span>_coordinate <span class=\"k\">=</span> <span class=\"k\">new</span> google<span class=\"k\">.</span>maps<span class=\"k\">.</span>LatLng <span class=\"k\">(</span>lat<span class=\"k\">,</span> lon<span class=\"k\">);</span>","  ","  <span class=\"k\">var</span> template <span class=\"k\">=</span> GMap<span class=\"k\">.</span>_anotation_templates_ <span class=\"k\">[</span><span class=\"k\">this</span><span class=\"k\">.</span>type<span class=\"k\">];</span>","  <span class=\"k\">if</span> <span class=\"k\">(!</span>template<span class=\"k\">)</span> template <span class=\"k\">=</span> GMap<span class=\"k\">.</span>_anotation_templates_ <span class=\"k\">[</span><span class=\"s\">'default'</span><span class=\"k\">];</span>","  ","  <span class=\"k\">this</span><span class=\"k\">.</span>image <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","","  <span class=\"k\">if</span> <span class=\"k\">(</span>template<span class=\"k\">.</span>marker<span class=\"k\">.</span>type <span class=\"k\">==</span> GMap<span class=\"k\">.</span>DEVICE_IMAGE_MARKER<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">var</span> os_device <span class=\"k\">=</span> window<span class=\"k\">.</span>deviceConfiguration<span class=\"k\">.</span>os<span class=\"k\">;</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>os_device <span class=\"k\">==</span> vs<span class=\"k\">.</span>core<span class=\"k\">.</span>DeviceConfiguration<span class=\"k\">.</span>OS_SYMBIAN<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>image <span class=\"k\">=</span> <span class=\"k\">new</span> google<span class=\"k\">.</span>maps<span class=\"k\">.</span>MarkerImage <span class=\"k\">(</span><span class=\"s\">'css/kit/symbian_marker.png'</span><span class=\"k\">,</span>","        <span class=\"k\">new</span> google<span class=\"k\">.</span>maps<span class=\"k\">.</span>Size <span class=\"k\">(</span><span class=\"s\">48</span><span class=\"k\">,</span> <span class=\"s\">51</span><span class=\"k\">),</span>","        <span class=\"k\">new</span> google<span class=\"k\">.</span>maps<span class=\"k\">.</span>Point <span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span><span class=\"s\">0</span><span class=\"k\">),</span>","        <span class=\"k\">new</span> google<span class=\"k\">.</span>maps<span class=\"k\">.</span>Point <span class=\"k\">(</span><span class=\"s\">24</span><span class=\"k\">,</span> <span class=\"s\">48</span><span class=\"k\">));</span>","    <span class=\"k\">}</span>","    <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>os_device <span class=\"k\">==</span> vs<span class=\"k\">.</span>core<span class=\"k\">.</span>DeviceConfiguration<span class=\"k\">.</span>OS_WP7<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>image <span class=\"k\">=</span> <span class=\"k\">new</span> google<span class=\"k\">.</span>maps<span class=\"k\">.</span>MarkerImage <span class=\"k\">(</span><span class=\"s\">'css/kit/wp7_marker.png'</span><span class=\"k\">,</span>","        <span class=\"k\">new</span> google<span class=\"k\">.</span>maps<span class=\"k\">.</span>Size <span class=\"k\">(</span><span class=\"s\">15</span><span class=\"k\">,</span> <span class=\"s\">31</span><span class=\"k\">),</span>","        <span class=\"k\">new</span> google<span class=\"k\">.</span>maps<span class=\"k\">.</span>Point <span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span><span class=\"s\">0</span><span class=\"k\">),</span>","        <span class=\"k\">new</span> google<span class=\"k\">.</span>maps<span class=\"k\">.</span>Point <span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"s\">31</span><span class=\"k\">));</span>","    <span class=\"k\">}</span>","    <span class=\"k\">else</span>","    <span class=\"k\">{</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>image <span class=\"k\">=</span> <span class=\"k\">new</span> google<span class=\"k\">.</span>maps<span class=\"k\">.</span>MarkerImage <span class=\"k\">(</span><span class=\"s\">'css/kit/ios_marker.png'</span><span class=\"k\">,</span>","        <span class=\"k\">new</span> google<span class=\"k\">.</span>maps<span class=\"k\">.</span>Size <span class=\"k\">(</span><span class=\"s\">32</span><span class=\"k\">,</span> <span class=\"s\">41</span><span class=\"k\">),</span>","        <span class=\"k\">new</span> google<span class=\"k\">.</span>maps<span class=\"k\">.</span>Point <span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span><span class=\"s\">0</span><span class=\"k\">),</span>","        <span class=\"k\">new</span> google<span class=\"k\">.</span>maps<span class=\"k\">.</span>Point <span class=\"k\">(</span><span class=\"s\">8</span><span class=\"k\">,</span> <span class=\"s\">36</span><span class=\"k\">));</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span>","  <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>template<span class=\"k\">.</span>marker<span class=\"k\">.</span>type <span class=\"k\">==</span> GMap<span class=\"k\">.</span>IMAGE_MARKER<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>image <span class=\"k\">=</span> <span class=\"k\">new</span> google<span class=\"k\">.</span>maps<span class=\"k\">.</span>MarkerImage <span class=\"k\">(</span>template<span class=\"k\">.</span>marker<span class=\"k\">.</span>url<span class=\"k\">);</span>","  <span class=\"k\">}</span>","  ","  <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>image<span class=\"k\">)</span>","  <span class=\"k\">{</span>     ","    <span class=\"k\">this</span><span class=\"k\">.</span>_gmarker <span class=\"k\">=</span> <span class=\"k\">new</span> google<span class=\"k\">.</span>maps<span class=\"k\">.</span>Marker<span class=\"k\">(</span><span class=\"k\">{</span>","      position<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>_coordinate<span class=\"k\">,</span>","      icon<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>image<span class=\"k\">,</span>","      map<span class=\"k\">:</span> map<span class=\"k\">.</span>_gmap<span class=\"k\">,</span>","      animation<span class=\"k\">:</span> google<span class=\"k\">.</span>maps<span class=\"k\">.</span>Animation<span class=\"k\">.</span>DROP","    <span class=\"k\">}</span><span class=\"k\">);</span>","  ","    <span class=\"k\">var</span> self <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","    google<span class=\"k\">.</span>maps<span class=\"k\">.</span>event<span class=\"k\">.</span>addListener <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_gmarker<span class=\"k\">,</span> <span class=\"s\">'click'</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","      self<span class=\"k\">.</span>onselect <span class=\"k\">();</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","  <span class=\"k\">}</span>","  <span class=\"k\">else</span>","  <span class=\"k\">{</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>_infoWindow <span class=\"k\">=</span> <span class=\"k\">new</span> GMap<span class=\"k\">.</span>InfoWindow <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>map<span class=\"k\">,</span> id<span class=\"k\">,</span> lat<span class=\"k\">,</span> lon<span class=\"k\">,</span> type<span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>_infoWindow<span class=\"k\">.</span>setCoordinate <span class=\"k\">(</span>lat<span class=\"k\">,</span> lon<span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>_infoWindow<span class=\"k\">.</span>setInfo <span class=\"k\">(</span>info<span class=\"k\">);</span>","  <span class=\"k\">}</span>","<span class=\"k\">}</span>","","GMap<span class=\"k\">.</span>Annotation<span class=\"k\">.</span>prototype <span class=\"k\">=</span> <span class=\"k\">{</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @ignore</span>","<span class=\"c\">   */</span>","  destructor <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_gmarker<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_gmarker<span class=\"k\">.</span>setMap <span class=\"k\">(</span><span class=\"k\">null</span><span class=\"k\">);</span>","      <span class=\"k\">delete</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_gmarker<span class=\"k\">);</span>","    <span class=\"k\">}</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_infoWindow<span class=\"k\">)</span> free <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_infoWindow<span class=\"k\">);</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>image<span class=\"k\">)</span> <span class=\"k\">delete</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>image<span class=\"k\">);</span>","    <span class=\"k\">delete</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_coordinate<span class=\"k\">);</span>","    ","    <span class=\"k\">this</span><span class=\"k\">.</span>map <span class=\"k\">=</span> undefined<span class=\"k\">;</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   *  on select management</span>","<span class=\"c\">   *  @ignore</span>","<span class=\"c\">   */</span>","  onselect <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>showInfoWindow <span class=\"k\">();</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   *  Show the info Window</span>","<span class=\"c\">   *  @ignore</span>","<span class=\"c\">   */</span>","  showInfoWindow <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>map<span class=\"k\">.</span>_infoWindow<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>map<span class=\"k\">.</span>_infoWindow <span class=\"k\">=</span> <span class=\"k\">new</span> GMap<span class=\"k\">.</span>InfoWindowWithMarker <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>map<span class=\"k\">);</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>map<span class=\"k\">.</span>_infoWindow<span class=\"k\">.</span>setMarker <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","    <span class=\"k\">else</span>","    <span class=\"k\">{</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>map<span class=\"k\">.</span>_infoWindow<span class=\"k\">.</span>setMarker <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span>","<span class=\"k\">}</span>","","<span class=\"c\">/********************************************************************</span>","<span class=\"c\">                  Define class properties</span>","<span class=\"c\">********************************************************************/</span>","","util<span class=\"k\">.</span>defineClassProperties <span class=\"k\">(</span>GMap<span class=\"k\">.</span>Annotation<span class=\"k\">,</span> <span class=\"k\">{</span>","","  <span class=\"s\">'coordinate'</span><span class=\"k\">:</span> <span class=\"k\">{</span>","    <span class=\"c\">/** </span>","<span class=\"c\">     * Sets/get the new center point of the annotation. [latitude, longitude]</span>","<span class=\"c\">     * @name vs.ext.ui.GMap.Annotation#coordinate </span>","<span class=\"c\">     * @type {Array}</span>","<span class=\"c\">     */</span> ","    set <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>pos<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(!</span>util<span class=\"k\">.</span>isArray <span class=\"k\">(</span>pos<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> pos<span class=\"k\">.</span>length <span class=\"k\">!=</span> <span class=\"s\">2</span><span class=\"k\">)</span> <span class=\"k\">return</span><span class=\"k\">;</span>","      ","      <span class=\"k\">delete</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_coordinate<span class=\"k\">);</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_coordinate <span class=\"k\">=</span> <span class=\"k\">new</span> google<span class=\"k\">.</span>maps<span class=\"k\">.</span>LatLng <span class=\"k\">(</span>pos<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">],</span> pos<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]);</span>","      ","      <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_gmarker<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>_gmarker<span class=\"k\">.</span>setPosition <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_coordinate<span class=\"k\">);</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","  ","    <span class=\"c\">/** </span>","<span class=\"c\">     * @ignore</span>","<span class=\"c\">     * @type {Array}</span>","<span class=\"c\">     */</span> ","    get <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","    <span class=\"k\">{</span>","      <span class=\"k\">return</span> <span class=\"k\">[</span><span class=\"k\">this</span><span class=\"k\">.</span>_coordinate<span class=\"k\">.</span>lat <span class=\"k\">(),</span> <span class=\"k\">this</span><span class=\"k\">.</span>_coordinate<span class=\"k\">.</span>lng <span class=\"k\">()];</span> ","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  <span class=\"s\">'info'</span><span class=\"k\">:</span> <span class=\"k\">{</span>","    <span class=\"c\">/** </span>","<span class=\"c\">     * Set/returns annotation information</span>","<span class=\"c\">     * @type {Object}</span>","<span class=\"c\">     */</span> ","    set <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>v<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_info <span class=\"k\">=</span> v<span class=\"k\">;</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_infoWindow<span class=\"k\">)</span> <span class=\"k\">this</span><span class=\"k\">.</span>_infoWindow<span class=\"k\">.</span>setInfo <span class=\"k\">(</span>v<span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","  ","    <span class=\"c\">/** </span>","<span class=\"c\">     * @ignore</span>","<span class=\"c\">     * @type {boolean}</span>","<span class=\"c\">     */</span> ","    get <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","    <span class=\"k\">{</span>","      <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_info","    <span class=\"k\">}</span>","  <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">);</span>","","","<span class=\"c\">/**</span>","<span class=\"c\"> * @private</span>","<span class=\"c\"> */</span>","<span class=\"k\">function</span> createInfoWindowClass <span class=\"k\">()</span>","<span class=\"k\">{</span>","  <span class=\"c\">/**</span>","<span class=\"c\">   *  The GMap.InfoWindow class</span>","<span class=\"c\">   *</span>","<span class=\"c\">   *  @extends vs.ui.View</span>","<span class=\"c\">   *  @class</span>","<span class=\"c\">   *  Creates an info window with the given options</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * Events:</span>","<span class=\"c\">   *  &lt;ul&gt; mapload : fire when the map is loaded and ready to use.</span>","<span class=\"c\">   *  &lt;/ul&gt;</span>","<span class=\"c\">   *  &lt;p&gt;</span>","<span class=\"c\">   *  @example</span>","<span class=\"c\">   *  </span>","<span class=\"c\">   * @author David Thevenin</span>","<span class=\"c\">   * @name GMap.InfoWindow</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @ignore</span>","<span class=\"c\">   * @constructor</span>","<span class=\"c\">   *  Creates a new GMap.InfoWindow.</span>","<span class=\"c\">   *</span>","<span class=\"c\">   */</span>","  GMap<span class=\"k\">.</span>InfoWindow <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>map<span class=\"k\">,</span> id<span class=\"k\">,</span> type<span class=\"k\">,</span> lat<span class=\"k\">,</span> lon<span class=\"k\">)</span>","  <span class=\"k\">{</span>    ","    <span class=\"k\">this</span><span class=\"k\">.</span>vs_map <span class=\"k\">=</span> map<span class=\"k\">;</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>id <span class=\"k\">=</span> id<span class=\"k\">;</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>type <span class=\"k\">=</span> type<span class=\"k\">;</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>setCoordinate <span class=\"k\">(</span>lat<span class=\"k\">,</span> lon<span class=\"k\">);</span>","","    <span class=\"c\">// Initialization</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>setValues <span class=\"k\">(</span><span class=\"k\">{</span>map<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>vs_map<span class=\"k\">.</span>_gmap<span class=\"k\">}</span><span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">;</span>","  GMap<span class=\"k\">.</span>InfoWindow<span class=\"k\">.</span>prototype <span class=\"k\">=</span> <span class=\"k\">new</span> google<span class=\"k\">.</span>maps<span class=\"k\">.</span>OverlayView<span class=\"k\">;</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @ignore</span>","<span class=\"c\">   */</span>","  GMap<span class=\"k\">.</span>InfoWindow<span class=\"k\">.</span>prototype<span class=\"k\">.</span>destructor <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>setMap <span class=\"k\">(</span><span class=\"k\">null</span><span class=\"k\">);</span>","    ","    <span class=\"k\">this</span><span class=\"k\">.</span>marker <span class=\"k\">=</span> undefined<span class=\"k\">;</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>vs_map <span class=\"k\">=</span> undefined<span class=\"k\">;</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","    ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @ignore</span>","<span class=\"c\">   */</span>","  GMap<span class=\"k\">.</span>InfoWindow<span class=\"k\">.</span>prototype<span class=\"k\">.</span>hide <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>view<span class=\"k\">)</span> <span class=\"k\">return</span><span class=\"k\">;</span>"," ","    <span class=\"k\">this</span><span class=\"k\">.</span>view<span class=\"k\">.</span>style<span class=\"k\">.</span>display <span class=\"k\">=</span> <span class=\"s\">'none'</span><span class=\"k\">;</span>","  <span class=\"k\">}</span><span class=\"k\">;</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @ignore</span>","<span class=\"c\">   */</span>","  GMap<span class=\"k\">.</span>InfoWindow<span class=\"k\">.</span>prototype<span class=\"k\">.</span>show <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>view<span class=\"k\">)</span> <span class=\"k\">return</span><span class=\"k\">;</span>"," ","    <span class=\"k\">this</span><span class=\"k\">.</span>view<span class=\"k\">.</span>style<span class=\"k\">.</span>display <span class=\"k\">=</span> <span class=\"s\">'block'</span><span class=\"k\">;</span>","  <span class=\"k\">}</span><span class=\"k\">;</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @ignore</span>","<span class=\"c\">   */</span>","  GMap<span class=\"k\">.</span>InfoWindow<span class=\"k\">.</span>prototype<span class=\"k\">.</span>setMarker <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>marker<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>marker<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>unbind <span class=\"k\">(</span><span class=\"s\">'position'</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>marker <span class=\"k\">=</span> marker<span class=\"k\">;</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>id <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>marker<span class=\"k\">.</span>id<span class=\"k\">;</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>type <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>marker<span class=\"k\">.</span>type<span class=\"k\">;</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>info <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>marker<span class=\"k\">.</span>info<span class=\"k\">;</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>bindTo <span class=\"k\">(</span><span class=\"s\">'position'</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>marker<span class=\"k\">.</span>_gmarker<span class=\"k\">,</span> <span class=\"s\">'position'</span><span class=\"k\">);</span>","    ","    <span class=\"k\">this</span><span class=\"k\">.</span>instanciateView <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>type<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>info<span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">;</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @ignore</span>","<span class=\"c\">   */</span>","  GMap<span class=\"k\">.</span>InfoWindow<span class=\"k\">.</span>prototype<span class=\"k\">.</span>setCoordinate <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>lat<span class=\"k\">,</span> lon<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>position<span class=\"k\">)</span> <span class=\"k\">delete</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>position<span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>position <span class=\"k\">=</span> <span class=\"k\">new</span> google<span class=\"k\">.</span>maps<span class=\"k\">.</span>LatLng <span class=\"k\">(</span>lat<span class=\"k\">,</span> lon<span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">;</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @ignore</span>","<span class=\"c\">   */</span>","  GMap<span class=\"k\">.</span>InfoWindow<span class=\"k\">.</span>prototype<span class=\"k\">.</span>setType <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>type<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>type <span class=\"k\">=</span> type<span class=\"k\">;</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>instanciateView <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>type<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>info<span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">;</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @ignore</span>","<span class=\"c\">   */</span>","  GMap<span class=\"k\">.</span>InfoWindow<span class=\"k\">.</span>prototype<span class=\"k\">.</span>setInfo <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>data<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>info <span class=\"k\">=</span> data<span class=\"k\">;</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>instanciateView <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>type<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>info<span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">;</span>","    ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @ignore</span>","<span class=\"c\">   */</span>","  GMap<span class=\"k\">.</span>InfoWindow<span class=\"k\">.</span>prototype<span class=\"k\">.</span>instanciateView <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>type<span class=\"k\">,</span> info<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">var</span> div <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement <span class=\"k\">(</span><span class=\"s\">'div'</span><span class=\"k\">);</span>","    <span class=\"k\">var</span> template <span class=\"k\">=</span> GMap<span class=\"k\">.</span>_anotation_templates_ <span class=\"k\">[</span>type<span class=\"k\">];</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>template<span class=\"k\">)</span> template <span class=\"k\">=</span> GMap<span class=\"k\">.</span>_anotation_templates_ <span class=\"k\">[</span><span class=\"s\">'default'</span><span class=\"k\">];</span>","    <span class=\"k\">var</span> text <span class=\"k\">=</span> template<span class=\"k\">.</span>infoWindow<span class=\"k\">;</span>","    ","    <span class=\"k\">if</span> <span class=\"k\">(</span>info<span class=\"k\">)</span> <span class=\"k\">for</span> <span class=\"k\">(</span>key <span class=\"k\">in</span> info<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">var</span> value <span class=\"k\">=</span> info<span class=\"k\">[</span>key<span class=\"k\">];</span> value <span class=\"k\">=</span> <span class=\"k\">(</span>value<span class=\"k\">)?</span>value<span class=\"k\">:</span><span class=\"s\">\"\"</span><span class=\"k\">;</span>","      text <span class=\"k\">=</span> text<span class=\"k\">.</span>replace <span class=\"k\">(</span><span class=\"s\">'{'</span> <span class=\"k\">+</span> key <span class=\"k\">+</span> <span class=\"s\">'}'</span><span class=\"k\">,</span> value<span class=\"k\">);</span>","    <span class=\"k\">}</span>","    div<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> text<span class=\"k\">;</span>","    ","    <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>view<span class=\"k\">)</span> <span class=\"k\">this</span><span class=\"k\">.</span>createView <span class=\"k\">();</span>","    ","    <span class=\"k\">this</span><span class=\"k\">.</span>view<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> div<span class=\"k\">.</span>firstElementChild<span class=\"k\">.</span>innerHTML<span class=\"k\">;</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>view<span class=\"k\">.</span>className <span class=\"k\">=</span> div<span class=\"k\">.</span>firstElementChild<span class=\"k\">.</span>className<span class=\"k\">;</span>","  <span class=\"k\">}</span><span class=\"k\">;</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @ignore</span>","<span class=\"c\">   */</span>","  GMap<span class=\"k\">.</span>InfoWindow<span class=\"k\">.</span>prototype<span class=\"k\">.</span>createView <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>view<span class=\"k\">)</span> <span class=\"k\">return</span><span class=\"k\">;</span>","    ","    <span class=\"k\">this</span><span class=\"k\">.</span>view <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement <span class=\"k\">(</span><span class=\"s\">'div'</span><span class=\"k\">);</span>"," ","    <span class=\"k\">this</span><span class=\"k\">.</span>view<span class=\"k\">.</span>addEventListener <span class=\"k\">(</span>core<span class=\"k\">.</span>POINTER_START<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">;</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @ignore</span>","<span class=\"c\">   */</span>","  GMap<span class=\"k\">.</span>InfoWindow<span class=\"k\">.</span>prototype<span class=\"k\">.</span>handleEvent <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">var</span> self <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","    ","    <span class=\"k\">switch</span> <span class=\"k\">(</span>e<span class=\"k\">.</span>type<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">case</span> core<span class=\"k\">.</span>POINTER_START<span class=\"k\">:</span>","        <span class=\"c\">// prevent multi touch events</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>core<span class=\"k\">.</span>EVENT_SUPPORT_TOUCH <span class=\"k\">&amp;&amp;</span> e<span class=\"k\">.</span>touches<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","        ","        document<span class=\"k\">.</span>addEventListener <span class=\"k\">(</span>core<span class=\"k\">.</span>POINTER_END<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","        document<span class=\"k\">.</span>addEventListener <span class=\"k\">(</span>core<span class=\"k\">.</span>POINTER_MOVE<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>__start_x <span class=\"k\">=</span> core<span class=\"k\">.</span>EVENT_SUPPORT_TOUCH <span class=\"k\">?</span> e<span class=\"k\">.</span>touches<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>pageX <span class=\"k\">:</span> e<span class=\"k\">.</span>pageX<span class=\"k\">;</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>__start_y <span class=\"k\">=</span> core<span class=\"k\">.</span>EVENT_SUPPORT_TOUCH <span class=\"k\">?</span> e<span class=\"k\">.</span>touches<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>pageY <span class=\"k\">:</span> e<span class=\"k\">.</span>pageY<span class=\"k\">;</span>","        ","        <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>marker<span class=\"k\">)</span> <span class=\"k\">this</span><span class=\"k\">.</span>removeMapEvent <span class=\"k\">();</span>","        util<span class=\"k\">.</span>addClassName <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>view<span class=\"k\">,</span> <span class=\"s\">\"selected\"</span><span class=\"k\">);</span>","        <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","      <span class=\"k\">break</span><span class=\"k\">;</span>","","      <span class=\"k\">case</span> core<span class=\"k\">.</span>POINTER_MOVE<span class=\"k\">:</span>","","        <span class=\"k\">var</span> dx <span class=\"k\">=</span> ","          <span class=\"k\">(</span>core<span class=\"k\">.</span>EVENT_SUPPORT_TOUCH <span class=\"k\">?</span> e<span class=\"k\">.</span>touches<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>pageX <span class=\"k\">:</span> e<span class=\"k\">.</span>pageX<span class=\"k\">)</span> <span class=\"k\">-</span> <span class=\"k\">this</span><span class=\"k\">.</span>__start_x<span class=\"k\">;</span>","        <span class=\"k\">var</span> dy <span class=\"k\">=</span>","          <span class=\"k\">(</span>core<span class=\"k\">.</span>EVENT_SUPPORT_TOUCH <span class=\"k\">?</span> e<span class=\"k\">.</span>touches<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>pageY <span class=\"k\">:</span> e<span class=\"k\">.</span>pageY<span class=\"k\">)</span> <span class=\"k\">-</span> <span class=\"k\">this</span><span class=\"k\">.</span>__start_y<span class=\"k\">;</span>","          ","        <span class=\"k\">if</span> <span class=\"k\">(</span>Math<span class=\"k\">.</span>abs <span class=\"k\">(</span>dx<span class=\"k\">)</span> <span class=\"k\">+</span> Math<span class=\"k\">.</span>abs <span class=\"k\">(</span>dy<span class=\"k\">)</span> <span class=\"k\">&lt;</span> <span class=\"s\">10</span><span class=\"k\">)</span>","        <span class=\"k\">{</span>","          <span class=\"c\">// we keep the event</span>","          e<span class=\"k\">.</span>preventDefault <span class=\"k\">();</span>","          <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>"," ","        document<span class=\"k\">.</span>removeEventListener <span class=\"k\">(</span>core<span class=\"k\">.</span>POINTER_END<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","        document<span class=\"k\">.</span>removeEventListener <span class=\"k\">(</span>core<span class=\"k\">.</span>POINTER_MOVE<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>marker<span class=\"k\">)</span> setTimeout <span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>self<span class=\"k\">.</span>initMapEvent <span class=\"k\">();</span><span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">);</span>","        util<span class=\"k\">.</span>removeClassName <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>view<span class=\"k\">,</span> <span class=\"s\">\"selected\"</span><span class=\"k\">);</span>"," ","        <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","      <span class=\"k\">break</span><span class=\"k\">;</span>","","      <span class=\"k\">case</span> core<span class=\"k\">.</span>POINTER_END<span class=\"k\">:</span>","","        <span class=\"c\">// we keep the event</span>","        e<span class=\"k\">.</span>stopPropagation <span class=\"k\">();</span>","        e<span class=\"k\">.</span>preventDefault <span class=\"k\">();</span>","","        document<span class=\"k\">.</span>removeEventListener <span class=\"k\">(</span>core<span class=\"k\">.</span>POINTER_END<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","        document<span class=\"k\">.</span>removeEventListener <span class=\"k\">(</span>core<span class=\"k\">.</span>POINTER_MOVE<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>marker<span class=\"k\">)</span> setTimeout <span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>self<span class=\"k\">.</span>initMapEvent <span class=\"k\">();</span><span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">);</span>","        util<span class=\"k\">.</span>removeClassName <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>view<span class=\"k\">,</span> <span class=\"s\">\"selected\"</span><span class=\"k\">);</span>","        ","        <span class=\"k\">this</span><span class=\"k\">.</span>vs_map<span class=\"k\">.</span>annotationSelect <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>id<span class=\"k\">);</span>","","        <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","      <span class=\"k\">break</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">;</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * Implement this method to initialize the overlay DOM elements.</span>","<span class=\"c\">   * This method is called once after setMap() is called with a valid map.</span>","<span class=\"c\">   * @ignore</span>","<span class=\"c\">   */</span>","  GMap<span class=\"k\">.</span>InfoWindow<span class=\"k\">.</span>prototype<span class=\"k\">.</span>onAdd <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>view<span class=\"k\">)</span> <span class=\"k\">this</span><span class=\"k\">.</span>createView <span class=\"k\">();</span>","    ","    <span class=\"k\">var</span> pane <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>getPanes<span class=\"k\">().</span>floatPane<span class=\"k\">;</span>","    pane<span class=\"k\">.</span>appendChild <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>view<span class=\"k\">);</span>","    ","    <span class=\"c\">// Ensures the label is redrawn if the text or position is changed.</span>","    <span class=\"k\">var</span> self <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>listeners_ <span class=\"k\">=</span> <span class=\"k\">[</span>","    google<span class=\"k\">.</span>maps<span class=\"k\">.</span>event<span class=\"k\">.</span>addListener<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"s\">'position_changed'</span><span class=\"k\">,</span>","      <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span> self<span class=\"k\">.</span>draw<span class=\"k\">();</span> <span class=\"k\">}</span><span class=\"k\">),</span>","    <span class=\"k\">];</span>","  <span class=\"k\">}</span><span class=\"k\">;</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * Implement this method to remove your elements from the DOM. This method</span>","<span class=\"c\">   * is called once following a call to setMap(null)</span>","<span class=\"c\">   * @ignore</span>","<span class=\"c\">   */</span>","  GMap<span class=\"k\">.</span>InfoWindow<span class=\"k\">.</span>prototype<span class=\"k\">.</span>onRemove <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>view<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>removeChild<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>view<span class=\"k\">);</span>","    ","    <span class=\"c\">// Label is removed from the map, stop updating its position/text.</span>","    <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> I <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>listeners_<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> I<span class=\"k\">;</span> <span class=\"k\">++</span>i<span class=\"k\">)</span> <span class=\"k\">{</span>","      google<span class=\"k\">.</span>maps<span class=\"k\">.</span>event<span class=\"k\">.</span>removeListener<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>listeners_<span class=\"k\">[</span>i<span class=\"k\">]);</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">;</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * Implement this method to draw or update the overlay. </span>","<span class=\"c\">   * @ignore</span>","<span class=\"c\">   */</span>","  GMap<span class=\"k\">.</span>InfoWindow<span class=\"k\">.</span>prototype<span class=\"k\">.</span>draw <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    <span class=\"k\">var</span> projection <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>getProjection <span class=\"k\">();</span>","    <span class=\"k\">var</span> position <span class=\"k\">=</span> projection<span class=\"k\">.</span>fromLatLngToDivPixel <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>get <span class=\"k\">(</span><span class=\"s\">'position'</span><span class=\"k\">));</span>","    ","    <span class=\"k\">var</span> div <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>view<span class=\"k\">;</span>","    div<span class=\"k\">.</span>style<span class=\"k\">.</span>display <span class=\"k\">=</span> <span class=\"s\">'block'</span><span class=\"k\">;</span>","    div<span class=\"k\">.</span>style<span class=\"k\">.</span>visibility <span class=\"k\">=</span> <span class=\"s\">'hidden'</span><span class=\"k\">;</span>","    ","    <span class=\"k\">var</span> icon_w <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>marker<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      icon_w <span class=\"k\">=</span> <span class=\"s\">10</span><span class=\"k\">;</span>","      <span class=\"k\">var</span> icon <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>marker<span class=\"k\">.</span>_gmarker<span class=\"k\">.</span>getIcon <span class=\"k\">();</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>icon<span class=\"k\">)</span> icon_w <span class=\"k\">+=</span> icon<span class=\"k\">.</span>size<span class=\"k\">.</span>height<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"c\">// update position to correctly manage the info bubble size</span>","    setTimeout <span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span>","    <span class=\"k\">{</span>","      <span class=\"k\">var</span> width <span class=\"k\">=</span> div<span class=\"k\">.</span>offsetWidth<span class=\"k\">;</span>","      <span class=\"k\">var</span> height <span class=\"k\">=</span> div<span class=\"k\">.</span>offsetHeight<span class=\"k\">;</span>","      ","      div<span class=\"k\">.</span>style<span class=\"k\">.</span>left <span class=\"k\">=</span> position<span class=\"k\">.</span>x <span class=\"k\">-</span> Math<span class=\"k\">.</span>ceil<span class=\"k\">(</span>width<span class=\"k\">/</span><span class=\"s\">2</span><span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">'px'</span><span class=\"k\">;</span>","      div<span class=\"k\">.</span>style<span class=\"k\">.</span>top <span class=\"k\">=</span> position<span class=\"k\">.</span>y <span class=\"k\">-</span> height <span class=\"k\">-</span> icon_w <span class=\"k\">+</span> <span class=\"s\">'px'</span><span class=\"k\">;</span>","      div<span class=\"k\">.</span>style<span class=\"k\">.</span>visibility <span class=\"k\">=</span> <span class=\"s\">'visible'</span><span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">;</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * @ignore</span>","<span class=\"c\">   */</span>","  GMap<span class=\"k\">.</span>InfoWindow<span class=\"k\">.</span>prototype<span class=\"k\">.</span>initMapEvent <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>map_listener<span class=\"k\">)</span> <span class=\"k\">return</span><span class=\"k\">;</span>","","    <span class=\"k\">var</span> self <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>map_listener <span class=\"k\">=</span> google<span class=\"k\">.</span>maps<span class=\"k\">.</span>event<span class=\"k\">.</span>addListener","      <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>vs_map<span class=\"k\">.</span>_gmap<span class=\"k\">,</span> <span class=\"s\">'click'</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","        self<span class=\"k\">.</span>hide <span class=\"k\">();</span>","      <span class=\"k\">}</span><span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">;</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * @ignore</span>","<span class=\"c\">   */</span>","  GMap<span class=\"k\">.</span>InfoWindow<span class=\"k\">.</span>prototype<span class=\"k\">.</span>removeMapEvent <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>map_listener<span class=\"k\">)</span> <span class=\"k\">return</span><span class=\"k\">;</span>"," ","    google<span class=\"k\">.</span>maps<span class=\"k\">.</span>event<span class=\"k\">.</span>removeListener <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>map_listener<span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>map_listener <span class=\"k\">=</span> undefined<span class=\"k\">;</span>","  <span class=\"k\">}</span><span class=\"k\">;</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   *  The GMap.InfoWindowWithMarker class</span>","<span class=\"c\">   *</span>","<span class=\"c\">   *  @extends vs.ui.View</span>","<span class=\"c\">   *  @class</span>","<span class=\"c\">   *  Creates an info window with the given options</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * Events:</span>","<span class=\"c\">   *  &lt;ul&gt; mapload : fire when the map is loaded and ready to use.</span>","<span class=\"c\">   *  &lt;/ul&gt;</span>","<span class=\"c\">   *  &lt;p&gt;</span>","<span class=\"c\">   *  @example</span>","<span class=\"c\">   *  </span>","<span class=\"c\">   * @author David Thevenin</span>","<span class=\"c\">   * @name GMap.InfoWindow</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @ignore</span>","<span class=\"c\">   * @constructor</span>","<span class=\"c\">   *  Creates a new GMap.InfoWindow.</span>","<span class=\"c\">   *</span>","<span class=\"c\">   */</span>","  GMap<span class=\"k\">.</span>InfoWindowWithMarker <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>map<span class=\"k\">)</span>","  <span class=\"k\">{</span>    ","    <span class=\"k\">this</span><span class=\"k\">.</span>vs_map <span class=\"k\">=</span> map<span class=\"k\">;</span>","","    <span class=\"c\">// Initialization</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>setValues <span class=\"k\">(</span><span class=\"k\">{</span>map<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>vs_map<span class=\"k\">.</span>_gmap<span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>initMapEvent <span class=\"k\">();</span>","  <span class=\"k\">}</span><span class=\"k\">;</span>","  util<span class=\"k\">.</span>extendClass <span class=\"k\">(</span>GMap<span class=\"k\">.</span>InfoWindowWithMarker<span class=\"k\">,</span> GMap<span class=\"k\">.</span>InfoWindow<span class=\"k\">);</span>","<span class=\"k\">}</span>","<span class=\"c\">/********************************************************************</span>","<span class=\"c\">                      Export</span>","<span class=\"c\">*********************************************************************/</span>","<span class=\"c\">/** @private */</span>","ext_ui<span class=\"k\">.</span>GMap <span class=\"k\">=</span> GMap<span class=\"k\">;</span>","<span class=\"c\">/**</span>","<span class=\"c\">  Copyright (C) 2009-2012. David Thevenin, ViniSketch SARL (c), and </span>","<span class=\"c\">  contributors. All rights reserved</span>","<span class=\"c\">  </span>","<span class=\"c\">  This program is free software: you can redistribute it and/or modify</span>","<span class=\"c\">  it under the terms of the GNU Lesser General Public License as published</span>","<span class=\"c\">  by the Free Software Foundation, either version 3 of the License, or</span>","<span class=\"c\">  (at your option) any later version.</span>","<span class=\"c\">  </span>","<span class=\"c\">  This program is distributed in the hope that it will be useful,</span>","<span class=\"c\">  but WITHOUT ANY WARRANTY; without even the implied warranty of</span>","<span class=\"c\">  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the</span>","<span class=\"c\">  GNU Lesser General Public License for more details.</span>","<span class=\"c\">  </span>","<span class=\"c\">  You should have received a copy of the GNU Lesser General Public License</span>","<span class=\"c\">  along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.</span>","<span class=\"c\">*/</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> *  The vs.ext.ui.Carousel class</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  @extends vs.ui.View</span>","<span class=\"c\"> *  @class</span>","<span class=\"c\"> *  Carousel presents a slide carousel. This carousel can be controller</span>","<span class=\"c\"> *  by a swipe on the screen or through methods (goToNextView, ...)</span>","<span class=\"c\"> *  &lt;p&gt;</span>","<span class=\"c\"> *  Carousel is a vs.ui.View. You can set the view size, to defined the bound</span>","<span class=\"c\"> *  inside children's view will be draw. Children are fixed</span>","<span class=\"c\"> *  on top left of the carousel.</span>","<span class=\"c\"> *  &lt;p&gt;</span>","<span class=\"c\"> *  Although carousel views are displayed vertically by default, you can</span>","<span class=\"c\"> *  use the orientation property to have it display horizontally.</span>","<span class=\"c\"> *  &lt;p&gt;</span>","<span class=\"c\"> *  You can set a delegate to be informed when the view will change</span>","<span class=\"c\"> *  (after a swipe or a method call).</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  &lt;p&gt;</span>","<span class=\"c\"> *  Delegate should implement:</span>","<span class=\"c\"> *  &lt;ul&gt;</span>","<span class=\"c\"> *    &lt;li/&gt;carouselViewWillChange : function (view /*vs.ui.View /)</span>","<span class=\"c\"> *  &lt;/ul&gt;</span>","<span class=\"c\"> *  &lt;p&gt;</span>","<span class=\"c\"> *  @example</span>","<span class=\"c\"> *  var carousel = new Carousel (config);</span>","<span class=\"c\"> *  // set child component view (you can add instantiated view or component name</span>","<span class=\"c\"> *  carousel.add (view1);</span>","<span class=\"c\"> *  carousel.add (view2);</span>","<span class=\"c\"> *  carousel.add (view3);</span>","<span class=\"c\"> *  carousel.add (view4);</span>","<span class=\"c\"> *  // change the orientation</span>","<span class=\"c\"> *  carousel.orientation = vs.fx.SlideController.VERTICAL</span>","<span class=\"c\"> *  // set a delegate</span>","<span class=\"c\"> *  var delegate = {};</span>","<span class=\"c\"> *  delegate.carouselViewWillChange = function (view) { ... };</span>","<span class=\"c\"> *  carousel.delegate = delegate;</span>","<span class=\"c\"> *  </span>","<span class=\"c\"> *  @author David Thevenin</span>","<span class=\"c\"> *  @name vs.ext.ui.Carousel</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  @constructor</span>","<span class=\"c\"> *   Creates a new Carousel.</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  @param {Object} config the configuration structure [mandatory]</span>","<span class=\"c\"> */</span>","<span class=\"k\">function</span> Carousel <span class=\"k\">(</span>config<span class=\"k\">)</span>","<span class=\"k\">{</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>parent <span class=\"k\">=</span> vs<span class=\"k\">.</span>ui<span class=\"k\">.</span>View<span class=\"k\">;</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>parent <span class=\"k\">(</span>config<span class=\"k\">);</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>constructor <span class=\"k\">=</span> Carousel<span class=\"k\">;</span>","  ","  <span class=\"k\">this</span><span class=\"k\">.</span>__indicators_list <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","<span class=\"k\">}</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * Horizontal carousel (defaut)</span>","<span class=\"c\"> * @name vs.ext.ui.Carousel.HORIZONTAL</span>","<span class=\"c\"> * @const</span>","<span class=\"c\"> */</span>","Carousel<span class=\"k\">.</span>HORIZONTAL <span class=\"k\">=</span> vs<span class=\"k\">.</span>fx<span class=\"k\">.</span>SlideController<span class=\"k\">.</span>HORIZONTAL<span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * Vertical carousel</span>","<span class=\"c\"> * @name vs.ext.ui.Carousel.VERTICAL</span>","<span class=\"c\"> * @const</span>","<span class=\"c\"> */</span>","Carousel<span class=\"k\">.</span>VERTICAL <span class=\"k\">=</span> vs<span class=\"k\">.</span>fx<span class=\"k\">.</span>SlideController<span class=\"k\">.</span>VERTICAL<span class=\"k\">;</span>","","Carousel<span class=\"k\">.</span>prototype <span class=\"k\">=</span> <span class=\"k\">{</span>",""," <span class=\"c\">/**********************************************************************</span>","<span class=\"c\"> </span>","<span class=\"c\"> *********************************************************************/</span>","","   <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @type {boolean}</span>","<span class=\"c\">   */</span>","  _indicators_visibility <span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","  ","   <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @type {Object}</span>","<span class=\"c\">   */</span>","  _delegate<span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @type {number}</span>","<span class=\"c\">   */</span>","  _orientation <span class=\"k\">:</span> Carousel<span class=\"k\">.</span>HORIZONTAL<span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * The vs.fx.SlideController that will manage the carousel slide</span>","<span class=\"c\">   * @private</span>","<span class=\"c\">   * @type {vs.fx.SlideController}</span>","<span class=\"c\">   */</span>","  _slideController <span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * The indicators view</span>","<span class=\"c\">   * @private</span>","<span class=\"c\">   * @type {DivHtmlElement}</span>","<span class=\"c\">   */</span>","  __indicators <span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * The selected indicator view</span>","<span class=\"c\">   * @private</span>","<span class=\"c\">   * @type {SpanHtmlElement}</span>","<span class=\"c\">   */</span>","  __selected_indicator <span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * The list of indicators</span>","<span class=\"c\">   * @private</span>","<span class=\"c\">   * @type {Object.&lt;string&gt;}</span>","<span class=\"c\">   */</span>","  __indicators_list <span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * Indicator change timer</span>","<span class=\"c\">   * @private</span>","<span class=\"c\">   * @type {number}</span>","<span class=\"c\">   */</span>","  __indicators_timer <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span>  ","  "," <span class=\"c\">/**********************************************************************</span>","<span class=\"c\">                  In/Out properties declarations </span>","<span class=\"c\">  *********************************************************************/</span>","",""," <span class=\"c\">/**********************************************************************</span>","<span class=\"c\"> </span>","<span class=\"c\"> *********************************************************************/</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   */</span>","  destructor <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    util<span class=\"k\">.</span>free <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_slideController<span class=\"k\">);</span>","","    vs<span class=\"k\">.</span>ui<span class=\"k\">.</span>View<span class=\"k\">.</span>prototype<span class=\"k\">.</span>destructor<span class=\"k\">.</span>call <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  initComponent <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    vs<span class=\"k\">.</span>ui<span class=\"k\">.</span>View<span class=\"k\">.</span>prototype<span class=\"k\">.</span>initComponent<span class=\"k\">.</span>call <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","        ","    <span class=\"k\">this</span><span class=\"k\">.</span>__indicators <span class=\"k\">=</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>view<span class=\"k\">.</span>querySelector <span class=\"k\">(</span><span class=\"s\">'.vs_ext_ui_carousel &gt;.indicators'</span><span class=\"k\">);</span>","    vs<span class=\"k\">.</span>util<span class=\"k\">.</span>addClassName <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__indicators<span class=\"k\">,</span> <span class=\"s\">'horizontal'</span><span class=\"k\">);</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>_slideController <span class=\"k\">=</span> <span class=\"k\">new</span> vs<span class=\"k\">.</span>fx<span class=\"k\">.</span>SlideController <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>_slideController<span class=\"k\">.</span>delegate <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>_slideController<span class=\"k\">.</span>isTactile <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>_slideController<span class=\"k\">.</span>init <span class=\"k\">();</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  refresh <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_slideController <span class=\"k\">&amp;&amp;</span> <span class=\"k\">this</span><span class=\"k\">.</span>_slideController<span class=\"k\">.</span>refresh<span class=\"k\">)</span>","    <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>_slideController<span class=\"k\">.</span>refresh <span class=\"k\">();</span> <span class=\"k\">}</span>","","    vs<span class=\"k\">.</span>ui<span class=\"k\">.</span>View<span class=\"k\">.</span>prototype<span class=\"k\">.</span>refresh<span class=\"k\">.</span>call <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  "," <span class=\"c\">/**********************************************************************</span>","<span class=\"c\"> </span>","<span class=\"c\"> *********************************************************************/</span>"," ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @private</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  controllerViewWillChange <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>from_comp<span class=\"k\">,</span> to_comp<span class=\"k\">,</span> controller<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__indicators_timer<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      clearTimeout <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__indicators_timer<span class=\"k\">);</span>","      __indicators_timer <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">var</span> i_id <span class=\"k\">=</span> to_comp<span class=\"k\">.</span>id<span class=\"k\">,</span> self <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>__indicators_timer <span class=\"k\">=</span> setTimeout <span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>self<span class=\"k\">.</span>__selected_indicator<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        vs<span class=\"k\">.</span>util<span class=\"k\">.</span>removeClassName <span class=\"k\">(</span>self<span class=\"k\">.</span>__selected_indicator<span class=\"k\">,</span> <span class=\"s\">'selected'</span><span class=\"k\">);</span>","      <span class=\"k\">}</span>","      self<span class=\"k\">.</span>__selected_indicator <span class=\"k\">=</span> self<span class=\"k\">.</span>__indicators_list <span class=\"k\">[</span>i_id<span class=\"k\">];</span>","      vs<span class=\"k\">.</span>util<span class=\"k\">.</span>addClassName <span class=\"k\">(</span>self<span class=\"k\">.</span>__selected_indicator<span class=\"k\">,</span> <span class=\"s\">'selected'</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"s\">500</span><span class=\"k\">);</span>","    ","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_delegate <span class=\"k\">&amp;&amp;</span> <span class=\"k\">this</span><span class=\"k\">.</span>_delegate<span class=\"k\">.</span>carouselViewWillChange<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_delegate<span class=\"k\">.</span>carouselViewWillChange <span class=\"k\">(</span>to_comp<span class=\"k\">);</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","   ","   <span class=\"c\">/**</span>","<span class=\"c\">   *  Add a child component to the carousel</span>","<span class=\"c\">   *  &lt;p&gt;</span>","<span class=\"c\">   *  The component can be a graphic component (vs.ui.View) or</span>","<span class=\"c\">   *  a non graphic component (vs.core.EventSource).</span>","<span class=\"c\">   *  In case of vs.ui.View its mandatory to set the extension.</span>","<span class=\"c\">   *  &lt;p&gt;</span>","<span class=\"c\">   *  @example</span>","<span class=\"c\">   *  var carousel = new Carousel (config);</span>","<span class=\"c\">   *  carousel.init ();</span>","<span class=\"c\">   *  // instanced component</span>","<span class=\"c\">   *  var comp = new AComponent (data);</span>","<span class=\"c\">   *  carousel.add (comp);</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.ext.ui.Carousel#add</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   * @param {vs.ui.View} child The component to add.</span>","<span class=\"c\">   */</span>","  add <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>child<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    vs<span class=\"k\">.</span>ui<span class=\"k\">.</span>View<span class=\"k\">.</span>prototype<span class=\"k\">.</span>add<span class=\"k\">.</span>call <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> child<span class=\"k\">,</span> <span class=\"s\">'children'</span><span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>push <span class=\"k\">(</span>child<span class=\"k\">)</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","   <span class=\"c\">/**</span>","<span class=\"c\">   *  Add a child component to the carousel</span>","<span class=\"c\">   *  &lt;p&gt;</span>","<span class=\"c\">   *  The component must be a graphic component (vs.ui.View).</span>","<span class=\"c\">   *  It will be instantiated, init and added automaticaly</span>","<span class=\"c\">   *  &lt;p&gt;</span>","<span class=\"c\">   *  @example</span>","<span class=\"c\">   *  var carousel = new Carousel (config);</span>","<span class=\"c\">   *  carousel.init ();</span>","<span class=\"c\">   *  myController.push ('AComponent1', data1);</span>","<span class=\"c\">   *  myController.push ('AComponent1', data2);</span>","<span class=\"c\">   *  myController.push ('AComponent2', data3);</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.ext.ui.Carousel#push</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   * @param {vs.ui.View | String} comp The GUI component or the component</span>","<span class=\"c\">   *     name to instanciate   </span>","<span class=\"c\">   * @param {Object} config Configuration structure need to build the </span>","<span class=\"c\">   *     component.</span>","<span class=\"c\">   */</span>","  push <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>child<span class=\"k\">,</span> config<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"c\">// Test if the component is already added</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>isChild <span class=\"k\">(</span>child<span class=\"k\">))</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_slideController<span class=\"k\">.</span>isStateExit <span class=\"k\">(</span>child<span class=\"k\">.</span>id<span class=\"k\">))</span>","      <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">var</span> span<span class=\"k\">,</span> state_id <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_slideController<span class=\"k\">.</span>push <span class=\"k\">(</span>child<span class=\"k\">,</span> config<span class=\"k\">);</span>","    ","    span <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement <span class=\"k\">(</span><span class=\"s\">'span'</span><span class=\"k\">);</span>","    ","    <span class=\"k\">this</span><span class=\"k\">.</span>__indicators<span class=\"k\">.</span>appendChild <span class=\"k\">(</span>span<span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>__indicators_list <span class=\"k\">[</span>state_id<span class=\"k\">]</span> <span class=\"k\">=</span> span<span class=\"k\">;</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   *  Remove the specified child component from this component.</span>","<span class=\"c\">   * </span>","<span class=\"c\">   *  @example</span>","<span class=\"c\">   *  myObject.remove (myButton);</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.ext.ui.Carousel#remove</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   * @param {vs.core.EventSource} child The component to be removed.</span>","<span class=\"c\">   */</span>","  remove <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>child<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>child <span class=\"k\">||</span> <span class=\"k\">!</span>child<span class=\"k\">.</span>id<span class=\"k\">)</span>","    <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    ","    <span class=\"k\">var</span> span <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>__indicators_list <span class=\"k\">[</span>child<span class=\"k\">.</span>id<span class=\"k\">];</span>","    ","    <span class=\"k\">this</span><span class=\"k\">.</span>__indicators<span class=\"k\">.</span>removeChild <span class=\"k\">(</span>span<span class=\"k\">);</span>","    <span class=\"k\">delete</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__indicators_list <span class=\"k\">[</span>child<span class=\"k\">.</span>id<span class=\"k\">]);</span>","","    vs<span class=\"k\">.</span>ui<span class=\"k\">.</span>View<span class=\"k\">.</span>prototype<span class=\"k\">.</span>remove<span class=\"k\">.</span>call <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> child<span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * Remove all panels</span>","<span class=\"c\">   * @name vs.ext.ui.Carousel#removeAllChildren</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  removeAllChildren <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> id <span class=\"k\">in</span> <span class=\"k\">this</span><span class=\"k\">.</span>__indicators_list<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">var</span> comp <span class=\"k\">=</span> vs<span class=\"k\">.</span>core<span class=\"k\">.</span>Object<span class=\"k\">.</span>_obs <span class=\"k\">[</span>id<span class=\"k\">];</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>remove <span class=\"k\">(</span>comp<span class=\"k\">);</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>",""," <span class=\"c\">/**********************************************************************</span>","<span class=\"c\"> </span>","<span class=\"c\"> *********************************************************************/</span>"," ","  <span class=\"c\">/**</span>","<span class=\"c\">   * Go to the next view</span>","<span class=\"c\">   * @name vs.ext.ui.Carousel#goToNextView</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  goToNextView <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>_slideController<span class=\"k\">.</span>goToNextView <span class=\"k\">();</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>"," ","  <span class=\"c\">/**</span>","<span class=\"c\">   * Go to the previous view</span>","<span class=\"c\">   * @name vs.ext.ui.Carousel#goToPreviousView</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  goToPreviousView <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>_slideController<span class=\"k\">.</span>goToPreviousView <span class=\"k\">();</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   *  Go to the view specified by its id</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.ext.ui.Carousel#goToView</span>","<span class=\"c\">   * @param {string} id The component id</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  goToView <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>id<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>_slideController<span class=\"k\">.</span>goToViewId <span class=\"k\">(</span>id<span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   *  Go to the view specified by its position (index start at 0)</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.ext.ui.Carousel#goToViewAt</span>","<span class=\"c\">   * @param {number} index The component index</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  goToViewAt <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>index<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>_slideController<span class=\"k\">.</span>goToViewAt <span class=\"k\">(</span>index<span class=\"k\">);</span>","  <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","util<span class=\"k\">.</span>extendClass <span class=\"k\">(</span>Carousel<span class=\"k\">,</span> vs<span class=\"k\">.</span>ui<span class=\"k\">.</span>View<span class=\"k\">);</span>","","<span class=\"c\">/********************************************************************</span>","<span class=\"c\">                  Define class properties</span>","<span class=\"c\">********************************************************************/</span>","","util<span class=\"k\">.</span>defineClassProperties <span class=\"k\">(</span>Carousel<span class=\"k\">,</span> <span class=\"k\">{</span>","","  <span class=\"s\">'size'</span><span class=\"k\">:</span> <span class=\"k\">{</span>","    <span class=\"c\">/** </span>","<span class=\"c\">     * Getter|Setter for size. Gives access to the size of the GUI Object</span>","<span class=\"c\">     * @name vs.ext.ui.Carousel#size </span>","<span class=\"c\">     * @function.</span>","<span class=\"c\">     * @type {Array.&lt;number&gt;}</span>","<span class=\"c\">     */</span> ","    set <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>v<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(!</span>v<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span> ","      <span class=\"k\">if</span> <span class=\"k\">(!</span>util<span class=\"k\">.</span>isArray <span class=\"k\">(</span>v<span class=\"k\">)</span> <span class=\"k\">||</span> v<span class=\"k\">.</span>length <span class=\"k\">!==</span> <span class=\"s\">2</span><span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      <span class=\"k\">if</span> <span class=\"k\">(!</span>util<span class=\"k\">.</span>isNumber <span class=\"k\">(</span>v<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">])</span> <span class=\"k\">||</span> <span class=\"k\">!</span>util<span class=\"k\">.</span>isNumber<span class=\"k\">(</span>v<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]))</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      ","      <span class=\"k\">this</span><span class=\"k\">.</span>_size <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">=</span> v <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_size <span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]</span> <span class=\"k\">=</span> v <span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">];</span>","      ","      <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>view<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_updateSize <span class=\"k\">();</span>","  ","      <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_slideController <span class=\"k\">&amp;&amp;</span> <span class=\"k\">this</span><span class=\"k\">.</span>_slideController<span class=\"k\">.</span>refresh<span class=\"k\">)</span>","      <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>_slideController<span class=\"k\">.</span>refresh <span class=\"k\">();</span> <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","    ","    <span class=\"c\">/**</span>","<span class=\"c\">     * @type {Array.&lt;number&gt;}</span>","<span class=\"c\">     * @ignore</span>","<span class=\"c\">     */</span>","    get <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","    <span class=\"k\">{</span>","      <span class=\"k\">var</span> view <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>view<span class=\"k\">;</span>","       <span class=\"k\">if</span> <span class=\"k\">(</span>view <span class=\"k\">&amp;&amp;</span> view<span class=\"k\">.</span>parentNode<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>_size <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">=</span> view<span class=\"k\">.</span>offsetWidth<span class=\"k\">;</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>_size <span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]</span> <span class=\"k\">=</span> view<span class=\"k\">.</span>offsetHeight<span class=\"k\">;</span>","      <span class=\"k\">}</span>","      <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_size<span class=\"k\">.</span>slice <span class=\"k\">();</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  <span class=\"s\">'delegate'</span><span class=\"k\">:</span> <span class=\"k\">{</span>","","    <span class=\"c\">/** </span>","<span class=\"c\">     * Set the delegate.</span>","<span class=\"c\">     * It should implements following methods</span>","<span class=\"c\">     *  &lt;ul&gt;</span>","<span class=\"c\">     *    &lt;li/&gt;carouselViewWillChange : function (view /* vs.ui.View /)</span>","<span class=\"c\">     *  &lt;/ul&gt;</span>","<span class=\"c\">     * @name vs.ext.ui.Carousel#delegate </span>","<span class=\"c\">     * @type Object</span>","<span class=\"c\">     */</span> ","    set <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>v<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_delegate <span class=\"k\">=</span> v<span class=\"k\">;</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  <span class=\"s\">'indicatorsVisibility'</span><span class=\"k\">:</span> <span class=\"k\">{</span>","","    <span class=\"c\">/** </span>","<span class=\"c\">     * Set indicators visible or not</span>","<span class=\"c\">     * &lt;p&gt;</span>","<span class=\"c\">     * By default its set to true</span>","<span class=\"c\">     * @name vs.ext.ui.Carousel#indicatorsVisibility </span>","<span class=\"c\">     * @type boolean</span>","<span class=\"c\">     */</span> ","    set <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>v<span class=\"k\">)</span>","    <span class=\"k\">{</span> ","      <span class=\"k\">if</span> <span class=\"k\">(</span>v<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>_indicators_visibility <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","        __setVisible <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__indicators<span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","      <span class=\"k\">}</span>","      <span class=\"k\">else</span>","      <span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>_indicators_visibility <span class=\"k\">=</span> <span class=\"k\">false</span>","        __setVisible <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__indicators<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">);</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  <span class=\"s\">'orientation'</span><span class=\"k\">:</span> <span class=\"k\">{</span>","","    <span class=\"c\">/** </span>","<span class=\"c\">     * Getter|Setter for the tab bar style</span>","<span class=\"c\">     * @name vs.ext.ui.Carousel#orientation </span>","<span class=\"c\">     * @type String</span>","<span class=\"c\">     */</span> ","    set <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>v<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>v <span class=\"k\">!==</span> Carousel<span class=\"k\">.</span>HORIZONTAL <span class=\"k\">&amp;&amp;</span>","          v <span class=\"k\">!==</span> Carousel<span class=\"k\">.</span>VERTICAL<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      ","      <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_orientation <span class=\"k\">===</span> v<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>v <span class=\"k\">===</span> Carousel<span class=\"k\">.</span>HORIZONTAL<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        vs<span class=\"k\">.</span>util<span class=\"k\">.</span>removeClassName <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__indicators<span class=\"k\">,</span> <span class=\"s\">'vertical'</span><span class=\"k\">);</span>","        vs<span class=\"k\">.</span>util<span class=\"k\">.</span>addClassName <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__indicators<span class=\"k\">,</span> <span class=\"s\">'horizontal'</span><span class=\"k\">);</span>","      <span class=\"k\">}</span>","      <span class=\"k\">else</span>","      <span class=\"k\">{</span>","        vs<span class=\"k\">.</span>util<span class=\"k\">.</span>removeClassName <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__indicators<span class=\"k\">,</span> <span class=\"s\">'horizontal'</span><span class=\"k\">);</span>","        vs<span class=\"k\">.</span>util<span class=\"k\">.</span>addClassName <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__indicators<span class=\"k\">,</span> <span class=\"s\">'vertical'</span><span class=\"k\">);</span>","      <span class=\"k\">}</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_orientation <span class=\"k\">=</span> v<span class=\"k\">;</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_slideController<span class=\"k\">.</span>orientation <span class=\"k\">=</span> v<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","  ","    <span class=\"c\">/** </span>","<span class=\"c\">     * @return {String}</span>","<span class=\"c\">     * @ignore</span>","<span class=\"c\">     */</span> ","    get <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","    <span class=\"k\">{</span>","      <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_orientation<span class=\"k\">;</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span>","<span class=\"k\">);</span>","","<span class=\"c\">/********************************************************************</span>","<span class=\"c\">                      Export</span>","<span class=\"c\">*********************************************************************/</span>","<span class=\"c\">/** @private */</span>","ext_ui<span class=\"k\">.</span>Carousel <span class=\"k\">=</span> Carousel<span class=\"k\">;</span>","<span class=\"c\">/**</span>","<span class=\"c\">  Copyright (C) 2009-2012. David Thevenin, ViniSketch SARL (c), and </span>","<span class=\"c\">  contributors. All rights reserved</span>","<span class=\"c\">  </span>","<span class=\"c\">  This program is free software: you can redistribute it and/or modify</span>","<span class=\"c\">  it under the terms of the GNU Lesser General Public License as published</span>","<span class=\"c\">  by the Free Software Foundation, either version 3 of the License, or</span>","<span class=\"c\">  (at your option) any later version.</span>","<span class=\"c\">  </span>","<span class=\"c\">  This program is distributed in the hope that it will be useful,</span>","<span class=\"c\">  but WITHOUT ANY WARRANTY; without even the implied warranty of</span>","<span class=\"c\">  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the</span>","<span class=\"c\">  GNU Lesser General Public License for more details.</span>","<span class=\"c\">  </span>","<span class=\"c\">  You should have received a copy of the GNU Lesser General Public License</span>","<span class=\"c\">  along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.</span>","<span class=\"c\">*/</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> *  The vs.ext.ui.Accordion class</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  @extends vs.ui.View</span>","<span class=\"c\"> *  @class</span>","<span class=\"c\"> *  The Accordion class is a subclass of View that allows you to show</span>","<span class=\"c\"> *  a set of panels which can be collapsed or expanded.</span>","<span class=\"c\"> *  &lt;p/&gt;</span>","<span class=\"c\"> *  Events:</span>","<span class=\"c\"> *  &lt;ul&gt;</span>","<span class=\"c\"> *    &lt;li /&gt; panel_select: Fired after a panel is expanded. Data = index</span>","<span class=\"c\"> *           of the panel (zero-indexed number)</span>","<span class=\"c\"> *  &lt;/ul&gt;</span>","<span class=\"c\"> *  &lt;p&gt;</span>","<span class=\"c\"> *  @example</span>","<span class=\"c\"> *  var config = {};</span>","<span class=\"c\"> *  var config.id = vs.core.createId ();</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  var accordion = new vs.ext.ui.Accordion ();</span>","<span class=\"c\"> *  accordion.init ();</span>","<span class=\"c\"> *  accordion.size = [300, 500];</span>","<span class=\"c\"> *  </span>","<span class=\"c\"> *  accordion.add (obj1);</span>","<span class=\"c\"> *  accordion.add (tabList3);</span>","<span class=\"c\"> *  accordion.add (vv);</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  @author David Thevenin</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @name vs.ext.ui.Accordion </span>","<span class=\"c\"> *  @constructor</span>","<span class=\"c\"> *   Creates a new vs.ext.ui.Accordion.</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @param  {Object} config The configuration structure [mandatory]</span>","<span class=\"c\">*/</span>","<span class=\"k\">var</span> Accordion <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>config<span class=\"k\">)</span>","<span class=\"k\">{</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>parent <span class=\"k\">=</span> ui<span class=\"k\">.</span>View<span class=\"k\">;</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>parent <span class=\"k\">(</span>config<span class=\"k\">);</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>constructor <span class=\"k\">=</span> Accordion<span class=\"k\">;</span>","  ","  <span class=\"k\">this</span><span class=\"k\">.</span>__ab_a_items <span class=\"k\">=</span> <span class=\"k\">[];</span>","<span class=\"k\">}</span>","","<span class=\"c\">/** </span>","<span class=\"c\"> * Widgets keep there size and position</span>","<span class=\"c\"> * @see vs.ext.ui.Accordion#stretch </span>","<span class=\"c\"> * @name vs.ext.ui.Accordion.STRETCH_NONE </span>","<span class=\"c\"> * @const</span>","<span class=\"c\"> */</span>","Accordion<span class=\"k\">.</span>STRETCH_NONE <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","","<span class=\"c\">/** </span>","<span class=\"c\"> * Widgets size fit the panel view size</span>","<span class=\"c\"> * @see vs.ext.ui.Accordion#stretch </span>","<span class=\"c\"> * @name vs.ext.ui.Accordion.STRETCH_FILL </span>","<span class=\"c\"> * @const</span>","<span class=\"c\"> */</span>","Accordion<span class=\"k\">.</span>STRETCH_FILL <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">;</span>","","","Accordion<span class=\"k\">.</span>prototype <span class=\"k\">=</span> <span class=\"k\">{</span>","  ","  <span class=\"c\">/*****************************************************************</span>","<span class=\"c\">   *               private/protected members</span>","<span class=\"c\">   ****************************************************************/</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   */</span>","  _stretch<span class=\"k\">:</span> Accordion<span class=\"k\">.</span>STRETCH_NONE<span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @private</span>","<span class=\"c\">   */</span>","  __ab_a_items<span class=\"k\">:</span> undefined<span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @private</span>","<span class=\"c\">   */</span>","  __ab_a_current_index<span class=\"k\">:</span> undefined<span class=\"k\">,</span>","    ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @private</span>","<span class=\"c\">   */</span>","  __ab_a_head_height<span class=\"k\">:</span> <span class=\"s\">33</span><span class=\"k\">,</span>","    ","  <span class=\"c\">/*****************************************************************</span>","<span class=\"c\">   *                 </span>","<span class=\"c\">   ****************************************************************/</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   *  Add the child component to the accordion and set the panel title.</span>","<span class=\"c\">   *  &lt;p&gt;</span>","<span class=\"c\">   *  Call push is similar to call add followed by setPanelTitle.</span>","<span class=\"c\">   *  &lt;p&gt;</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.ext.ui.Accordion#push </span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   * @param {vs.ui.View} child The component to be added.</span>","<span class=\"c\">   * @param {String} title the new panel title</span>","<span class=\"c\">   */</span>","  push <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>child<span class=\"k\">,</span> title<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>child<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>add <span class=\"k\">(</span>child<span class=\"k\">);</span>","    <span class=\"k\">var</span> index <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_getIndexForChild <span class=\"k\">(</span>child<span class=\"k\">)</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>setPanelTitle <span class=\"k\">(</span>index<span class=\"k\">,</span> title<span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   *  Add the specified child component to this component.</span>","<span class=\"c\">   *  &lt;p&gt;</span>","<span class=\"c\">   *  The add is a lazy add! The child's view can be already in</span>","<span class=\"c\">   *  the HTML DOM. In that case, the add methode do not modify the DOM.</span>","<span class=\"c\">   *  &lt;p&gt;</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.ext.ui.Accordion#add</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   * @param  {vs.ui.View} child The component to be added.</span>","<span class=\"c\">   */</span>","  add <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>child<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>child<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    <span class=\"k\">var</span> view<span class=\"k\">,</span> index<span class=\"k\">,</span> result<span class=\"k\">;</span>","    ","    <span class=\"k\">if</span> <span class=\"k\">(!</span>child<span class=\"k\">.</span>id<span class=\"k\">)</span> <span class=\"k\">{</span> child<span class=\"k\">.</span>id <span class=\"k\">=</span> vs<span class=\"k\">.</span>core<span class=\"k\">.</span>createId <span class=\"k\">();</span> <span class=\"k\">}</span>","    ","    index <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>__ab_a_items<span class=\"k\">.</span>length<span class=\"k\">;</span>","    ","    result <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_createView <span class=\"k\">(</span>child<span class=\"k\">,</span> <span class=\"s\">'Section '</span> <span class=\"k\">+</span> <span class=\"k\">(</span>index <span class=\"k\">+</span> <span class=\"s\">1</span><span class=\"k\">),</span> index<span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>view<span class=\"k\">.</span>appendChild <span class=\"k\">(</span>result<span class=\"k\">.</span>dt<span class=\"k\">);</span>","    ui<span class=\"k\">.</span>View<span class=\"k\">.</span>prototype<span class=\"k\">.</span>add<span class=\"k\">.</span>call <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> child<span class=\"k\">,</span> <span class=\"s\">'children'</span><span class=\"k\">,</span> result<span class=\"k\">.</span>dd<span class=\"k\">);</span>","    ","    <span class=\"k\">this</span><span class=\"k\">.</span>__ab_a_items<span class=\"k\">.</span>push <span class=\"k\">(</span>result<span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>_updateSizePanel <span class=\"k\">();</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   *  Remove the specified child component from this component.</span>","<span class=\"c\">   * </span>","<span class=\"c\">   *  @example</span>","<span class=\"c\">   *  myObject.remove (myButton);</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.ext.ui.Accordion#remove </span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   * @param  {vs.core.EventSource} child The component to be removed.</span>","<span class=\"c\">   */</span>","  remove <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>child<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">var</span> index <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_getIndexForChild <span class=\"k\">(</span>child<span class=\"k\">),</span> panel<span class=\"k\">;</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>index <span class=\"k\">===</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">)</span>","    <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    ","    ui<span class=\"k\">.</span>View<span class=\"k\">.</span>prototype<span class=\"k\">.</span>remove<span class=\"k\">.</span>call <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> child<span class=\"k\">);</span>","    panel <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>__ab_a_items <span class=\"k\">[</span>index<span class=\"k\">];</span>","    panel<span class=\"k\">.</span>dd<span class=\"k\">.</span>removeChild <span class=\"k\">(</span>child<span class=\"k\">.</span>view<span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>view<span class=\"k\">.</span>removeChild <span class=\"k\">(</span>panel<span class=\"k\">.</span>dt<span class=\"k\">);</span>","    panel<span class=\"k\">.</span>dt<span class=\"k\">.</span>removeEventListener <span class=\"k\">(</span>core<span class=\"k\">.</span>POINTER_START<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","    <span class=\"k\">delete</span> <span class=\"k\">(</span>panel<span class=\"k\">.</span>dt<span class=\"k\">);</span>","    <span class=\"k\">delete</span> <span class=\"k\">(</span>panel<span class=\"k\">.</span>dd<span class=\"k\">);</span>","    <span class=\"k\">delete</span> <span class=\"k\">(</span>panel<span class=\"k\">);</span>","    ","    <span class=\"k\">this</span><span class=\"k\">.</span>__ab_a_items<span class=\"k\">.</span>remove <span class=\"k\">(</span>index<span class=\"k\">);</span>","","    <span class=\"k\">if</span> <span class=\"k\">(</span>index <span class=\"k\">===</span> <span class=\"k\">this</span><span class=\"k\">.</span>__ab_a_current_index<span class=\"k\">)</span>","    <span class=\"c\">// Show the first panel</span>","    <span class=\"k\">{</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>__ab_a_current_index <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>expandPanel <span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","    <span class=\"k\">else</span>","    <span class=\"c\">// update widget size (and children) to fit with the new available space</span>","    <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>_updateSizePanel <span class=\"k\">();</span> <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @private</span>","<span class=\"c\">   */</span>","  _getIndexForChild <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>child<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>child<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    ","    <span class=\"k\">var</span> index<span class=\"k\">,</span> panel<span class=\"k\">;</span>","    ","    <span class=\"k\">for</span> <span class=\"k\">(</span>index <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> index <span class=\"k\">&lt;</span> <span class=\"k\">this</span><span class=\"k\">.</span>__ab_a_items<span class=\"k\">.</span>length<span class=\"k\">;</span> index<span class=\"k\">++)</span>","    <span class=\"k\">{</span>","      panel <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>__ab_a_items <span class=\"k\">[</span>index<span class=\"k\">];</span>","      <span class=\"k\">if</span> <span class=\"k\">(!</span>panel <span class=\"k\">||</span> <span class=\"k\">!</span>panel<span class=\"k\">.</span>dd<span class=\"k\">)</span>","      <span class=\"k\">{</span> <span class=\"k\">continue</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>panel<span class=\"k\">.</span>dd<span class=\"k\">.</span>__child <span class=\"k\">===</span> child<span class=\"k\">)</span>","      <span class=\"k\">{</span> <span class=\"k\">return</span> index<span class=\"k\">;</span> <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    <span class=\"k\">return</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @private</span>","<span class=\"c\">   */</span>","  _createView <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>child<span class=\"k\">,</span> title<span class=\"k\">,</span> index<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">var</span> panel <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">,</span> mode<span class=\"k\">;</span>","    ","    panel<span class=\"k\">.</span>dt <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement <span class=\"k\">(</span><span class=\"s\">'dt'</span><span class=\"k\">);</span>","    util<span class=\"k\">.</span>setElementInnerText <span class=\"k\">(</span>panel<span class=\"k\">.</span>dt<span class=\"k\">,</span> title<span class=\"k\">);</span>","    panel<span class=\"k\">.</span>title <span class=\"k\">=</span> title<span class=\"k\">;</span>","","    panel<span class=\"k\">.</span>dd <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement <span class=\"k\">(</span><span class=\"s\">'dd'</span><span class=\"k\">);</span>      ","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_stretch <span class=\"k\">===</span> Accordion<span class=\"k\">.</span>STRETCH_FILL<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      child<span class=\"k\">.</span>position <span class=\"k\">=</span> <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">];</span>","    <span class=\"k\">}</span>","    panel<span class=\"k\">.</span>dd<span class=\"k\">.</span>appendChild <span class=\"k\">(</span>child<span class=\"k\">.</span>view<span class=\"k\">);</span>","    ","    mode <span class=\"k\">=</span> <span class=\"k\">(</span>index<span class=\"k\">)?</span><span class=\"s\">'collapsed'</span><span class=\"k\">:</span><span class=\"s\">'expanded'</span>","","    panel<span class=\"k\">.</span>dd<span class=\"k\">.</span>setAttribute <span class=\"k\">(</span><span class=\"s\">\"class\"</span><span class=\"k\">,</span> mode<span class=\"k\">);</span>","    panel<span class=\"k\">.</span>dt<span class=\"k\">.</span>setAttribute <span class=\"k\">(</span><span class=\"s\">\"class\"</span><span class=\"k\">,</span> mode<span class=\"k\">);</span>","    panel<span class=\"k\">.</span>dd<span class=\"k\">.</span>__child <span class=\"k\">=</span> child","    panel<span class=\"k\">.</span>child <span class=\"k\">=</span> child<span class=\"k\">;</span>","","    <span class=\"k\">if</span> <span class=\"k\">(</span>mode <span class=\"k\">===</span> <span class=\"s\">'collapsed'</span><span class=\"k\">)</span>","    <span class=\"k\">{</span>","      panel<span class=\"k\">.</span>dd<span class=\"k\">.</span>style<span class=\"k\">.</span>width <span class=\"k\">=</span> <span class=\"s\">'100%'</span><span class=\"k\">;</span>","      panel<span class=\"k\">.</span>dd<span class=\"k\">.</span>style<span class=\"k\">.</span>height <span class=\"k\">=</span> <span class=\"s\">'0px'</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","    <span class=\"k\">else</span>","    <span class=\"k\">{</span>","      panel<span class=\"k\">.</span>dd<span class=\"k\">.</span>style<span class=\"k\">.</span>width <span class=\"k\">=</span> <span class=\"s\">'100%'</span><span class=\"k\">;</span>","      panel<span class=\"k\">.</span>dd<span class=\"k\">.</span>style<span class=\"k\">.</span>height <span class=\"k\">=</span> child<span class=\"k\">.</span>_size <span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]</span> <span class=\"k\">+</span> <span class=\"s\">'px'</span><span class=\"k\">;</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>__ab_a_current_index <span class=\"k\">=</span> index<span class=\"k\">;</span>","    <span class=\"k\">}</span>","        ","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_stretch <span class=\"k\">===</span> Accordion<span class=\"k\">.</span>STRETCH_FILL<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      child<span class=\"k\">.</span>size <span class=\"k\">=</span> <span class=\"k\">[</span><span class=\"k\">this</span><span class=\"k\">.</span>_size<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">-</span> <span class=\"s\">2</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>_size<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]];</span>","    <span class=\"k\">}</span>","    panel<span class=\"k\">.</span>dt<span class=\"k\">.</span>__dd <span class=\"k\">=</span> panel<span class=\"k\">.</span>dd<span class=\"k\">;</span>","    panel<span class=\"k\">.</span>dt<span class=\"k\">.</span>__index <span class=\"k\">=</span> index<span class=\"k\">;</span>","    panel<span class=\"k\">.</span>dt<span class=\"k\">.</span>addEventListener <span class=\"k\">(</span>core<span class=\"k\">.</span>POINTER_START<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","    <span class=\"k\">return</span> panel<span class=\"k\">;</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   *  Expand a part of the accordion.</span>","<span class=\"c\">   *  &lt;p&gt;</span>","<span class=\"c\">   *  The index can be zero-indexed number to match the position or the title of </span>","<span class=\"c\">   *  the panel you want to open.</span>","<span class=\"c\">   *  &lt;p&gt;</span>","<span class=\"c\">   *  @example</span>","<span class=\"c\">   *  var accordion = new vs.ext.ui.Accordion (conf);</span>","<span class=\"c\">   *  ....</span>","<span class=\"c\">   *  accordion.expandPanel (2);</span>","<span class=\"c\">   *  accordion.expandPanel ('Section 2');</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.ext.ui.Accordion#expandPanel </span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   * @param  {number | String} index position or title of the panel to open</span>","<span class=\"c\">   */</span>","  expandPanel<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>index<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">var</span> panel<span class=\"k\">,</span> i<span class=\"k\">;</span>","    ","    <span class=\"k\">if</span> <span class=\"k\">(</span>util<span class=\"k\">.</span>isNumber <span class=\"k\">(</span>index<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> index <span class=\"k\">&gt;=</span> <span class=\"s\">0</span> <span class=\"k\">&amp;&amp;</span> ","        index <span class=\"k\">&lt;</span> <span class=\"k\">this</span><span class=\"k\">.</span>__ab_a_items<span class=\"k\">.</span>length<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>index <span class=\"k\">===</span> <span class=\"k\">this</span><span class=\"k\">.</span>__ab_a_current_index<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        <span class=\"k\">return</span><span class=\"k\">;</span>","      <span class=\"k\">}</span>","      ","      panel <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>__ab_a_items <span class=\"k\">[</span><span class=\"k\">this</span><span class=\"k\">.</span>__ab_a_current_index<span class=\"k\">];</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>panel<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        util<span class=\"k\">.</span>removeClassName <span class=\"k\">(</span>panel<span class=\"k\">.</span>dt<span class=\"k\">,</span> <span class=\"s\">'expanded'</span><span class=\"k\">);</span>","        util<span class=\"k\">.</span>addClassName <span class=\"k\">(</span>panel<span class=\"k\">.</span>dt<span class=\"k\">,</span> <span class=\"s\">'collapsed'</span><span class=\"k\">);</span>","        panel<span class=\"k\">.</span>dd<span class=\"k\">.</span>style<span class=\"k\">.</span>height <span class=\"k\">=</span> <span class=\"s\">'0px'</span><span class=\"k\">;</span>","      <span class=\"k\">}</span>","  ","      panel <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>__ab_a_items <span class=\"k\">[</span>index<span class=\"k\">];</span>","      util<span class=\"k\">.</span>removeClassName <span class=\"k\">(</span>panel<span class=\"k\">.</span>dt<span class=\"k\">,</span> <span class=\"s\">'collapsed'</span><span class=\"k\">);</span>","      util<span class=\"k\">.</span>addClassName <span class=\"k\">(</span>panel<span class=\"k\">.</span>dt<span class=\"k\">,</span> <span class=\"s\">'expanded'</span><span class=\"k\">);</span>","  ","      <span class=\"k\">this</span><span class=\"k\">.</span>__ab_a_current_index <span class=\"k\">=</span> index<span class=\"k\">;</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_updateSizePanel <span class=\"k\">();</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>propagate <span class=\"k\">(</span><span class=\"s\">'panel_select'</span><span class=\"k\">,</span> index<span class=\"k\">);</span>","      <span class=\"k\">return</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>util<span class=\"k\">.</span>isString <span class=\"k\">(</span>index<span class=\"k\">))</span>","    <span class=\"k\">{</span>","      <span class=\"k\">for</span> <span class=\"k\">(</span>i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> <span class=\"k\">this</span><span class=\"k\">.</span>__ab_a_items<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++)</span>","      <span class=\"k\">{</span>","        panel <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>__ab_a_items <span class=\"k\">[</span>i<span class=\"k\">];</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>panel<span class=\"k\">.</span>title <span class=\"k\">===</span> index<span class=\"k\">)</span>","        <span class=\"k\">{</span>","          <span class=\"k\">this</span><span class=\"k\">.</span>expandPanel <span class=\"k\">(</span>i<span class=\"k\">);</span>","          <span class=\"k\">return</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   *  Set a title for a give panel</span>","<span class=\"c\">   *  &lt;p&gt;</span>","<span class=\"c\">   *  The index can be zero-indexed number to match the position or the title of </span>","<span class=\"c\">   *  the panel you want to open.</span>","<span class=\"c\">   *  &lt;p&gt;</span>","<span class=\"c\">   *  @example</span>","<span class=\"c\">   *  var accordion = new vs.ext.ui.Accordion (conf);</span>","<span class=\"c\">   *  ....</span>","<span class=\"c\">   *  accordion.setPanelTitle (2, 'info 2');</span>","<span class=\"c\">   *  accordion.setPanelTitle ('Section 1', 'info 1');</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.ext.ui.Accordion#setPanelTitle </span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   * @param  {number | String} index position or title of the panel to open</span>","<span class=\"c\">   * @param  {String} title the new panel title</span>","<span class=\"c\">   */</span>","  setPanelTitle<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>index<span class=\"k\">,</span> title<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">var</span> panel<span class=\"k\">,</span> i<span class=\"k\">;</span>","    ","    <span class=\"k\">if</span> <span class=\"k\">(</span>util<span class=\"k\">.</span>isNumber <span class=\"k\">(</span>index<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> index <span class=\"k\">&gt;=</span> <span class=\"s\">0</span> <span class=\"k\">&amp;&amp;</span> ","        index <span class=\"k\">&lt;</span> <span class=\"k\">this</span><span class=\"k\">.</span>__ab_a_items<span class=\"k\">.</span>length<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      panel <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>__ab_a_items <span class=\"k\">[</span>index<span class=\"k\">];</span>","      panel<span class=\"k\">.</span>title <span class=\"k\">=</span> title<span class=\"k\">;</span>","      util<span class=\"k\">.</span>setElementInnerText <span class=\"k\">(</span>panel<span class=\"k\">.</span>dt<span class=\"k\">,</span> title<span class=\"k\">);</span>","      ","      <span class=\"k\">return</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>util<span class=\"k\">.</span>isString <span class=\"k\">(</span>index<span class=\"k\">))</span>","    <span class=\"k\">{</span>","      <span class=\"k\">for</span> <span class=\"k\">(</span>i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> <span class=\"k\">this</span><span class=\"k\">.</span>__ab_a_items<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++)</span>","      <span class=\"k\">{</span>","        panel <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>__ab_a_items <span class=\"k\">[</span>i<span class=\"k\">];</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>panel<span class=\"k\">.</span>title <span class=\"k\">===</span> index<span class=\"k\">)</span>","        <span class=\"k\">{</span>","          <span class=\"k\">this</span><span class=\"k\">.</span>setPanelTitle <span class=\"k\">(</span>i<span class=\"k\">,</span> title<span class=\"k\">);</span>","          <span class=\"k\">return</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/********************************************************************</span>","<span class=\"c\">                    GUI Utilities</span>","<span class=\"c\">  ********************************************************************/</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * @private</span>","<span class=\"c\">   */</span>","  _updateSize<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    vs<span class=\"k\">.</span>ui<span class=\"k\">.</span>View<span class=\"k\">.</span>prototype<span class=\"k\">.</span>_updateSize<span class=\"k\">.</span>call <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","    ","    <span class=\"k\">this</span><span class=\"k\">.</span>_updateSizePanel <span class=\"k\">();</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @private</span>","<span class=\"c\">   */</span>","  _updateSizePanel<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    <span class=\"k\">var</span> height<span class=\"k\">,</span> panel<span class=\"k\">,</span> i<span class=\"k\">;</span>","    panel <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>__ab_a_items <span class=\"k\">[</span><span class=\"k\">this</span><span class=\"k\">.</span>__ab_a_current_index<span class=\"k\">];</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>panel<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      height <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_size <span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">];</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>__ab_a_head_height <span class=\"k\">=</span> panel<span class=\"k\">.</span>dt<span class=\"k\">.</span>offsetHeight<span class=\"k\">;</span>","      height <span class=\"k\">-=</span> <span class=\"k\">this</span><span class=\"k\">.</span>__ab_a_items<span class=\"k\">.</span>length <span class=\"k\">*</span> <span class=\"k\">this</span><span class=\"k\">.</span>__ab_a_head_height <span class=\"k\">+</span> <span class=\"s\">2</span> <span class=\"k\">+</span> <span class=\"s\">6</span><span class=\"k\">;</span>","      panel<span class=\"k\">.</span>dd<span class=\"k\">.</span>style<span class=\"k\">.</span>height <span class=\"k\">=</span> height <span class=\"k\">+</span> <span class=\"s\">'px'</span><span class=\"k\">;</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_stretch <span class=\"k\">===</span> Accordion<span class=\"k\">.</span>STRETCH_FILL<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        panel<span class=\"k\">.</span>child<span class=\"k\">.</span>size <span class=\"k\">=</span> <span class=\"k\">[</span><span class=\"k\">this</span><span class=\"k\">.</span>_size<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">-</span> <span class=\"s\">2</span><span class=\"k\">,</span> height<span class=\"k\">];</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/*****************************************************************</span>","<span class=\"c\">   *               Events management</span>","<span class=\"c\">   ****************************************************************/</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * @private</span>","<span class=\"c\">   */</span>","  handleEvent <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">var</span> elem <span class=\"k\">=</span> e<span class=\"k\">.</span>target<span class=\"k\">,</span> self <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">,</span> pageY<span class=\"k\">,</span> pageX<span class=\"k\">,</span> delta<span class=\"k\">;</span>","    ","    <span class=\"k\">if</span> <span class=\"k\">(</span>elem<span class=\"k\">.</span>nodeType <span class=\"k\">!==</span> <span class=\"s\">1</span><span class=\"k\">)</span>","    <span class=\"k\">{</span>","      elem <span class=\"k\">=</span> elem<span class=\"k\">.</span>parentElement<span class=\"k\">;</span>","    <span class=\"k\">}</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>e<span class=\"k\">.</span>type <span class=\"k\">===</span> core<span class=\"k\">.</span>POINTER_START<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"c\">// prevent multi touch events</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>EVENT_SUPPORT_TOUCH <span class=\"k\">&amp;&amp;</span> e<span class=\"k\">.</span>touches<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      ","      e<span class=\"k\">.</span>stopPropagation <span class=\"k\">();</span>","      e<span class=\"k\">.</span>preventDefault<span class=\"k\">();</span>","      ","      <span class=\"k\">if</span> <span class=\"k\">(</span>util<span class=\"k\">.</span>hasClassName <span class=\"k\">(</span>elem<span class=\"k\">,</span> <span class=\"s\">'expanded'</span><span class=\"k\">))</span>","      <span class=\"k\">{</span> <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span> <span class=\"k\">}</span>","","      document<span class=\"k\">.</span>addEventListener <span class=\"k\">(</span>core<span class=\"k\">.</span>POINTER_MOVE<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">);</span>","      document<span class=\"k\">.</span>addEventListener <span class=\"k\">(</span>core<span class=\"k\">.</span>POINTER_END<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">);</span>","      ","      <span class=\"k\">this</span><span class=\"k\">.</span>__touch_start_x <span class=\"k\">=</span> EVENT_SUPPORT_TOUCH <span class=\"k\">?</span> e<span class=\"k\">.</span>touches<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>pageY <span class=\"k\">:</span> e<span class=\"k\">.</span>pageY<span class=\"k\">;</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>__touch_start_y <span class=\"k\">=</span> EVENT_SUPPORT_TOUCH <span class=\"k\">?</span> e<span class=\"k\">.</span>touches<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>pageY <span class=\"k\">:</span> e<span class=\"k\">.</span>pageY<span class=\"k\">;</span>","","      <span class=\"k\">this</span><span class=\"k\">.</span>__elem <span class=\"k\">=</span> elem<span class=\"k\">;</span>","","      <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__elem_to_unselect<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        util<span class=\"k\">.</span>removeClassName <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__elem_to_unselect<span class=\"k\">,</span> <span class=\"s\">'selected'</span><span class=\"k\">);</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>__elem_to_unselect <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","      <span class=\"k\">}</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>__list_time_out <span class=\"k\">=</span> setTimeout <span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span>","      <span class=\"k\">{</span>","        util<span class=\"k\">.</span>addClassName <span class=\"k\">(</span>self<span class=\"k\">.</span>__elem<span class=\"k\">,</span> <span class=\"s\">'selected'</span><span class=\"k\">);</span>","        self<span class=\"k\">.</span>__list_time_out <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","      <span class=\"k\">}</span><span class=\"k\">,</span> ui<span class=\"k\">.</span>View<span class=\"k\">.</span>SELECT_DELAY<span class=\"k\">);</span>","    <span class=\"k\">}</span>","    <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>e<span class=\"k\">.</span>type <span class=\"k\">===</span> core<span class=\"k\">.</span>POINTER_MOVE<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      e<span class=\"k\">.</span>stopPropagation <span class=\"k\">();</span>","      e<span class=\"k\">.</span>preventDefault<span class=\"k\">();</span>","","      pageX <span class=\"k\">=</span> EVENT_SUPPORT_TOUCH <span class=\"k\">?</span> e<span class=\"k\">.</span>touches<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>pageX <span class=\"k\">:</span> e<span class=\"k\">.</span>pageX<span class=\"k\">;</span>","      pageY <span class=\"k\">=</span> EVENT_SUPPORT_TOUCH <span class=\"k\">?</span> e<span class=\"k\">.</span>touches<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>pageY <span class=\"k\">:</span> e<span class=\"k\">.</span>pageY<span class=\"k\">;</span>","      delta <span class=\"k\">=</span> ","        Math<span class=\"k\">.</span>abs <span class=\"k\">(</span>pageY <span class=\"k\">-</span> <span class=\"k\">this</span><span class=\"k\">.</span>__touch_start_y<span class=\"k\">)</span> <span class=\"k\">+</span> ","        Math<span class=\"k\">.</span>abs <span class=\"k\">(</span>pageX <span class=\"k\">-</span> <span class=\"k\">this</span><span class=\"k\">.</span>__touch_start_x<span class=\"k\">);</span>  ","                ","      <span class=\"c\">// this is a move, not a selection =&gt; deactivate the selected element</span>","      <span class=\"c\">// if needs</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__elem <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>delta <span class=\"k\">&gt;</span> ui<span class=\"k\">.</span>View<span class=\"k\">.</span>MOVE_THRESHOLD <span class=\"k\">*</span> <span class=\"s\">2</span><span class=\"k\">))</span>","      <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__list_time_out<span class=\"k\">)</span>","        <span class=\"k\">{</span>","          clearTimeout <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__list_time_out<span class=\"k\">);</span>","          <span class=\"k\">this</span><span class=\"k\">.</span>__list_time_out <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","        <span class=\"k\">else</span>","        <span class=\"k\">{</span>","          util<span class=\"k\">.</span>removeClassName <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__elem<span class=\"k\">,</span> <span class=\"s\">'selected'</span><span class=\"k\">);</span>","        <span class=\"k\">}</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>__elem <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","      <span class=\"k\">}</span>            ","    <span class=\"k\">}</span>","    <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>e<span class=\"k\">.</span>type <span class=\"k\">===</span> core<span class=\"k\">.</span>POINTER_END<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      e<span class=\"k\">.</span>stopPropagation <span class=\"k\">();</span>","      e<span class=\"k\">.</span>preventDefault<span class=\"k\">();</span>","","      <span class=\"c\">// Stop tracking when the last finger is removed from this element</span>","      document<span class=\"k\">.</span>removeEventListener <span class=\"k\">(</span>core<span class=\"k\">.</span>POINTER_MOVE<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","      document<span class=\"k\">.</span>removeEventListener <span class=\"k\">(</span>core<span class=\"k\">.</span>POINTER_END<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","                  ","      <span class=\"c\">// a item is selected. propagate the change</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__elem<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__list_time_out<span class=\"k\">)</span>","        <span class=\"k\">{</span>","          clearTimeout <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__list_time_out<span class=\"k\">);</span>","","          util<span class=\"k\">.</span>addClassName <span class=\"k\">(</span>self<span class=\"k\">.</span>__elem<span class=\"k\">,</span> <span class=\"s\">'selected'</span><span class=\"k\">);</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">this</span><span class=\"k\">.</span>__elem_to_unselect <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>__elem<span class=\"k\">;</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>__list_time_out <span class=\"k\">=</span> setTimeout <span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span>","        <span class=\"k\">{</span>","          util<span class=\"k\">.</span>removeClassName <span class=\"k\">(</span>self<span class=\"k\">.</span>__elem_to_unselect<span class=\"k\">,</span> <span class=\"s\">'selected'</span><span class=\"k\">);</span>","          self<span class=\"k\">.</span>__elem_to_unselect <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","          self<span class=\"k\">.</span>__list_time_out <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span> ui<span class=\"k\">.</span>View<span class=\"k\">.</span>UNSELECT_DELAY<span class=\"k\">);</span>","        ","        <span class=\"k\">if</span> <span class=\"k\">(</span>util<span class=\"k\">.</span>isNumber <span class=\"k\">(</span>elem<span class=\"k\">.</span>__index<span class=\"k\">))</span>","        <span class=\"k\">{</span>","          <span class=\"k\">this</span><span class=\"k\">.</span>expandPanel <span class=\"k\">(</span>elem<span class=\"k\">.</span>__index<span class=\"k\">);</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span>","","      <span class=\"k\">this</span><span class=\"k\">.</span>__elem <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","          ","    <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   */</span>","  notify <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>event<span class=\"k\">)</span>","  <span class=\"k\">{</span>","  <span class=\"k\">}</span>","<span class=\"k\">}</span>","util<span class=\"k\">.</span>extendClass <span class=\"k\">(</span>Accordion<span class=\"k\">,</span> vs<span class=\"k\">.</span>ui<span class=\"k\">.</span>View<span class=\"k\">);</span>","","util<span class=\"k\">.</span>defineClassProperty <span class=\"k\">(</span>Accordion<span class=\"k\">,</span> <span class=\"s\">'stretch'</span><span class=\"k\">,</span>","<span class=\"k\">{</span>","  <span class=\"c\">/**</span>","<span class=\"c\">   * Configure widgets to fit the view or to keep its original size.</span>","<span class=\"c\">   * &lt;p&gt;The property can take four values : </span>","<span class=\"c\">   * &lt;ul&gt;</span>","<span class=\"c\">   *   &lt;li/&gt;vs.ext.ui.Accordion.STRETCH_NONE;</span>","<span class=\"c\">   *   &lt;li/&gt;vs.ext.ui.Accordion.STRETCH_FILL;</span>","<span class=\"c\">   * &lt;/ul&gt;</span>","<span class=\"c\">   * @name vs.ext.ui.Accordion#stretch </span>","<span class=\"c\">   * @type {number}</span>","<span class=\"c\">   */</span>","  set <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>v<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>util<span class=\"k\">.</span>isNumber <span class=\"k\">(</span>v<span class=\"k\">))</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>v <span class=\"k\">!==</span> Accordion<span class=\"k\">.</span>STRETCH_FILL <span class=\"k\">&amp;&amp;</span>","        v <span class=\"k\">!==</span> Accordion<span class=\"k\">.</span>STRETCH_NONE<span class=\"k\">)</span>","    <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    ","    <span class=\"k\">this</span><span class=\"k\">.</span>_stretch <span class=\"k\">=</span> v<span class=\"k\">;</span>","    ","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_stretch <span class=\"k\">===</span> Accordion<span class=\"k\">.</span>STRETCH_FILL<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      util<span class=\"k\">.</span>addClassName <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>view<span class=\"k\">,</span> <span class=\"s\">'fill'</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","    <span class=\"k\">else</span>","    <span class=\"k\">{</span>","      util<span class=\"k\">.</span>removeClassName <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>view<span class=\"k\">,</span> <span class=\"s\">'fill'</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>_updateSizePanel <span class=\"k\">();</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","  <span class=\"c\">/*****************************************************************</span>","<span class=\"c\">   *</span>","<span class=\"c\">   ****************************************************************/</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * Get the image stretch mode (vs.ext.ui.Accordion.STRETCH_FILL or </span>","<span class=\"c\">   * vs.ext.ui.Accordion.STRETCH_NONE)</span>","<span class=\"c\">   * @return {number}</span>","<span class=\"c\">   */</span>","  get <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_stretch<span class=\"k\">;</span>","  <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">);</span>","","<span class=\"c\">/********************************************************************</span>","<span class=\"c\">                      Export</span>","<span class=\"c\">*********************************************************************/</span>","<span class=\"c\">/** @private */</span>","ext_ui<span class=\"k\">.</span>Accordion <span class=\"k\">=</span> Accordion<span class=\"k\">;</span>","","","GMap<span class=\"k\">.</span>prototype<span class=\"k\">.</span>html_template <span class=\"k\">=</span> <span class=\"s\">\"</span><span class=\"t\">\\</span>","<span class=\"s\">&lt;div class='vs_ext_ui_gmap'&gt;&lt;/div&gt;</span><span class=\"t\">\\</span>","<span class=\"s\">\"</span><span class=\"k\">;</span>","","Carousel<span class=\"k\">.</span>prototype<span class=\"k\">.</span>html_template <span class=\"k\">=</span> <span class=\"s\">\"</span><span class=\"t\">\\</span>","<span class=\"s\">&lt;div class='vs_ext_ui_carousel' x-hag-hole='children'&gt;&lt;div class='indicators'&gt;&lt;/div&gt;&lt;/div&gt;</span><span class=\"t\">\\</span>","<span class=\"s\">\"</span><span class=\"k\">;</span>","","Accordion<span class=\"k\">.</span>prototype<span class=\"k\">.</span>html_template <span class=\"k\">=</span> <span class=\"s\">\"</span><span class=\"t\">\\</span>","<span class=\"s\">&lt;dl class='vs_ext_ui_accordion' x-hag-hole='children'&gt;&lt;/dl&gt;</span><span class=\"t\">\\</span>","<span class=\"s\">\"</span><span class=\"k\">;</span>","","<span class=\"k\">}</span><span class=\"k\">)(</span>window<span class=\"k\">);</span>"];
_$jscoverage['js/vs_ext.js'][19]++;
(function (window, undefined) {
  _$jscoverage['js/vs_ext.js'][21]++;
  var document = window.document;
  _$jscoverage['js/vs_ext.js'][45]++;
  var vs = window.vs, util = vs.util, core = vs.core, ui = vs.ui, fx = vs.fx, ext = vs.ext, ext_ui = ext.ui, ext_fx = ext.fx;
  _$jscoverage['js/vs_ext.js'][98]++;
  var GMap = (function (config) {
  _$jscoverage['js/vs_ext.js'][100]++;
  this.parent = vs.ui.View;
  _$jscoverage['js/vs_ext.js'][101]++;
  this.parent(config);
  _$jscoverage['js/vs_ext.js'][102]++;
  this.constructor = GMap;
  _$jscoverage['js/vs_ext.js'][104]++;
  this._center = new Array();
  _$jscoverage['js/vs_ext.js'][105]++;
  this._center[0] = 48.837633396607629;
  _$jscoverage['js/vs_ext.js'][106]++;
  this._center[1] = 2.3397827148437544;
  _$jscoverage['js/vs_ext.js'][108]++;
  if ((! GMap.__google_loaded__)) {
    _$jscoverage['js/vs_ext.js'][110]++;
    if ((! GMap.__google_wait_loaded__)) {
      _$jscoverage['js/vs_ext.js'][112]++;
      GMap.__google_wait_loaded__ = true;
      _$jscoverage['js/vs_ext.js'][113]++;
      vs.util.importFile("http://maps.google.com/maps/api/js?sensor=true&callback=vs.ext.ui.GMap.__on_laoded", null, null, "js");
    }
    _$jscoverage['js/vs_ext.js'][117]++;
    GMap._to_finish_init.push(this);
  }
  _$jscoverage['js/vs_ext.js'][120]++;
  this.__annotations = {};
});
  _$jscoverage['js/vs_ext.js'][126]++;
  GMap.NO_MARKER = 0;
  _$jscoverage['js/vs_ext.js'][127]++;
  GMap.DEVICE_IMAGE_MARKER = 1;
  _$jscoverage['js/vs_ext.js'][128]++;
  GMap.IMAGE_MARKER = 2;
  _$jscoverage['js/vs_ext.js'][133]++;
  GMap._anotation_templates_ = {};
  _$jscoverage['js/vs_ext.js'][134]++;
  GMap._anotation_templates_["default"] = {marker: {type: GMap.DEVICE_IMAGE_MARKER}, infoWindow: "<div class=\"vs_ext_ui_gmap_info\">    <div>{title}</div>    <div>{subtitle}</div>  </div>"};
  _$jscoverage['js/vs_ext.js'][148]++;
  GMap.__google_wait_loaded__ = false;
  _$jscoverage['js/vs_ext.js'][153]++;
  GMap.__google_loaded__ = false;
  _$jscoverage['js/vs_ext.js'][158]++;
  GMap._to_finish_init = new Array();
  _$jscoverage['js/vs_ext.js'][164]++;
  GMap.__on_laoded = (function () {
  _$jscoverage['js/vs_ext.js'][166]++;
  var i, l;
  _$jscoverage['js/vs_ext.js'][168]++;
  GMap.__google_loaded__ = true;
  _$jscoverage['js/vs_ext.js'][169]++;
  GMap.__google_wait_loaded__ = false;
  _$jscoverage['js/vs_ext.js'][171]++;
  createInfoWindowClass();
  _$jscoverage['js/vs_ext.js'][173]++;
  for (((i = 0), (l = GMap._to_finish_init.length)); (i < l); (i++)) {
    _$jscoverage['js/vs_ext.js'][175]++;
    GMap._to_finish_init[i].finishInit();
}
  _$jscoverage['js/vs_ext.js'][178]++;
  GMap._to_finish_init = null;
});
  _$jscoverage['js/vs_ext.js'][181]++;
  GMap.prototype = {_zoom: 10, _tilt: -1, _scroll: true, _tap_to_zoom: true, _max_zoom: 20, _min_zoom: 1, _zoom_control: false, _street_view_control: false, _center: null, _gmap: null, __init_finished: false, __annotations: null, destructor: (function () {
  _$jscoverage['js/vs_ext.js'][261]++;
  (delete this._gmap);
  _$jscoverage['js/vs_ext.js'][263]++;
  vs.ui.View.prototype.destructor.call(this);
}), initComponent: (function () {
  _$jscoverage['js/vs_ext.js'][271]++;
  vs.ui.View.prototype.initComponent.call(this);
  _$jscoverage['js/vs_ext.js'][272]++;
  if (GMap.__google_loaded__) {
    _$jscoverage['js/vs_ext.js'][274]++;
    this.finishInit();
  }
}), finishInit: (function () {
  _$jscoverage['js/vs_ext.js'][283]++;
  var latLng = new (google.maps.LatLng)(this._center[0], this._center[1]);
  _$jscoverage['js/vs_ext.js'][285]++;
  var myOptions = {zoom: this._zoom, center: latLng, disableDefaultUI: true, draggable: this._scroll, maxZoom: this._max_zoom, minZoom: this._min_zoom, disableDoubleClickZoom: (! this._tap_to_zoom), streetViewControl: this._street_view_control, streetViewControlOptions: {position: google.maps.ControlPosition.LEFT_TOP}, zoomControl: this._zoom_control, zoomControlOptions: {position: google.maps.ControlPosition.LEFT_BOTTOM, style: google.maps.ZoomControlStyle.SMALL}, mapTypeControlOptions: {style: google.maps.ControlPosition.HORIZONTAL_BAR}, mapTypeId: google.maps.MapTypeId.ROADMAP, mapTypeControlOptions: {style: google.maps.MapTypeControlStyle.DROPDOWN_MENU}};
  _$jscoverage['js/vs_ext.js'][311]++;
  this._gmap = new (google.maps.Map)(this.view, myOptions);
  _$jscoverage['js/vs_ext.js'][313]++;
  var self = this;
  _$jscoverage['js/vs_ext.js'][314]++;
  setTimeout((function () {
  _$jscoverage['js/vs_ext.js'][314]++;
  clear_view_style(self);
}), 0);
}), __init_did_finish: (function () {
  _$jscoverage['js/vs_ext.js'][322]++;
  this.__init_finished = true;
  _$jscoverage['js/vs_ext.js'][329]++;
  this.streetViewControl = this._street_view_control;
  _$jscoverage['js/vs_ext.js'][330]++;
  this.zoomControl = this._zoom_control;
  _$jscoverage['js/vs_ext.js'][332]++;
  this.propagate("mapload");
}), isReady: (function () {
  _$jscoverage['js/vs_ext.js'][344]++;
  return this.__init_finished;
}), getGoogleMapObject: (function () {
  _$jscoverage['js/vs_ext.js'][358]++;
  return this._gmap;
}), showCenterMark: (function () {
  _$jscoverage['js/vs_ext.js'][369]++;
  if ((! this._center_mark)) {
    _$jscoverage['js/vs_ext.js'][371]++;
    this._center_mark = new (google.maps.Marker)({position: new (google.maps.LatLng)(this._center[0], this._center[1]), icon: "mapCenter.png"});
  }
  _$jscoverage['js/vs_ext.js'][377]++;
  this._center_mark.setGMap(this._gmap);
}), hideCenterMark: (function () {
  _$jscoverage['js/vs_ext.js'][388]++;
  if ((! this._center_mark)) {
    _$jscoverage['js/vs_ext.js'][389]++;
    return;
  }
  _$jscoverage['js/vs_ext.js'][391]++;
  this._center_mark.setGMap(null);
}), addAnnotation: (function (id, lat, lon, info, type) {
  _$jscoverage['js/vs_ext.js'][414]++;
  if ((! this.__init_finished)) {
    _$jscoverage['js/vs_ext.js'][414]++;
    return;
  }
  _$jscoverage['js/vs_ext.js'][416]++;
  if (((! util.isString(id)) || (! id))) {
    _$jscoverage['js/vs_ext.js'][416]++;
    id = core.createId();
  }
  _$jscoverage['js/vs_ext.js'][418]++;
  var annotation = new (GMap.Annotation)(this, id, lat, lon, info, type);
  _$jscoverage['js/vs_ext.js'][419]++;
  this.__annotations[id] = annotation;
  _$jscoverage['js/vs_ext.js'][420]++;
  return annotation;
}), setAnnotationTemplate: (function (name, marker, infoWindow) {
  _$jscoverage['js/vs_ext.js'][435]++;
  if (((! util.isString(name)) && (! name))) {
    _$jscoverage['js/vs_ext.js'][435]++;
    return;
  }
  _$jscoverage['js/vs_ext.js'][437]++;
  var default_tmp = GMap._anotation_templates_["default"];
  _$jscoverage['js/vs_ext.js'][439]++;
  GMap._anotation_templates_[name] = {marker: util.clone((marker? marker: default_tmp.marker)), infoWindow: util.clone((infoWindow? infoWindow: default_tmp.infoWindow))};
}), removeAnnotation: (function (id) {
  _$jscoverage['js/vs_ext.js'][454]++;
  if (((! util.isString(id)) && id.id)) {
    _$jscoverage['js/vs_ext.js'][454]++;
    id = id.id;
  }
  _$jscoverage['js/vs_ext.js'][455]++;
  var annotation = this.__annotations[id];
  _$jscoverage['js/vs_ext.js'][456]++;
  if ((! annotation)) {
    _$jscoverage['js/vs_ext.js'][456]++;
    return;
  }
  _$jscoverage['js/vs_ext.js'][458]++;
  util.free(annotation);
  _$jscoverage['js/vs_ext.js'][459]++;
  (delete this.__annotations[id]);
}), removeAnnotations: (function () {
  _$jscoverage['js/vs_ext.js'][470]++;
  for (var id in this.__annotations) {
    _$jscoverage['js/vs_ext.js'][472]++;
    this.removeAnnotation(id);
}
}), annotationSelect: (function (id) {
  _$jscoverage['js/vs_ext.js'][487]++;
  this.propagate("annotationselect", id);
})};
  _$jscoverage['js/vs_ext.js'][490]++;
  util.extendClass(GMap, vs.ui.View);
  _$jscoverage['js/vs_ext.js'][496]++;
  util.defineClassProperties(GMap, {"scroll": {set: (function (v) {
  _$jscoverage['js/vs_ext.js'][507]++;
  if (v) {
    _$jscoverage['js/vs_ext.js'][508]++;
    this._scroll = true;
  }
  else {
    _$jscoverage['js/vs_ext.js'][510]++;
    this._scroll = false;
  }
  _$jscoverage['js/vs_ext.js'][512]++;
  if ((! this.__init_finished)) {
    _$jscoverage['js/vs_ext.js'][512]++;
    return;
  }
  _$jscoverage['js/vs_ext.js'][514]++;
  this._gmap.setOptions({draggable: this._scroll});
}), get: (function () {
  _$jscoverage['js/vs_ext.js'][523]++;
  return this._scroll;
})}, "tapToZoom": {set: (function (v) {
  _$jscoverage['js/vs_ext.js'][535]++;
  if (v) {
    _$jscoverage['js/vs_ext.js'][536]++;
    this._tap_to_zoom = true;
  }
  else {
    _$jscoverage['js/vs_ext.js'][538]++;
    this._tap_to_zoom = false;
  }
  _$jscoverage['js/vs_ext.js'][540]++;
  if ((! this.__init_finished)) {
    _$jscoverage['js/vs_ext.js'][540]++;
    return;
  }
  _$jscoverage['js/vs_ext.js'][542]++;
  this._gmap.setOptions({disableDoubleClickZoom: (! this._tap_to_zoom)});
}), get: (function () {
  _$jscoverage['js/vs_ext.js'][551]++;
  return this._tap_to_zoom;
})}, "maxZoom": {set: (function (v) {
  _$jscoverage['js/vs_ext.js'][563]++;
  if ((! vs.util.isNumber(v))) {
    _$jscoverage['js/vs_ext.js'][563]++;
    return;
  }
  _$jscoverage['js/vs_ext.js'][565]++;
  this._max_zoom = v;
  _$jscoverage['js/vs_ext.js'][567]++;
  if ((! this.__init_finished)) {
    _$jscoverage['js/vs_ext.js'][567]++;
    return;
  }
  _$jscoverage['js/vs_ext.js'][569]++;
  this._gmap.setOptions({maxZoom: this._max_zoom});
}), get: (function () {
  _$jscoverage['js/vs_ext.js'][578]++;
  return this._max_zoom;
})}, "minZoom": {set: (function (v) {
  _$jscoverage['js/vs_ext.js'][590]++;
  if ((! vs.util.isNumber(v))) {
    _$jscoverage['js/vs_ext.js'][590]++;
    return;
  }
  _$jscoverage['js/vs_ext.js'][592]++;
  this._min_zoom = v;
  _$jscoverage['js/vs_ext.js'][594]++;
  if ((! this.__init_finished)) {
    _$jscoverage['js/vs_ext.js'][594]++;
    return;
  }
  _$jscoverage['js/vs_ext.js'][596]++;
  this._gmap.setOptions({maxZoom: this._min_zoom});
}), get: (function () {
  _$jscoverage['js/vs_ext.js'][605]++;
  return this._min_zoom;
})}, "zoomControl": {set: (function (v) {
  _$jscoverage['js/vs_ext.js'][617]++;
  if (v) {
    _$jscoverage['js/vs_ext.js'][618]++;
    this._zoom_control = true;
  }
  else {
    _$jscoverage['js/vs_ext.js'][620]++;
    this._zoom_control = false;
  }
  _$jscoverage['js/vs_ext.js'][622]++;
  if ((! this.__init_finished)) {
    _$jscoverage['js/vs_ext.js'][622]++;
    return;
  }
  _$jscoverage['js/vs_ext.js'][624]++;
  this._gmap.setOptions({zoomControl: this._zoom_control});
}), get: (function () {
  _$jscoverage['js/vs_ext.js'][633]++;
  return this._zoom_control;
})}, "zoom": {set: (function (v) {
  _$jscoverage['js/vs_ext.js'][645]++;
  if ((! vs.util.isNumber(v))) {
    _$jscoverage['js/vs_ext.js'][645]++;
    return;
  }
  _$jscoverage['js/vs_ext.js'][647]++;
  if ((! this.__init_finished)) {
    _$jscoverage['js/vs_ext.js'][647]++;
    return;
  }
  _$jscoverage['js/vs_ext.js'][649]++;
  v = Math.floor(v);
  _$jscoverage['js/vs_ext.js'][650]++;
  if ((v === this._zoom)) {
    _$jscoverage['js/vs_ext.js'][650]++;
    return;
  }
  _$jscoverage['js/vs_ext.js'][652]++;
  this._zoom = v;
  _$jscoverage['js/vs_ext.js'][654]++;
  this._gmap.setZoom(this._zoom);
}), get: (function () {
  _$jscoverage['js/vs_ext.js'][663]++;
  if ((! this._gmap)) {
    _$jscoverage['js/vs_ext.js'][663]++;
    return -1;
  }
  _$jscoverage['js/vs_ext.js'][665]++;
  this._zoom = this._gmap.getZoom();
  _$jscoverage['js/vs_ext.js'][666]++;
  return this._zoom;
})}, "tilt": {set: (function (v) {
  _$jscoverage['js/vs_ext.js'][678]++;
  if ((! vs.util.isNumber(v))) {
    _$jscoverage['js/vs_ext.js'][678]++;
    return;
  }
  _$jscoverage['js/vs_ext.js'][680]++;
  if ((! this.__init_finished)) {
    _$jscoverage['js/vs_ext.js'][680]++;
    return;
  }
  _$jscoverage['js/vs_ext.js'][682]++;
  this._tilt = v;
  _$jscoverage['js/vs_ext.js'][684]++;
  this._gmap.setTilt(v);
}), get: (function () {
  _$jscoverage['js/vs_ext.js'][693]++;
  if ((! this._gmap)) {
    _$jscoverage['js/vs_ext.js'][693]++;
    return -1;
  }
  _$jscoverage['js/vs_ext.js'][695]++;
  this._tilt = this._gmap.getTilt();
  _$jscoverage['js/vs_ext.js'][696]++;
  return this._tilt;
})}, "streetViewControl": {set: (function (v) {
  _$jscoverage['js/vs_ext.js'][708]++;
  if (v) {
    _$jscoverage['js/vs_ext.js'][709]++;
    this._street_view_control = true;
  }
  else {
    _$jscoverage['js/vs_ext.js'][711]++;
    this._street_view_control = false;
  }
  _$jscoverage['js/vs_ext.js'][713]++;
  if ((! this.__init_finished)) {
    _$jscoverage['js/vs_ext.js'][713]++;
    return;
  }
  _$jscoverage['js/vs_ext.js'][715]++;
  this._gmap.setOptions({streetViewControl: this._street_view_control});
}), get: (function () {
  _$jscoverage['js/vs_ext.js'][724]++;
  return this._street_view_control;
})}, "center": {set: (function (v) {
  _$jscoverage['js/vs_ext.js'][737]++;
  if ((! this.__init_finished)) {
    _$jscoverage['js/vs_ext.js'][737]++;
    return;
  }
  _$jscoverage['js/vs_ext.js'][738]++;
  if ((! v)) {
    _$jscoverage['js/vs_ext.js'][738]++;
    return;
  }
  _$jscoverage['js/vs_ext.js'][739]++;
  if (((! vs.util.isArray(v)) || (v.length !== 2))) {
    _$jscoverage['js/vs_ext.js'][739]++;
    return;
  }
  _$jscoverage['js/vs_ext.js'][740]++;
  if (((! vs.util.isNumber(v[0])) || (! vs.util.isNumber(v[1])))) {
    _$jscoverage['js/vs_ext.js'][740]++;
    return;
  }
  _$jscoverage['js/vs_ext.js'][742]++;
  this._center[0] = v[0];
  _$jscoverage['js/vs_ext.js'][743]++;
  this._center[1] = v[1];
  _$jscoverage['js/vs_ext.js'][745]++;
  var latLng = new (google.maps.LatLng)(v[0], v[1]);
  _$jscoverage['js/vs_ext.js'][746]++;
  this._gmap.setCenter(latLng);
  _$jscoverage['js/vs_ext.js'][748]++;
  if (this._center_mark) {
    _$jscoverage['js/vs_ext.js'][750]++;
    this._center_mark.setPosition(latLng);
  }
}), get: (function () {
  _$jscoverage['js/vs_ext.js'][760]++;
  if ((! this._gmap)) {
    _$jscoverage['js/vs_ext.js'][760]++;
    return [0, 0];
  }
  _$jscoverage['js/vs_ext.js'][762]++;
  var pos = this._gmap.getCenter();
  _$jscoverage['js/vs_ext.js'][764]++;
  this._center[0] = pos.lat();
  _$jscoverage['js/vs_ext.js'][765]++;
  this._center[1] = pos.lng();
  _$jscoverage['js/vs_ext.js'][767]++;
  return this._center.slice();
})}});
  _$jscoverage['js/vs_ext.js'][775]++;
  var clear_view_style_nb_cur = 0;
  _$jscoverage['js/vs_ext.js'][781]++;
  var clear_view_style = (function (map) {
  _$jscoverage['js/vs_ext.js'][783]++;
  map.__init_did_finish();
});
  _$jscoverage['js/vs_ext.js'][813]++;
  GMap.Annotation = (function (map, id, lat, lon, info, type) {
  _$jscoverage['js/vs_ext.js'][815]++;
  this.map = map;
  _$jscoverage['js/vs_ext.js'][816]++;
  this.id = id;
  _$jscoverage['js/vs_ext.js'][817]++;
  this.info = info;
  _$jscoverage['js/vs_ext.js'][818]++;
  this.type = (type? type: "default");
  _$jscoverage['js/vs_ext.js'][820]++;
  this._coordinate = new (google.maps.LatLng)(lat, lon);
  _$jscoverage['js/vs_ext.js'][822]++;
  var template = GMap._anotation_templates_[this.type];
  _$jscoverage['js/vs_ext.js'][823]++;
  if ((! template)) {
    _$jscoverage['js/vs_ext.js'][823]++;
    template = GMap._anotation_templates_["default"];
  }
  _$jscoverage['js/vs_ext.js'][825]++;
  this.image = null;
  _$jscoverage['js/vs_ext.js'][827]++;
  if ((template.marker.type == GMap.DEVICE_IMAGE_MARKER)) {
    _$jscoverage['js/vs_ext.js'][829]++;
    var os_device = window.deviceConfiguration.os;
    _$jscoverage['js/vs_ext.js'][830]++;
    if ((os_device == vs.core.DeviceConfiguration.OS_SYMBIAN)) {
      _$jscoverage['js/vs_ext.js'][832]++;
      this.image = new (google.maps.MarkerImage)("css/kit/symbian_marker.png", new (google.maps.Size)(48, 51), new (google.maps.Point)(0, 0), new (google.maps.Point)(24, 48));
    }
    else {
      _$jscoverage['js/vs_ext.js'][837]++;
      if ((os_device == vs.core.DeviceConfiguration.OS_WP7)) {
        _$jscoverage['js/vs_ext.js'][839]++;
        this.image = new (google.maps.MarkerImage)("css/kit/wp7_marker.png", new (google.maps.Size)(15, 31), new (google.maps.Point)(0, 0), new (google.maps.Point)(0, 31));
      }
      else {
        _$jscoverage['js/vs_ext.js'][846]++;
        this.image = new (google.maps.MarkerImage)("css/kit/ios_marker.png", new (google.maps.Size)(32, 41), new (google.maps.Point)(0, 0), new (google.maps.Point)(8, 36));
      }
    }
  }
  else {
    _$jscoverage['js/vs_ext.js'][852]++;
    if ((template.marker.type == GMap.IMAGE_MARKER)) {
      _$jscoverage['js/vs_ext.js'][854]++;
      this.image = new (google.maps.MarkerImage)(template.marker.url);
    }
  }
  _$jscoverage['js/vs_ext.js'][857]++;
  if (this.image) {
    _$jscoverage['js/vs_ext.js'][859]++;
    this._gmarker = new (google.maps.Marker)({position: this._coordinate, icon: this.image, map: map._gmap, animation: google.maps.Animation.DROP});
    _$jscoverage['js/vs_ext.js'][866]++;
    var self = this;
    _$jscoverage['js/vs_ext.js'][867]++;
    google.maps.event.addListener(this._gmarker, "click", (function () {
  _$jscoverage['js/vs_ext.js'][868]++;
  self.onselect();
}));
  }
  else {
    _$jscoverage['js/vs_ext.js'][873]++;
    this._infoWindow = new (GMap.InfoWindow)(this.map, id, lat, lon, type);
    _$jscoverage['js/vs_ext.js'][874]++;
    this._infoWindow.setCoordinate(lat, lon);
    _$jscoverage['js/vs_ext.js'][875]++;
    this._infoWindow.setInfo(info);
  }
});
  _$jscoverage['js/vs_ext.js'][879]++;
  GMap.Annotation.prototype = {destructor: (function () {
  _$jscoverage['js/vs_ext.js'][886]++;
  if (this._gmarker) {
    _$jscoverage['js/vs_ext.js'][888]++;
    this._gmarker.setMap(null);
    _$jscoverage['js/vs_ext.js'][889]++;
    (delete this._gmarker);
  }
  _$jscoverage['js/vs_ext.js'][891]++;
  if (this._infoWindow) {
    _$jscoverage['js/vs_ext.js'][891]++;
    free(this._infoWindow);
  }
  _$jscoverage['js/vs_ext.js'][892]++;
  if (this.image) {
    _$jscoverage['js/vs_ext.js'][892]++;
    (delete this.image);
  }
  _$jscoverage['js/vs_ext.js'][893]++;
  (delete this._coordinate);
  _$jscoverage['js/vs_ext.js'][895]++;
  this.map = undefined;
}), onselect: (function () {
  _$jscoverage['js/vs_ext.js'][904]++;
  this.showInfoWindow();
}), showInfoWindow: (function () {
  _$jscoverage['js/vs_ext.js'][913]++;
  if ((! this.map._infoWindow)) {
    _$jscoverage['js/vs_ext.js'][915]++;
    this.map._infoWindow = new (GMap.InfoWindowWithMarker)(this.map);
    _$jscoverage['js/vs_ext.js'][916]++;
    this.map._infoWindow.setMarker(this);
  }
  else {
    _$jscoverage['js/vs_ext.js'][920]++;
    this.map._infoWindow.setMarker(this);
  }
})};
  _$jscoverage['js/vs_ext.js'][929]++;
  util.defineClassProperties(GMap.Annotation, {"coordinate": {set: (function (pos) {
  _$jscoverage['js/vs_ext.js'][939]++;
  if (((! util.isArray(pos)) && (pos.length != 2))) {
    _$jscoverage['js/vs_ext.js'][939]++;
    return;
  }
  _$jscoverage['js/vs_ext.js'][941]++;
  (delete this._coordinate);
  _$jscoverage['js/vs_ext.js'][942]++;
  this._coordinate = new (google.maps.LatLng)(pos[0], pos[1]);
  _$jscoverage['js/vs_ext.js'][944]++;
  if (this._gmarker) {
    _$jscoverage['js/vs_ext.js'][946]++;
    this._gmarker.setPosition(this._coordinate);
  }
}), get: (function () {
  _$jscoverage['js/vs_ext.js'][956]++;
  return [this._coordinate.lat(), this._coordinate.lng()];
})}, "info": {set: (function (v) {
  _$jscoverage['js/vs_ext.js'][966]++;
  this._info = v;
  _$jscoverage['js/vs_ext.js'][967]++;
  if (this._infoWindow) {
    _$jscoverage['js/vs_ext.js'][967]++;
    this._infoWindow.setInfo(v);
  }
}), get: (function () {
  _$jscoverage['js/vs_ext.js'][976]++;
  return this._info;
})}});
  _$jscoverage['js/vs_ext.js'][985]++;
  function createInfoWindowClass() {
    _$jscoverage['js/vs_ext.js'][1008]++;
    GMap.InfoWindow = (function (map, id, type, lat, lon) {
  _$jscoverage['js/vs_ext.js'][1010]++;
  this.vs_map = map;
  _$jscoverage['js/vs_ext.js'][1011]++;
  this.id = id;
  _$jscoverage['js/vs_ext.js'][1012]++;
  this.type = type;
  _$jscoverage['js/vs_ext.js'][1013]++;
  this.setCoordinate(lat, lon);
  _$jscoverage['js/vs_ext.js'][1016]++;
  this.setValues({map: this.vs_map._gmap});
});
    _$jscoverage['js/vs_ext.js'][1018]++;
    GMap.InfoWindow.prototype = new (google.maps.OverlayView)();
    _$jscoverage['js/vs_ext.js'][1023]++;
    ((GMap.InfoWindow.prototype.destructor = (function () {
  _$jscoverage['js/vs_ext.js'][1025]++;
  this.setMap(null);
  _$jscoverage['js/vs_ext.js'][1027]++;
  this.marker = undefined;
  _$jscoverage['js/vs_ext.js'][1028]++;
  this.vs_map = undefined;
})), (GMap.InfoWindow.prototype.hide = (function () {
  _$jscoverage['js/vs_ext.js'][1036]++;
  if ((! this.view)) {
    _$jscoverage['js/vs_ext.js'][1036]++;
    return;
  }
  _$jscoverage['js/vs_ext.js'][1038]++;
  this.view.style.display = "none";
})));
    _$jscoverage['js/vs_ext.js'][1044]++;
    GMap.InfoWindow.prototype.show = (function () {
  _$jscoverage['js/vs_ext.js'][1046]++;
  if ((! this.view)) {
    _$jscoverage['js/vs_ext.js'][1046]++;
    return;
  }
  _$jscoverage['js/vs_ext.js'][1048]++;
  this.view.style.display = "block";
});
    _$jscoverage['js/vs_ext.js'][1054]++;
    GMap.InfoWindow.prototype.setMarker = (function (marker) {
  _$jscoverage['js/vs_ext.js'][1056]++;
  if (this.marker) {
    _$jscoverage['js/vs_ext.js'][1058]++;
    this.unbind("position");
  }
  _$jscoverage['js/vs_ext.js'][1060]++;
  this.marker = marker;
  _$jscoverage['js/vs_ext.js'][1061]++;
  this.id = this.marker.id;
  _$jscoverage['js/vs_ext.js'][1062]++;
  this.type = this.marker.type;
  _$jscoverage['js/vs_ext.js'][1063]++;
  this.info = this.marker.info;
  _$jscoverage['js/vs_ext.js'][1064]++;
  this.bindTo("position", this.marker._gmarker, "position");
  _$jscoverage['js/vs_ext.js'][1066]++;
  this.instanciateView(this.type, this.info);
});
    _$jscoverage['js/vs_ext.js'][1072]++;
    GMap.InfoWindow.prototype.setCoordinate = (function (lat, lon) {
  _$jscoverage['js/vs_ext.js'][1074]++;
  if (this.position) {
    _$jscoverage['js/vs_ext.js'][1074]++;
    (delete this.position);
  }
  _$jscoverage['js/vs_ext.js'][1075]++;
  this.position = new (google.maps.LatLng)(lat, lon);
});
    _$jscoverage['js/vs_ext.js'][1081]++;
    GMap.InfoWindow.prototype.setType = (function (type) {
  _$jscoverage['js/vs_ext.js'][1083]++;
  this.type = type;
  _$jscoverage['js/vs_ext.js'][1084]++;
  this.instanciateView(this.type, this.info);
});
    _$jscoverage['js/vs_ext.js'][1090]++;
    GMap.InfoWindow.prototype.setInfo = (function (data) {
  _$jscoverage['js/vs_ext.js'][1092]++;
  this.info = data;
  _$jscoverage['js/vs_ext.js'][1093]++;
  this.instanciateView(this.type, this.info);
});
    _$jscoverage['js/vs_ext.js'][1099]++;
    GMap.InfoWindow.prototype.instanciateView = (function (type, info) {
  _$jscoverage['js/vs_ext.js'][1101]++;
  var div = document.createElement("div");
  _$jscoverage['js/vs_ext.js'][1102]++;
  var template = GMap._anotation_templates_[type];
  _$jscoverage['js/vs_ext.js'][1103]++;
  if ((! template)) {
    _$jscoverage['js/vs_ext.js'][1103]++;
    template = GMap._anotation_templates_["default"];
  }
  _$jscoverage['js/vs_ext.js'][1104]++;
  var text = template.infoWindow;
  _$jscoverage['js/vs_ext.js'][1106]++;
  if (info) {
    _$jscoverage['js/vs_ext.js'][1106]++;
    for (key in info) {
      _$jscoverage['js/vs_ext.js'][1108]++;
      var value = info[key];
      _$jscoverage['js/vs_ext.js'][1108]++;
      value = (value? value: "");
      _$jscoverage['js/vs_ext.js'][1109]++;
      text = text.replace(("{" + key + "}"), value);
}
  }
  _$jscoverage['js/vs_ext.js'][1111]++;
  div.innerHTML = text;
  _$jscoverage['js/vs_ext.js'][1113]++;
  if ((! this.view)) {
    _$jscoverage['js/vs_ext.js'][1113]++;
    this.createView();
  }
  _$jscoverage['js/vs_ext.js'][1115]++;
  this.view.innerHTML = div.firstElementChild.innerHTML;
  _$jscoverage['js/vs_ext.js'][1116]++;
  this.view.className = div.firstElementChild.className;
});
    _$jscoverage['js/vs_ext.js'][1122]++;
    GMap.InfoWindow.prototype.createView = (function () {
  _$jscoverage['js/vs_ext.js'][1124]++;
  if (this.view) {
    _$jscoverage['js/vs_ext.js'][1124]++;
    return;
  }
  _$jscoverage['js/vs_ext.js'][1126]++;
  this.view = document.createElement("div");
  _$jscoverage['js/vs_ext.js'][1128]++;
  this.view.addEventListener(core.POINTER_START, this);
});
    _$jscoverage['js/vs_ext.js'][1134]++;
    GMap.InfoWindow.prototype.handleEvent = (function (e) {
  _$jscoverage['js/vs_ext.js'][1136]++;
  var self = this;
  _$jscoverage['js/vs_ext.js'][1138]++;
  switch (e.type) {
  case core.POINTER_START:
    _$jscoverage['js/vs_ext.js'][1142]++;
    if ((core.EVENT_SUPPORT_TOUCH && (e.touches.length > 1))) {
      _$jscoverage['js/vs_ext.js'][1142]++;
      return;
    }
    _$jscoverage['js/vs_ext.js'][1144]++;
    document.addEventListener(core.POINTER_END, this);
    _$jscoverage['js/vs_ext.js'][1145]++;
    document.addEventListener(core.POINTER_MOVE, this);
    _$jscoverage['js/vs_ext.js'][1146]++;
    this.__start_x = (core.EVENT_SUPPORT_TOUCH? e.touches[0].pageX: e.pageX);
    _$jscoverage['js/vs_ext.js'][1147]++;
    this.__start_y = (core.EVENT_SUPPORT_TOUCH? e.touches[0].pageY: e.pageY);
    _$jscoverage['js/vs_ext.js'][1149]++;
    if (this.marker) {
      _$jscoverage['js/vs_ext.js'][1149]++;
      this.removeMapEvent();
    }
    _$jscoverage['js/vs_ext.js'][1150]++;
    util.addClassName(this.view, "selected");
    _$jscoverage['js/vs_ext.js'][1151]++;
    return false;
    _$jscoverage['js/vs_ext.js'][1152]++;
    break;
  case core.POINTER_MOVE:
    _$jscoverage['js/vs_ext.js'][1156]++;
    var dx = ((core.EVENT_SUPPORT_TOUCH? e.touches[0].pageX: e.pageX) - this.__start_x);
    _$jscoverage['js/vs_ext.js'][1158]++;
    var dy = ((core.EVENT_SUPPORT_TOUCH? e.touches[0].pageY: e.pageY) - this.__start_y);
    _$jscoverage['js/vs_ext.js'][1161]++;
    if (((Math.abs(dx) + Math.abs(dy)) < 10)) {
      _$jscoverage['js/vs_ext.js'][1164]++;
      e.preventDefault();
      _$jscoverage['js/vs_ext.js'][1165]++;
      return false;
    }
    _$jscoverage['js/vs_ext.js'][1168]++;
    document.removeEventListener(core.POINTER_END, this);
    _$jscoverage['js/vs_ext.js'][1169]++;
    document.removeEventListener(core.POINTER_MOVE, this);
    _$jscoverage['js/vs_ext.js'][1170]++;
    if (this.marker) {
      _$jscoverage['js/vs_ext.js'][1170]++;
      setTimeout((function () {
  _$jscoverage['js/vs_ext.js'][1170]++;
  self.initMapEvent();
}), 0);
    }
    _$jscoverage['js/vs_ext.js'][1171]++;
    util.removeClassName(this.view, "selected");
    _$jscoverage['js/vs_ext.js'][1173]++;
    return false;
    _$jscoverage['js/vs_ext.js'][1174]++;
    break;
  case core.POINTER_END:
    _$jscoverage['js/vs_ext.js'][1179]++;
    e.stopPropagation();
    _$jscoverage['js/vs_ext.js'][1180]++;
    e.preventDefault();
    _$jscoverage['js/vs_ext.js'][1182]++;
    document.removeEventListener(core.POINTER_END, this);
    _$jscoverage['js/vs_ext.js'][1183]++;
    document.removeEventListener(core.POINTER_MOVE, this);
    _$jscoverage['js/vs_ext.js'][1184]++;
    if (this.marker) {
      _$jscoverage['js/vs_ext.js'][1184]++;
      setTimeout((function () {
  _$jscoverage['js/vs_ext.js'][1184]++;
  self.initMapEvent();
}), 0);
    }
    _$jscoverage['js/vs_ext.js'][1185]++;
    util.removeClassName(this.view, "selected");
    _$jscoverage['js/vs_ext.js'][1187]++;
    this.vs_map.annotationSelect(this.id);
    _$jscoverage['js/vs_ext.js'][1189]++;
    return false;
    _$jscoverage['js/vs_ext.js'][1190]++;
    break;
  }
});
    _$jscoverage['js/vs_ext.js'][1199]++;
    GMap.InfoWindow.prototype.onAdd = (function () {
  _$jscoverage['js/vs_ext.js'][1201]++;
  if ((! this.view)) {
    _$jscoverage['js/vs_ext.js'][1201]++;
    this.createView();
  }
  _$jscoverage['js/vs_ext.js'][1203]++;
  var pane = this.getPanes().floatPane;
  _$jscoverage['js/vs_ext.js'][1204]++;
  pane.appendChild(this.view);
  _$jscoverage['js/vs_ext.js'][1207]++;
  var self = this;
  _$jscoverage['js/vs_ext.js'][1208]++;
  this.listeners_ = [google.maps.event.addListener(this, "position_changed", (function () {
  _$jscoverage['js/vs_ext.js'][1210]++;
  self.draw();
})),];
});
    _$jscoverage['js/vs_ext.js'][1219]++;
    GMap.InfoWindow.prototype.onRemove = (function () {
  _$jscoverage['js/vs_ext.js'][1221]++;
  this.view.parentNode.removeChild(this.view);
  _$jscoverage['js/vs_ext.js'][1224]++;
  for (var i = 0, I = this.listeners_.length; (i < I); (++i)) {
    _$jscoverage['js/vs_ext.js'][1225]++;
    google.maps.event.removeListener(this.listeners_[i]);
}
});
    _$jscoverage['js/vs_ext.js'][1233]++;
    GMap.InfoWindow.prototype.draw = (function () {
  _$jscoverage['js/vs_ext.js'][1235]++;
  var projection = this.getProjection();
  _$jscoverage['js/vs_ext.js'][1236]++;
  var position = projection.fromLatLngToDivPixel(this.get("position"));
  _$jscoverage['js/vs_ext.js'][1238]++;
  var div = this.view;
  _$jscoverage['js/vs_ext.js'][1239]++;
  div.style.display = "block";
  _$jscoverage['js/vs_ext.js'][1240]++;
  div.style.visibility = "hidden";
  _$jscoverage['js/vs_ext.js'][1242]++;
  var icon_w = 0;
  _$jscoverage['js/vs_ext.js'][1243]++;
  if (this.marker) {
    _$jscoverage['js/vs_ext.js'][1245]++;
    icon_w = 10;
    _$jscoverage['js/vs_ext.js'][1246]++;
    var icon = this.marker._gmarker.getIcon();
    _$jscoverage['js/vs_ext.js'][1247]++;
    if (icon) {
      _$jscoverage['js/vs_ext.js'][1247]++;
      icon_w += icon.size.height;
    }
  }
  _$jscoverage['js/vs_ext.js'][1251]++;
  setTimeout((function () {
  _$jscoverage['js/vs_ext.js'][1253]++;
  var width = div.offsetWidth;
  _$jscoverage['js/vs_ext.js'][1254]++;
  var height = div.offsetHeight;
  _$jscoverage['js/vs_ext.js'][1256]++;
  div.style.left = ((position.x - Math.ceil((width / 2))) + "px");
  _$jscoverage['js/vs_ext.js'][1257]++;
  div.style.top = ((position.y - height - icon_w) + "px");
  _$jscoverage['js/vs_ext.js'][1258]++;
  div.style.visibility = "visible";
}), 0);
});
    _$jscoverage['js/vs_ext.js'][1265]++;
    GMap.InfoWindow.prototype.initMapEvent = (function () {
  _$jscoverage['js/vs_ext.js'][1267]++;
  if (this.map_listener) {
    _$jscoverage['js/vs_ext.js'][1267]++;
    return;
  }
  _$jscoverage['js/vs_ext.js'][1269]++;
  var self = this;
  _$jscoverage['js/vs_ext.js'][1270]++;
  this.map_listener = google.maps.event.addListener(this.vs_map._gmap, "click", (function () {
  _$jscoverage['js/vs_ext.js'][1272]++;
  self.hide();
}));
});
    _$jscoverage['js/vs_ext.js'][1279]++;
    GMap.InfoWindow.prototype.removeMapEvent = (function () {
  _$jscoverage['js/vs_ext.js'][1281]++;
  if ((! this.map_listener)) {
    _$jscoverage['js/vs_ext.js'][1281]++;
    return;
  }
  _$jscoverage['js/vs_ext.js'][1283]++;
  google.maps.event.removeListener(this.map_listener);
  _$jscoverage['js/vs_ext.js'][1284]++;
  this.map_listener = undefined;
});
    _$jscoverage['js/vs_ext.js'][1308]++;
    GMap.InfoWindowWithMarker = (function (map) {
  _$jscoverage['js/vs_ext.js'][1310]++;
  this.vs_map = map;
  _$jscoverage['js/vs_ext.js'][1313]++;
  this.setValues({map: this.vs_map._gmap});
  _$jscoverage['js/vs_ext.js'][1314]++;
  this.initMapEvent();
});
    _$jscoverage['js/vs_ext.js'][1316]++;
    util.extendClass(GMap.InfoWindowWithMarker, GMap.InfoWindow);
}
  _$jscoverage['js/vs_ext.js'][1322]++;
  ext_ui.GMap = GMap;
  _$jscoverage['js/vs_ext.js'][1387]++;
  function Carousel(config) {
    _$jscoverage['js/vs_ext.js'][1389]++;
    this.parent = vs.ui.View;
    _$jscoverage['js/vs_ext.js'][1390]++;
    this.parent(config);
    _$jscoverage['js/vs_ext.js'][1391]++;
    this.constructor = Carousel;
    _$jscoverage['js/vs_ext.js'][1393]++;
    this.__indicators_list = {};
}
  _$jscoverage['js/vs_ext.js'][1401]++;
  Carousel.HORIZONTAL = vs.fx.SlideController.HORIZONTAL;
  _$jscoverage['js/vs_ext.js'][1408]++;
  Carousel.VERTICAL = vs.fx.SlideController.VERTICAL;
  _$jscoverage['js/vs_ext.js'][1410]++;
  Carousel.prototype = {_indicators_visibility: true, _delegate: null, _orientation: Carousel.HORIZONTAL, _slideController: null, __indicators: null, __selected_indicator: null, __indicators_list: null, __indicators_timer: 0, destructor: (function () {
  _$jscoverage['js/vs_ext.js'][1484]++;
  util.free(this._slideController);
  _$jscoverage['js/vs_ext.js'][1486]++;
  vs.ui.View.prototype.destructor.call(this);
}), initComponent: (function () {
  _$jscoverage['js/vs_ext.js'][1495]++;
  vs.ui.View.prototype.initComponent.call(this);
  _$jscoverage['js/vs_ext.js'][1497]++;
  this.__indicators = this.view.querySelector(".vs_ext_ui_carousel >.indicators");
  _$jscoverage['js/vs_ext.js'][1499]++;
  vs.util.addClassName(this.__indicators, "horizontal");
  _$jscoverage['js/vs_ext.js'][1501]++;
  this._slideController = new (vs.fx.SlideController)(this);
  _$jscoverage['js/vs_ext.js'][1502]++;
  this._slideController.delegate = this;
  _$jscoverage['js/vs_ext.js'][1503]++;
  this._slideController.isTactile = true;
  _$jscoverage['js/vs_ext.js'][1504]++;
  this._slideController.init();
}), refresh: (function () {
  _$jscoverage['js/vs_ext.js'][1513]++;
  if ((this._slideController && this._slideController.refresh)) {
    _$jscoverage['js/vs_ext.js'][1514]++;
    this._slideController.refresh();
  }
  _$jscoverage['js/vs_ext.js'][1516]++;
  vs.ui.View.prototype.refresh.call(this);
}), controllerViewWillChange: (function (from_comp, to_comp, controller) {
  _$jscoverage['js/vs_ext.js'][1529]++;
  if (this.__indicators_timer) {
    _$jscoverage['js/vs_ext.js'][1531]++;
    clearTimeout(this.__indicators_timer);
    _$jscoverage['js/vs_ext.js'][1532]++;
    __indicators_timer = 0;
  }
  _$jscoverage['js/vs_ext.js'][1535]++;
  var i_id = to_comp.id, self = this;
  _$jscoverage['js/vs_ext.js'][1536]++;
  this.__indicators_timer = setTimeout((function () {
  _$jscoverage['js/vs_ext.js'][1538]++;
  if (self.__selected_indicator) {
    _$jscoverage['js/vs_ext.js'][1540]++;
    vs.util.removeClassName(self.__selected_indicator, "selected");
  }
  _$jscoverage['js/vs_ext.js'][1542]++;
  self.__selected_indicator = self.__indicators_list[i_id];
  _$jscoverage['js/vs_ext.js'][1543]++;
  vs.util.addClassName(self.__selected_indicator, "selected");
}), 500);
  _$jscoverage['js/vs_ext.js'][1546]++;
  if ((this._delegate && this._delegate.carouselViewWillChange)) {
    _$jscoverage['js/vs_ext.js'][1548]++;
    this._delegate.carouselViewWillChange(to_comp);
  }
}), add: (function (child) {
  _$jscoverage['js/vs_ext.js'][1572]++;
  vs.ui.View.prototype.add.call(this, child, "children");
  _$jscoverage['js/vs_ext.js'][1573]++;
  this.push(child);
}), push: (function (child, config) {
  _$jscoverage['js/vs_ext.js'][1599]++;
  if (this.isChild(child)) {
    _$jscoverage['js/vs_ext.js'][1601]++;
    if (this._slideController.isStateExit(child.id)) {
      _$jscoverage['js/vs_ext.js'][1602]++;
      return;
    }
  }
  _$jscoverage['js/vs_ext.js'][1605]++;
  var span, state_id = this._slideController.push(child, config);
  _$jscoverage['js/vs_ext.js'][1607]++;
  span = document.createElement("span");
  _$jscoverage['js/vs_ext.js'][1609]++;
  this.__indicators.appendChild(span);
  _$jscoverage['js/vs_ext.js'][1610]++;
  this.__indicators_list[state_id] = span;
}), remove: (function (child) {
  _$jscoverage['js/vs_ext.js'][1625]++;
  if (((! child) || (! child.id))) {
    _$jscoverage['js/vs_ext.js'][1626]++;
    return;
  }
  _$jscoverage['js/vs_ext.js'][1628]++;
  var span = this.__indicators_list[child.id];
  _$jscoverage['js/vs_ext.js'][1630]++;
  this.__indicators.removeChild(span);
  _$jscoverage['js/vs_ext.js'][1631]++;
  (delete this.__indicators_list[child.id]);
  _$jscoverage['js/vs_ext.js'][1633]++;
  vs.ui.View.prototype.remove.call(this, child);
}), removeAllChildren: (function () {
  _$jscoverage['js/vs_ext.js'][1643]++;
  for (var id in this.__indicators_list) {
    _$jscoverage['js/vs_ext.js'][1645]++;
    var comp = vs.core.Object._obs[id];
    _$jscoverage['js/vs_ext.js'][1646]++;
    this.remove(comp);
}
}), goToNextView: (function () {
  _$jscoverage['js/vs_ext.js'][1661]++;
  this._slideController.goToNextView();
}), goToPreviousView: (function () {
  _$jscoverage['js/vs_ext.js'][1671]++;
  this._slideController.goToPreviousView();
}), goToView: (function (id) {
  _$jscoverage['js/vs_ext.js'][1683]++;
  this._slideController.goToViewId(id);
}), goToViewAt: (function (index) {
  _$jscoverage['js/vs_ext.js'][1695]++;
  this._slideController.goToViewAt(index);
})};
  _$jscoverage['js/vs_ext.js'][1698]++;
  util.extendClass(Carousel, vs.ui.View);
  _$jscoverage['js/vs_ext.js'][1704]++;
  util.defineClassProperties(Carousel, {"size": {set: (function (v) {
  _$jscoverage['js/vs_ext.js'][1715]++;
  if ((! v)) {
    _$jscoverage['js/vs_ext.js'][1715]++;
    return;
  }
  _$jscoverage['js/vs_ext.js'][1716]++;
  if (((! util.isArray(v)) || (v.length !== 2))) {
    _$jscoverage['js/vs_ext.js'][1716]++;
    return;
  }
  _$jscoverage['js/vs_ext.js'][1717]++;
  if (((! util.isNumber(v[0])) || (! util.isNumber(v[1])))) {
    _$jscoverage['js/vs_ext.js'][1717]++;
    return;
  }
  _$jscoverage['js/vs_ext.js'][1719]++;
  this._size[0] = v[0];
  _$jscoverage['js/vs_ext.js'][1720]++;
  this._size[1] = v[1];
  _$jscoverage['js/vs_ext.js'][1722]++;
  if ((! this.view)) {
    _$jscoverage['js/vs_ext.js'][1722]++;
    return;
  }
  _$jscoverage['js/vs_ext.js'][1723]++;
  this._updateSize();
  _$jscoverage['js/vs_ext.js'][1725]++;
  if ((this._slideController && this._slideController.refresh)) {
    _$jscoverage['js/vs_ext.js'][1726]++;
    this._slideController.refresh();
  }
}), get: (function () {
  _$jscoverage['js/vs_ext.js'][1735]++;
  var view = this.view;
  _$jscoverage['js/vs_ext.js'][1736]++;
  if ((view && view.parentNode)) {
    _$jscoverage['js/vs_ext.js'][1738]++;
    this._size[0] = view.offsetWidth;
    _$jscoverage['js/vs_ext.js'][1739]++;
    this._size[1] = view.offsetHeight;
  }
  _$jscoverage['js/vs_ext.js'][1741]++;
  return this._size.slice();
})}, "delegate": {set: (function (v) {
  _$jscoverage['js/vs_ext.js'][1757]++;
  this._delegate = v;
})}, "indicatorsVisibility": {set: (function (v) {
  _$jscoverage['js/vs_ext.js'][1771]++;
  if (v) {
    _$jscoverage['js/vs_ext.js'][1773]++;
    this._indicators_visibility = true;
    _$jscoverage['js/vs_ext.js'][1774]++;
    __setVisible(this.__indicators, true);
  }
  else {
    _$jscoverage['js/vs_ext.js'][1778]++;
    this._indicators_visibility = false;
    _$jscoverage['js/vs_ext.js'][1779]++;
    __setVisible(this.__indicators, false);
  }
})}, "orientation": {set: (function (v) {
  _$jscoverage['js/vs_ext.js'][1792]++;
  if (((v !== Carousel.HORIZONTAL) && (v !== Carousel.VERTICAL))) {
    _$jscoverage['js/vs_ext.js'][1793]++;
    return;
  }
  _$jscoverage['js/vs_ext.js'][1795]++;
  if ((this._orientation === v)) {
    _$jscoverage['js/vs_ext.js'][1795]++;
    return;
  }
  _$jscoverage['js/vs_ext.js'][1796]++;
  if ((v === Carousel.HORIZONTAL)) {
    _$jscoverage['js/vs_ext.js'][1798]++;
    vs.util.removeClassName(this.__indicators, "vertical");
    _$jscoverage['js/vs_ext.js'][1799]++;
    vs.util.addClassName(this.__indicators, "horizontal");
  }
  else {
    _$jscoverage['js/vs_ext.js'][1803]++;
    vs.util.removeClassName(this.__indicators, "horizontal");
    _$jscoverage['js/vs_ext.js'][1804]++;
    vs.util.addClassName(this.__indicators, "vertical");
  }
  _$jscoverage['js/vs_ext.js'][1806]++;
  this._orientation = v;
  _$jscoverage['js/vs_ext.js'][1807]++;
  this._slideController.orientation = v;
}), get: (function () {
  _$jscoverage['js/vs_ext.js'][1816]++;
  return this._orientation;
})}});
  _$jscoverage['js/vs_ext.js'][1826]++;
  ext_ui.Carousel = Carousel;
  _$jscoverage['js/vs_ext.js'][1879]++;
  var Accordion = (function (config) {
  _$jscoverage['js/vs_ext.js'][1881]++;
  this.parent = ui.View;
  _$jscoverage['js/vs_ext.js'][1882]++;
  this.parent(config);
  _$jscoverage['js/vs_ext.js'][1883]++;
  this.constructor = Accordion;
  _$jscoverage['js/vs_ext.js'][1885]++;
  this.__ab_a_items = [];
});
  _$jscoverage['js/vs_ext.js'][1894]++;
  Accordion.STRETCH_NONE = 0;
  _$jscoverage['js/vs_ext.js'][1902]++;
  Accordion.STRETCH_FILL = 1;
  _$jscoverage['js/vs_ext.js'][1905]++;
  Accordion.prototype = {_stretch: Accordion.STRETCH_NONE, __ab_a_items: undefined, __ab_a_current_index: undefined, __ab_a_head_height: 33, push: (function (child, title) {
  _$jscoverage['js/vs_ext.js'][1948]++;
  if ((! child)) {
    _$jscoverage['js/vs_ext.js'][1948]++;
    return;
  }
  _$jscoverage['js/vs_ext.js'][1949]++;
  this.add(child);
  _$jscoverage['js/vs_ext.js'][1950]++;
  var index = this._getIndexForChild(child);
  _$jscoverage['js/vs_ext.js'][1951]++;
  this.setPanelTitle(index, title);
}), add: (function (child) {
  _$jscoverage['js/vs_ext.js'][1967]++;
  if ((! child)) {
    _$jscoverage['js/vs_ext.js'][1967]++;
    return;
  }
  _$jscoverage['js/vs_ext.js'][1968]++;
  var view, index, result;
  _$jscoverage['js/vs_ext.js'][1970]++;
  if ((! child.id)) {
    _$jscoverage['js/vs_ext.js'][1970]++;
    child.id = vs.core.createId();
  }
  _$jscoverage['js/vs_ext.js'][1972]++;
  index = this.__ab_a_items.length;
  _$jscoverage['js/vs_ext.js'][1974]++;
  result = this._createView(child, ("Section " + (index + 1)), index);
  _$jscoverage['js/vs_ext.js'][1975]++;
  this.view.appendChild(result.dt);
  _$jscoverage['js/vs_ext.js'][1976]++;
  ui.View.prototype.add.call(this, child, "children", result.dd);
  _$jscoverage['js/vs_ext.js'][1978]++;
  this.__ab_a_items.push(result);
  _$jscoverage['js/vs_ext.js'][1979]++;
  this._updateSizePanel();
}), remove: (function (child) {
  _$jscoverage['js/vs_ext.js'][1994]++;
  var index = this._getIndexForChild(child), panel;
  _$jscoverage['js/vs_ext.js'][1995]++;
  if ((index === -1)) {
    _$jscoverage['js/vs_ext.js'][1996]++;
    return;
  }
  _$jscoverage['js/vs_ext.js'][1998]++;
  ui.View.prototype.remove.call(this, child);
  _$jscoverage['js/vs_ext.js'][1999]++;
  panel = this.__ab_a_items[index];
  _$jscoverage['js/vs_ext.js'][2000]++;
  panel.dd.removeChild(child.view);
  _$jscoverage['js/vs_ext.js'][2001]++;
  this.view.removeChild(panel.dt);
  _$jscoverage['js/vs_ext.js'][2002]++;
  panel.dt.removeEventListener(core.POINTER_START, this);
  _$jscoverage['js/vs_ext.js'][2003]++;
  (delete panel.dt);
  _$jscoverage['js/vs_ext.js'][2004]++;
  (delete panel.dd);
  _$jscoverage['js/vs_ext.js'][2005]++;
  (delete panel);
  _$jscoverage['js/vs_ext.js'][2007]++;
  this.__ab_a_items.remove(index);
  _$jscoverage['js/vs_ext.js'][2009]++;
  if ((index === this.__ab_a_current_index)) {
    _$jscoverage['js/vs_ext.js'][2012]++;
    this.__ab_a_current_index = null;
    _$jscoverage['js/vs_ext.js'][2013]++;
    this.expandPanel(0);
  }
  else {
    _$jscoverage['js/vs_ext.js'][2017]++;
    this._updateSizePanel();
  }
}), _getIndexForChild: (function (child) {
  _$jscoverage['js/vs_ext.js'][2025]++;
  if ((! child)) {
    _$jscoverage['js/vs_ext.js'][2025]++;
    return -1;
  }
  _$jscoverage['js/vs_ext.js'][2027]++;
  var index, panel;
  _$jscoverage['js/vs_ext.js'][2029]++;
  for (index = 0; (index < this.__ab_a_items.length); (index++)) {
    _$jscoverage['js/vs_ext.js'][2031]++;
    panel = this.__ab_a_items[index];
    _$jscoverage['js/vs_ext.js'][2032]++;
    if (((! panel) || (! panel.dd))) {
      _$jscoverage['js/vs_ext.js'][2033]++;
      continue;
    }
    _$jscoverage['js/vs_ext.js'][2034]++;
    if ((panel.dd.__child === child)) {
      _$jscoverage['js/vs_ext.js'][2035]++;
      return index;
    }
}
  _$jscoverage['js/vs_ext.js'][2037]++;
  return -1;
}), _createView: (function (child, title, index) {
  _$jscoverage['js/vs_ext.js'][2045]++;
  var panel = {}, mode;
  _$jscoverage['js/vs_ext.js'][2047]++;
  panel.dt = document.createElement("dt");
  _$jscoverage['js/vs_ext.js'][2048]++;
  util.setElementInnerText(panel.dt, title);
  _$jscoverage['js/vs_ext.js'][2049]++;
  panel.title = title;
  _$jscoverage['js/vs_ext.js'][2051]++;
  panel.dd = document.createElement("dd");
  _$jscoverage['js/vs_ext.js'][2052]++;
  if ((this._stretch === Accordion.STRETCH_FILL)) {
    _$jscoverage['js/vs_ext.js'][2054]++;
    child.position = [0, 0];
  }
  _$jscoverage['js/vs_ext.js'][2056]++;
  panel.dd.appendChild(child.view);
  _$jscoverage['js/vs_ext.js'][2058]++;
  mode = (index? "collapsed": "expanded");
  _$jscoverage['js/vs_ext.js'][2060]++;
  panel.dd.setAttribute("class", mode);
  _$jscoverage['js/vs_ext.js'][2061]++;
  panel.dt.setAttribute("class", mode);
  _$jscoverage['js/vs_ext.js'][2062]++;
  panel.dd.__child = child;
  _$jscoverage['js/vs_ext.js'][2063]++;
  panel.child = child;
  _$jscoverage['js/vs_ext.js'][2065]++;
  if ((mode === "collapsed")) {
    _$jscoverage['js/vs_ext.js'][2067]++;
    panel.dd.style.width = "100%";
    _$jscoverage['js/vs_ext.js'][2068]++;
    panel.dd.style.height = "0px";
  }
  else {
    _$jscoverage['js/vs_ext.js'][2072]++;
    panel.dd.style.width = "100%";
    _$jscoverage['js/vs_ext.js'][2073]++;
    panel.dd.style.height = (child._size[1] + "px");
    _$jscoverage['js/vs_ext.js'][2074]++;
    this.__ab_a_current_index = index;
  }
  _$jscoverage['js/vs_ext.js'][2077]++;
  if ((this._stretch === Accordion.STRETCH_FILL)) {
    _$jscoverage['js/vs_ext.js'][2079]++;
    child.size = [(this._size[0] - 2), this._size[1]];
  }
  _$jscoverage['js/vs_ext.js'][2081]++;
  panel.dt.__dd = panel.dd;
  _$jscoverage['js/vs_ext.js'][2082]++;
  panel.dt.__index = index;
  _$jscoverage['js/vs_ext.js'][2083]++;
  panel.dt.addEventListener(core.POINTER_START, this);
  _$jscoverage['js/vs_ext.js'][2084]++;
  return panel;
}), expandPanel: (function (index) {
  _$jscoverage['js/vs_ext.js'][2105]++;
  var panel, i;
  _$jscoverage['js/vs_ext.js'][2107]++;
  if ((util.isNumber(index) && (index >= 0) && (index < this.__ab_a_items.length))) {
    _$jscoverage['js/vs_ext.js'][2110]++;
    if ((index === this.__ab_a_current_index)) {
      _$jscoverage['js/vs_ext.js'][2112]++;
      return;
    }
    _$jscoverage['js/vs_ext.js'][2115]++;
    panel = this.__ab_a_items[this.__ab_a_current_index];
    _$jscoverage['js/vs_ext.js'][2116]++;
    if (panel) {
      _$jscoverage['js/vs_ext.js'][2118]++;
      util.removeClassName(panel.dt, "expanded");
      _$jscoverage['js/vs_ext.js'][2119]++;
      util.addClassName(panel.dt, "collapsed");
      _$jscoverage['js/vs_ext.js'][2120]++;
      panel.dd.style.height = "0px";
    }
    _$jscoverage['js/vs_ext.js'][2123]++;
    panel = this.__ab_a_items[index];
    _$jscoverage['js/vs_ext.js'][2124]++;
    util.removeClassName(panel.dt, "collapsed");
    _$jscoverage['js/vs_ext.js'][2125]++;
    util.addClassName(panel.dt, "expanded");
    _$jscoverage['js/vs_ext.js'][2127]++;
    this.__ab_a_current_index = index;
    _$jscoverage['js/vs_ext.js'][2128]++;
    this._updateSizePanel();
    _$jscoverage['js/vs_ext.js'][2129]++;
    this.propagate("panel_select", index);
    _$jscoverage['js/vs_ext.js'][2130]++;
    return;
  }
  _$jscoverage['js/vs_ext.js'][2132]++;
  if (util.isString(index)) {
    _$jscoverage['js/vs_ext.js'][2134]++;
    for (i = 0; (i < this.__ab_a_items.length); (i++)) {
      _$jscoverage['js/vs_ext.js'][2136]++;
      panel = this.__ab_a_items[i];
      _$jscoverage['js/vs_ext.js'][2137]++;
      if ((panel.title === index)) {
        _$jscoverage['js/vs_ext.js'][2139]++;
        this.expandPanel(i);
        _$jscoverage['js/vs_ext.js'][2140]++;
        return;
      }
}
  }
}), setPanelTitle: (function (index, title) {
  _$jscoverage['js/vs_ext.js'][2165]++;
  var panel, i;
  _$jscoverage['js/vs_ext.js'][2167]++;
  if ((util.isNumber(index) && (index >= 0) && (index < this.__ab_a_items.length))) {
    _$jscoverage['js/vs_ext.js'][2170]++;
    panel = this.__ab_a_items[index];
    _$jscoverage['js/vs_ext.js'][2171]++;
    panel.title = title;
    _$jscoverage['js/vs_ext.js'][2172]++;
    util.setElementInnerText(panel.dt, title);
    _$jscoverage['js/vs_ext.js'][2174]++;
    return;
  }
  _$jscoverage['js/vs_ext.js'][2176]++;
  if (util.isString(index)) {
    _$jscoverage['js/vs_ext.js'][2178]++;
    for (i = 0; (i < this.__ab_a_items.length); (i++)) {
      _$jscoverage['js/vs_ext.js'][2180]++;
      panel = this.__ab_a_items[i];
      _$jscoverage['js/vs_ext.js'][2181]++;
      if ((panel.title === index)) {
        _$jscoverage['js/vs_ext.js'][2183]++;
        this.setPanelTitle(i, title);
        _$jscoverage['js/vs_ext.js'][2184]++;
        return;
      }
}
  }
}), _updateSize: (function () {
  _$jscoverage['js/vs_ext.js'][2199]++;
  vs.ui.View.prototype._updateSize.call(this);
  _$jscoverage['js/vs_ext.js'][2201]++;
  this._updateSizePanel();
}), _updateSizePanel: (function () {
  _$jscoverage['js/vs_ext.js'][2209]++;
  var height, panel, i;
  _$jscoverage['js/vs_ext.js'][2210]++;
  panel = this.__ab_a_items[this.__ab_a_current_index];
  _$jscoverage['js/vs_ext.js'][2211]++;
  if (panel) {
    _$jscoverage['js/vs_ext.js'][2213]++;
    height = this._size[1];
    _$jscoverage['js/vs_ext.js'][2214]++;
    this.__ab_a_head_height = panel.dt.offsetHeight;
    _$jscoverage['js/vs_ext.js'][2215]++;
    height -= ((this.__ab_a_items.length * this.__ab_a_head_height) + 2 + 6);
    _$jscoverage['js/vs_ext.js'][2216]++;
    panel.dd.style.height = (height + "px");
    _$jscoverage['js/vs_ext.js'][2217]++;
    if ((this._stretch === Accordion.STRETCH_FILL)) {
      _$jscoverage['js/vs_ext.js'][2219]++;
      panel.child.size = [(this._size[0] - 2), height];
    }
  }
}), handleEvent: (function (e) {
  _$jscoverage['js/vs_ext.js'][2233]++;
  var elem = e.target, self = this, pageY, pageX, delta;
  _$jscoverage['js/vs_ext.js'][2235]++;
  if ((elem.nodeType !== 1)) {
    _$jscoverage['js/vs_ext.js'][2237]++;
    elem = elem.parentElement;
  }
  _$jscoverage['js/vs_ext.js'][2239]++;
  if ((e.type === core.POINTER_START)) {
    _$jscoverage['js/vs_ext.js'][2242]++;
    if ((EVENT_SUPPORT_TOUCH && (e.touches.length > 1))) {
      _$jscoverage['js/vs_ext.js'][2242]++;
      return;
    }
    _$jscoverage['js/vs_ext.js'][2244]++;
    e.stopPropagation();
    _$jscoverage['js/vs_ext.js'][2245]++;
    e.preventDefault();
    _$jscoverage['js/vs_ext.js'][2247]++;
    if (util.hasClassName(elem, "expanded")) {
      _$jscoverage['js/vs_ext.js'][2248]++;
      return false;
    }
    _$jscoverage['js/vs_ext.js'][2250]++;
    document.addEventListener(core.POINTER_MOVE, this, false);
    _$jscoverage['js/vs_ext.js'][2251]++;
    document.addEventListener(core.POINTER_END, this, false);
    _$jscoverage['js/vs_ext.js'][2253]++;
    this.__touch_start_x = (EVENT_SUPPORT_TOUCH? e.touches[0].pageY: e.pageY);
    _$jscoverage['js/vs_ext.js'][2254]++;
    this.__touch_start_y = (EVENT_SUPPORT_TOUCH? e.touches[0].pageY: e.pageY);
    _$jscoverage['js/vs_ext.js'][2256]++;
    this.__elem = elem;
    _$jscoverage['js/vs_ext.js'][2258]++;
    if (this.__elem_to_unselect) {
      _$jscoverage['js/vs_ext.js'][2260]++;
      util.removeClassName(this.__elem_to_unselect, "selected");
      _$jscoverage['js/vs_ext.js'][2261]++;
      this.__elem_to_unselect = null;
    }
    _$jscoverage['js/vs_ext.js'][2263]++;
    this.__list_time_out = setTimeout((function () {
  _$jscoverage['js/vs_ext.js'][2265]++;
  util.addClassName(self.__elem, "selected");
  _$jscoverage['js/vs_ext.js'][2266]++;
  self.__list_time_out = 0;
}), ui.View.SELECT_DELAY);
  }
  else {
    _$jscoverage['js/vs_ext.js'][2269]++;
    if ((e.type === core.POINTER_MOVE)) {
      _$jscoverage['js/vs_ext.js'][2271]++;
      e.stopPropagation();
      _$jscoverage['js/vs_ext.js'][2272]++;
      e.preventDefault();
      _$jscoverage['js/vs_ext.js'][2274]++;
      pageX = (EVENT_SUPPORT_TOUCH? e.touches[0].pageX: e.pageX);
      _$jscoverage['js/vs_ext.js'][2275]++;
      pageY = (EVENT_SUPPORT_TOUCH? e.touches[0].pageY: e.pageY);
      _$jscoverage['js/vs_ext.js'][2276]++;
      delta = (Math.abs((pageY - this.__touch_start_y)) + Math.abs((pageX - this.__touch_start_x)));
      _$jscoverage['js/vs_ext.js'][2282]++;
      if ((this.__elem && (delta > (ui.View.MOVE_THRESHOLD * 2)))) {
        _$jscoverage['js/vs_ext.js'][2284]++;
        if (this.__list_time_out) {
          _$jscoverage['js/vs_ext.js'][2286]++;
          clearTimeout(this.__list_time_out);
          _$jscoverage['js/vs_ext.js'][2287]++;
          this.__list_time_out = 0;
        }
        else {
          _$jscoverage['js/vs_ext.js'][2291]++;
          util.removeClassName(this.__elem, "selected");
        }
        _$jscoverage['js/vs_ext.js'][2293]++;
        this.__elem = null;
      }
    }
    else {
      _$jscoverage['js/vs_ext.js'][2296]++;
      if ((e.type === core.POINTER_END)) {
        _$jscoverage['js/vs_ext.js'][2298]++;
        e.stopPropagation();
        _$jscoverage['js/vs_ext.js'][2299]++;
        e.preventDefault();
        _$jscoverage['js/vs_ext.js'][2302]++;
        document.removeEventListener(core.POINTER_MOVE, this);
        _$jscoverage['js/vs_ext.js'][2303]++;
        document.removeEventListener(core.POINTER_END, this);
        _$jscoverage['js/vs_ext.js'][2306]++;
        if (this.__elem) {
          _$jscoverage['js/vs_ext.js'][2308]++;
          if (this.__list_time_out) {
            _$jscoverage['js/vs_ext.js'][2310]++;
            clearTimeout(this.__list_time_out);
            _$jscoverage['js/vs_ext.js'][2312]++;
            util.addClassName(self.__elem, "selected");
          }
          _$jscoverage['js/vs_ext.js'][2315]++;
          this.__elem_to_unselect = this.__elem;
          _$jscoverage['js/vs_ext.js'][2316]++;
          this.__list_time_out = setTimeout((function () {
  _$jscoverage['js/vs_ext.js'][2318]++;
  util.removeClassName(self.__elem_to_unselect, "selected");
  _$jscoverage['js/vs_ext.js'][2319]++;
  self.__elem_to_unselect = null;
  _$jscoverage['js/vs_ext.js'][2320]++;
  self.__list_time_out = 0;
}), ui.View.UNSELECT_DELAY);
          _$jscoverage['js/vs_ext.js'][2323]++;
          if (util.isNumber(elem.__index)) {
            _$jscoverage['js/vs_ext.js'][2325]++;
            this.expandPanel(elem.__index);
          }
        }
        _$jscoverage['js/vs_ext.js'][2329]++;
        this.__elem = null;
      }
    }
  }
  _$jscoverage['js/vs_ext.js'][2332]++;
  return false;
}), notify: (function (event) {
})};
  _$jscoverage['js/vs_ext.js'][2342]++;
  util.extendClass(Accordion, vs.ui.View);
  _$jscoverage['js/vs_ext.js'][2344]++;
  util.defineClassProperty(Accordion, "stretch", {set: (function (v) {
  _$jscoverage['js/vs_ext.js'][2358]++;
  if ((! util.isNumber(v))) {
    _$jscoverage['js/vs_ext.js'][2358]++;
    return;
  }
  _$jscoverage['js/vs_ext.js'][2359]++;
  if (((v !== Accordion.STRETCH_FILL) && (v !== Accordion.STRETCH_NONE))) {
    _$jscoverage['js/vs_ext.js'][2361]++;
    return;
  }
  _$jscoverage['js/vs_ext.js'][2363]++;
  this._stretch = v;
  _$jscoverage['js/vs_ext.js'][2365]++;
  if ((this._stretch === Accordion.STRETCH_FILL)) {
    _$jscoverage['js/vs_ext.js'][2367]++;
    util.addClassName(this.view, "fill");
  }
  else {
    _$jscoverage['js/vs_ext.js'][2371]++;
    util.removeClassName(this.view, "fill");
  }
  _$jscoverage['js/vs_ext.js'][2373]++;
  this._updateSizePanel();
}), get: (function () {
  _$jscoverage['js/vs_ext.js'][2387]++;
  return this._stretch;
})});
  _$jscoverage['js/vs_ext.js'][2395]++;
  ext_ui.Accordion = Accordion;
  _$jscoverage['js/vs_ext.js'][2398]++;
  GMap.prototype.html_template = "<div class='vs_ext_ui_gmap'></div>";
  _$jscoverage['js/vs_ext.js'][2402]++;
  Carousel.prototype.html_template = "<div class='vs_ext_ui_carousel' x-hag-hole='children'><div class='indicators'></div></div>";
  _$jscoverage['js/vs_ext.js'][2406]++;
  Accordion.prototype.html_template = "<dl class='vs_ext_ui_accordion' x-hag-hole='children'></dl>";
})(window);
