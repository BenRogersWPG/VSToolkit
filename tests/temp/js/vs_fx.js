/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    this._$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (! this._$jscoverage) {
  this._$jscoverage = {};
}
if (! _$jscoverage['js/vs_fx.js']) {
  _$jscoverage['js/vs_fx.js'] = [];
  _$jscoverage['js/vs_fx.js'][19] = 0;
  _$jscoverage['js/vs_fx.js'][21] = 0;
  _$jscoverage['js/vs_fx.js'][45] = 0;
  _$jscoverage['js/vs_fx.js'][71] = 0;
  _$jscoverage['js/vs_fx.js'][73] = 0;
  _$jscoverage['js/vs_fx.js'][74] = 0;
  _$jscoverage['js/vs_fx.js'][75] = 0;
  _$jscoverage['js/vs_fx.js'][76] = 0;
  _$jscoverage['js/vs_fx.js'][77] = 0;
  _$jscoverage['js/vs_fx.js'][79] = 0;
  _$jscoverage['js/vs_fx.js'][80] = 0;
  _$jscoverage['js/vs_fx.js'][81] = 0;
  _$jscoverage['js/vs_fx.js'][82] = 0;
  _$jscoverage['js/vs_fx.js'][83] = 0;
  _$jscoverage['js/vs_fx.js'][85] = 0;
  _$jscoverage['js/vs_fx.js'][86] = 0;
  _$jscoverage['js/vs_fx.js'][87] = 0;
  _$jscoverage['js/vs_fx.js'][88] = 0;
  _$jscoverage['js/vs_fx.js'][90] = 0;
  _$jscoverage['js/vs_fx.js'][92] = 0;
  _$jscoverage['js/vs_fx.js'][93] = 0;
  _$jscoverage['js/vs_fx.js'][94] = 0;
  _$jscoverage['js/vs_fx.js'][95] = 0;
  _$jscoverage['js/vs_fx.js'][96] = 0;
  _$jscoverage['js/vs_fx.js'][98] = 0;
  _$jscoverage['js/vs_fx.js'][99] = 0;
  _$jscoverage['js/vs_fx.js'][100] = 0;
  _$jscoverage['js/vs_fx.js'][101] = 0;
  _$jscoverage['js/vs_fx.js'][102] = 0;
  _$jscoverage['js/vs_fx.js'][104] = 0;
  _$jscoverage['js/vs_fx.js'][105] = 0;
  _$jscoverage['js/vs_fx.js'][106] = 0;
  _$jscoverage['js/vs_fx.js'][107] = 0;
  _$jscoverage['js/vs_fx.js'][111] = 0;
  _$jscoverage['js/vs_fx.js'][112] = 0;
  _$jscoverage['js/vs_fx.js'][113] = 0;
  _$jscoverage['js/vs_fx.js'][114] = 0;
  _$jscoverage['js/vs_fx.js'][115] = 0;
  _$jscoverage['js/vs_fx.js'][117] = 0;
  _$jscoverage['js/vs_fx.js'][118] = 0;
  _$jscoverage['js/vs_fx.js'][119] = 0;
  _$jscoverage['js/vs_fx.js'][120] = 0;
  _$jscoverage['js/vs_fx.js'][121] = 0;
  _$jscoverage['js/vs_fx.js'][123] = 0;
  _$jscoverage['js/vs_fx.js'][124] = 0;
  _$jscoverage['js/vs_fx.js'][125] = 0;
  _$jscoverage['js/vs_fx.js'][126] = 0;
  _$jscoverage['js/vs_fx.js'][133] = 0;
  _$jscoverage['js/vs_fx.js'][138] = 0;
  _$jscoverage['js/vs_fx.js'][143] = 0;
  _$jscoverage['js/vs_fx.js'][148] = 0;
  _$jscoverage['js/vs_fx.js'][153] = 0;
  _$jscoverage['js/vs_fx.js'][160] = 0;
  _$jscoverage['js/vs_fx.js'][162] = 0;
  _$jscoverage['js/vs_fx.js'][163] = 0;
  _$jscoverage['js/vs_fx.js'][165] = 0;
  _$jscoverage['js/vs_fx.js'][166] = 0;
  _$jscoverage['js/vs_fx.js'][168] = 0;
  _$jscoverage['js/vs_fx.js'][170] = 0;
  _$jscoverage['js/vs_fx.js'][171] = 0;
  _$jscoverage['js/vs_fx.js'][173] = 0;
  _$jscoverage['js/vs_fx.js'][174] = 0;
  _$jscoverage['js/vs_fx.js'][176] = 0;
  _$jscoverage['js/vs_fx.js'][177] = 0;
  _$jscoverage['js/vs_fx.js'][181] = 0;
  _$jscoverage['js/vs_fx.js'][182] = 0;
  _$jscoverage['js/vs_fx.js'][184] = 0;
  _$jscoverage['js/vs_fx.js'][186] = 0;
  _$jscoverage['js/vs_fx.js'][188] = 0;
  _$jscoverage['js/vs_fx.js'][201] = 0;
  _$jscoverage['js/vs_fx.js'][203] = 0;
  _$jscoverage['js/vs_fx.js'][205] = 0;
  _$jscoverage['js/vs_fx.js'][206] = 0;
  _$jscoverage['js/vs_fx.js'][209] = 0;
  _$jscoverage['js/vs_fx.js'][211] = 0;
  _$jscoverage['js/vs_fx.js'][212] = 0;
  _$jscoverage['js/vs_fx.js'][215] = 0;
  _$jscoverage['js/vs_fx.js'][220] = 0;
  _$jscoverage['js/vs_fx.js'][222] = 0;
  _$jscoverage['js/vs_fx.js'][223] = 0;
  _$jscoverage['js/vs_fx.js'][224] = 0;
  _$jscoverage['js/vs_fx.js'][225] = 0;
  _$jscoverage['js/vs_fx.js'][227] = 0;
  _$jscoverage['js/vs_fx.js'][229] = 0;
  _$jscoverage['js/vs_fx.js'][230] = 0;
  _$jscoverage['js/vs_fx.js'][233] = 0;
  _$jscoverage['js/vs_fx.js'][235] = 0;
  _$jscoverage['js/vs_fx.js'][237] = 0;
  _$jscoverage['js/vs_fx.js'][239] = 0;
  _$jscoverage['js/vs_fx.js'][243] = 0;
  _$jscoverage['js/vs_fx.js'][246] = 0;
  _$jscoverage['js/vs_fx.js'][247] = 0;
  _$jscoverage['js/vs_fx.js'][249] = 0;
  _$jscoverage['js/vs_fx.js'][251] = 0;
  _$jscoverage['js/vs_fx.js'][254] = 0;
  _$jscoverage['js/vs_fx.js'][256] = 0;
  _$jscoverage['js/vs_fx.js'][257] = 0;
  _$jscoverage['js/vs_fx.js'][259] = 0;
  _$jscoverage['js/vs_fx.js'][261] = 0;
  _$jscoverage['js/vs_fx.js'][263] = 0;
  _$jscoverage['js/vs_fx.js'][265] = 0;
  _$jscoverage['js/vs_fx.js'][269] = 0;
  _$jscoverage['js/vs_fx.js'][272] = 0;
  _$jscoverage['js/vs_fx.js'][274] = 0;
  _$jscoverage['js/vs_fx.js'][276] = 0;
  _$jscoverage['js/vs_fx.js'][278] = 0;
  _$jscoverage['js/vs_fx.js'][281] = 0;
  _$jscoverage['js/vs_fx.js'][285] = 0;
  _$jscoverage['js/vs_fx.js'][290] = 0;
  _$jscoverage['js/vs_fx.js'][292] = 0;
  _$jscoverage['js/vs_fx.js'][294] = 0;
  _$jscoverage['js/vs_fx.js'][296] = 0;
  _$jscoverage['js/vs_fx.js'][298] = 0;
  _$jscoverage['js/vs_fx.js'][299] = 0;
  _$jscoverage['js/vs_fx.js'][300] = 0;
  _$jscoverage['js/vs_fx.js'][301] = 0;
  _$jscoverage['js/vs_fx.js'][303] = 0;
  _$jscoverage['js/vs_fx.js'][304] = 0;
  _$jscoverage['js/vs_fx.js'][306] = 0;
  _$jscoverage['js/vs_fx.js'][307] = 0;
  _$jscoverage['js/vs_fx.js'][309] = 0;
  _$jscoverage['js/vs_fx.js'][311] = 0;
  _$jscoverage['js/vs_fx.js'][312] = 0;
  _$jscoverage['js/vs_fx.js'][313] = 0;
  _$jscoverage['js/vs_fx.js'][314] = 0;
  _$jscoverage['js/vs_fx.js'][315] = 0;
  _$jscoverage['js/vs_fx.js'][318] = 0;
  _$jscoverage['js/vs_fx.js'][321] = 0;
  _$jscoverage['js/vs_fx.js'][323] = 0;
  _$jscoverage['js/vs_fx.js'][326] = 0;
  _$jscoverage['js/vs_fx.js'][328] = 0;
  _$jscoverage['js/vs_fx.js'][329] = 0;
  _$jscoverage['js/vs_fx.js'][331] = 0;
  _$jscoverage['js/vs_fx.js'][334] = 0;
  _$jscoverage['js/vs_fx.js'][336] = 0;
  _$jscoverage['js/vs_fx.js'][339] = 0;
  _$jscoverage['js/vs_fx.js'][340] = 0;
  _$jscoverage['js/vs_fx.js'][342] = 0;
  _$jscoverage['js/vs_fx.js'][343] = 0;
  _$jscoverage['js/vs_fx.js'][345] = 0;
  _$jscoverage['js/vs_fx.js'][350] = 0;
  _$jscoverage['js/vs_fx.js'][351] = 0;
  _$jscoverage['js/vs_fx.js'][353] = 0;
  _$jscoverage['js/vs_fx.js'][355] = 0;
  _$jscoverage['js/vs_fx.js'][358] = 0;
  _$jscoverage['js/vs_fx.js'][360] = 0;
  _$jscoverage['js/vs_fx.js'][364] = 0;
  _$jscoverage['js/vs_fx.js'][366] = 0;
  _$jscoverage['js/vs_fx.js'][367] = 0;
  _$jscoverage['js/vs_fx.js'][368] = 0;
  _$jscoverage['js/vs_fx.js'][369] = 0;
  _$jscoverage['js/vs_fx.js'][370] = 0;
  _$jscoverage['js/vs_fx.js'][371] = 0;
  _$jscoverage['js/vs_fx.js'][372] = 0;
  _$jscoverage['js/vs_fx.js'][373] = 0;
  _$jscoverage['js/vs_fx.js'][374] = 0;
  _$jscoverage['js/vs_fx.js'][375] = 0;
  _$jscoverage['js/vs_fx.js'][376] = 0;
  _$jscoverage['js/vs_fx.js'][377] = 0;
  _$jscoverage['js/vs_fx.js'][378] = 0;
  _$jscoverage['js/vs_fx.js'][379] = 0;
  _$jscoverage['js/vs_fx.js'][380] = 0;
  _$jscoverage['js/vs_fx.js'][381] = 0;
  _$jscoverage['js/vs_fx.js'][382] = 0;
  _$jscoverage['js/vs_fx.js'][383] = 0;
  _$jscoverage['js/vs_fx.js'][384] = 0;
  _$jscoverage['js/vs_fx.js'][385] = 0;
  _$jscoverage['js/vs_fx.js'][387] = 0;
  _$jscoverage['js/vs_fx.js'][389] = 0;
  _$jscoverage['js/vs_fx.js'][391] = 0;
  _$jscoverage['js/vs_fx.js'][393] = 0;
  _$jscoverage['js/vs_fx.js'][395] = 0;
  _$jscoverage['js/vs_fx.js'][398] = 0;
  _$jscoverage['js/vs_fx.js'][400] = 0;
  _$jscoverage['js/vs_fx.js'][402] = 0;
  _$jscoverage['js/vs_fx.js'][407] = 0;
  _$jscoverage['js/vs_fx.js'][409] = 0;
  _$jscoverage['js/vs_fx.js'][412] = 0;
  _$jscoverage['js/vs_fx.js'][415] = 0;
  _$jscoverage['js/vs_fx.js'][416] = 0;
  _$jscoverage['js/vs_fx.js'][419] = 0;
  _$jscoverage['js/vs_fx.js'][420] = 0;
  _$jscoverage['js/vs_fx.js'][422] = 0;
  _$jscoverage['js/vs_fx.js'][423] = 0;
  _$jscoverage['js/vs_fx.js'][426] = 0;
  _$jscoverage['js/vs_fx.js'][428] = 0;
  _$jscoverage['js/vs_fx.js'][429] = 0;
  _$jscoverage['js/vs_fx.js'][431] = 0;
  _$jscoverage['js/vs_fx.js'][432] = 0;
  _$jscoverage['js/vs_fx.js'][437] = 0;
  _$jscoverage['js/vs_fx.js'][438] = 0;
  _$jscoverage['js/vs_fx.js'][441] = 0;
  _$jscoverage['js/vs_fx.js'][442] = 0;
  _$jscoverage['js/vs_fx.js'][444] = 0;
  _$jscoverage['js/vs_fx.js'][449] = 0;
  _$jscoverage['js/vs_fx.js'][450] = 0;
  _$jscoverage['js/vs_fx.js'][452] = 0;
  _$jscoverage['js/vs_fx.js'][453] = 0;
  _$jscoverage['js/vs_fx.js'][455] = 0;
  _$jscoverage['js/vs_fx.js'][456] = 0;
  _$jscoverage['js/vs_fx.js'][458] = 0;
  _$jscoverage['js/vs_fx.js'][461] = 0;
  _$jscoverage['js/vs_fx.js'][463] = 0;
  _$jscoverage['js/vs_fx.js'][465] = 0;
  _$jscoverage['js/vs_fx.js'][467] = 0;
  _$jscoverage['js/vs_fx.js'][468] = 0;
  _$jscoverage['js/vs_fx.js'][470] = 0;
  _$jscoverage['js/vs_fx.js'][471] = 0;
  _$jscoverage['js/vs_fx.js'][472] = 0;
  _$jscoverage['js/vs_fx.js'][473] = 0;
  _$jscoverage['js/vs_fx.js'][475] = 0;
  _$jscoverage['js/vs_fx.js'][477] = 0;
  _$jscoverage['js/vs_fx.js'][478] = 0;
  _$jscoverage['js/vs_fx.js'][479] = 0;
  _$jscoverage['js/vs_fx.js'][480] = 0;
  _$jscoverage['js/vs_fx.js'][481] = 0;
  _$jscoverage['js/vs_fx.js'][482] = 0;
  _$jscoverage['js/vs_fx.js'][483] = 0;
  _$jscoverage['js/vs_fx.js'][484] = 0;
  _$jscoverage['js/vs_fx.js'][485] = 0;
  _$jscoverage['js/vs_fx.js'][486] = 0;
  _$jscoverage['js/vs_fx.js'][487] = 0;
  _$jscoverage['js/vs_fx.js'][488] = 0;
  _$jscoverage['js/vs_fx.js'][489] = 0;
  _$jscoverage['js/vs_fx.js'][490] = 0;
  _$jscoverage['js/vs_fx.js'][491] = 0;
  _$jscoverage['js/vs_fx.js'][492] = 0;
  _$jscoverage['js/vs_fx.js'][493] = 0;
  _$jscoverage['js/vs_fx.js'][494] = 0;
  _$jscoverage['js/vs_fx.js'][495] = 0;
  _$jscoverage['js/vs_fx.js'][496] = 0;
  _$jscoverage['js/vs_fx.js'][497] = 0;
  _$jscoverage['js/vs_fx.js'][498] = 0;
  _$jscoverage['js/vs_fx.js'][499] = 0;
  _$jscoverage['js/vs_fx.js'][500] = 0;
  _$jscoverage['js/vs_fx.js'][501] = 0;
  _$jscoverage['js/vs_fx.js'][503] = 0;
  _$jscoverage['js/vs_fx.js'][508] = 0;
  _$jscoverage['js/vs_fx.js'][510] = 0;
  _$jscoverage['js/vs_fx.js'][511] = 0;
  _$jscoverage['js/vs_fx.js'][512] = 0;
  _$jscoverage['js/vs_fx.js'][513] = 0;
  _$jscoverage['js/vs_fx.js'][514] = 0;
  _$jscoverage['js/vs_fx.js'][515] = 0;
  _$jscoverage['js/vs_fx.js'][516] = 0;
  _$jscoverage['js/vs_fx.js'][517] = 0;
  _$jscoverage['js/vs_fx.js'][518] = 0;
  _$jscoverage['js/vs_fx.js'][519] = 0;
  _$jscoverage['js/vs_fx.js'][520] = 0;
  _$jscoverage['js/vs_fx.js'][521] = 0;
  _$jscoverage['js/vs_fx.js'][522] = 0;
  _$jscoverage['js/vs_fx.js'][523] = 0;
  _$jscoverage['js/vs_fx.js'][524] = 0;
  _$jscoverage['js/vs_fx.js'][525] = 0;
  _$jscoverage['js/vs_fx.js'][526] = 0;
  _$jscoverage['js/vs_fx.js'][527] = 0;
  _$jscoverage['js/vs_fx.js'][528] = 0;
  _$jscoverage['js/vs_fx.js'][529] = 0;
  _$jscoverage['js/vs_fx.js'][530] = 0;
  _$jscoverage['js/vs_fx.js'][531] = 0;
  _$jscoverage['js/vs_fx.js'][532] = 0;
  _$jscoverage['js/vs_fx.js'][534] = 0;
  _$jscoverage['js/vs_fx.js'][537] = 0;
  _$jscoverage['js/vs_fx.js'][539] = 0;
  _$jscoverage['js/vs_fx.js'][542] = 0;
  _$jscoverage['js/vs_fx.js'][545] = 0;
  _$jscoverage['js/vs_fx.js'][548] = 0;
  _$jscoverage['js/vs_fx.js'][549] = 0;
  _$jscoverage['js/vs_fx.js'][551] = 0;
  _$jscoverage['js/vs_fx.js'][553] = 0;
  _$jscoverage['js/vs_fx.js'][556] = 0;
  _$jscoverage['js/vs_fx.js'][557] = 0;
  _$jscoverage['js/vs_fx.js'][559] = 0;
  _$jscoverage['js/vs_fx.js'][625] = 0;
  _$jscoverage['js/vs_fx.js'][627] = 0;
  _$jscoverage['js/vs_fx.js'][628] = 0;
  _$jscoverage['js/vs_fx.js'][629] = 0;
  _$jscoverage['js/vs_fx.js'][631] = 0;
  _$jscoverage['js/vs_fx.js'][633] = 0;
  _$jscoverage['js/vs_fx.js'][634] = 0;
  _$jscoverage['js/vs_fx.js'][636] = 0;
  _$jscoverage['js/vs_fx.js'][641] = 0;
  _$jscoverage['js/vs_fx.js'][643] = 0;
  _$jscoverage['js/vs_fx.js'][644] = 0;
  _$jscoverage['js/vs_fx.js'][646] = 0;
  _$jscoverage['js/vs_fx.js'][749] = 0;
  _$jscoverage['js/vs_fx.js'][751] = 0;
  _$jscoverage['js/vs_fx.js'][752] = 0;
  _$jscoverage['js/vs_fx.js'][753] = 0;
  _$jscoverage['js/vs_fx.js'][754] = 0;
  _$jscoverage['js/vs_fx.js'][755] = 0;
  _$jscoverage['js/vs_fx.js'][756] = 0;
  _$jscoverage['js/vs_fx.js'][757] = 0;
  _$jscoverage['js/vs_fx.js'][759] = 0;
  _$jscoverage['js/vs_fx.js'][761] = 0;
  _$jscoverage['js/vs_fx.js'][762] = 0;
  _$jscoverage['js/vs_fx.js'][764] = 0;
  _$jscoverage['js/vs_fx.js'][765] = 0;
  _$jscoverage['js/vs_fx.js'][767] = 0;
  _$jscoverage['js/vs_fx.js'][768] = 0;
  _$jscoverage['js/vs_fx.js'][770] = 0;
  _$jscoverage['js/vs_fx.js'][772] = 0;
  _$jscoverage['js/vs_fx.js'][775] = 0;
  _$jscoverage['js/vs_fx.js'][776] = 0;
  _$jscoverage['js/vs_fx.js'][810] = 0;
  _$jscoverage['js/vs_fx.js'][811] = 0;
  _$jscoverage['js/vs_fx.js'][813] = 0;
  _$jscoverage['js/vs_fx.js'][814] = 0;
  _$jscoverage['js/vs_fx.js'][816] = 0;
  _$jscoverage['js/vs_fx.js'][818] = 0;
  _$jscoverage['js/vs_fx.js'][819] = 0;
  _$jscoverage['js/vs_fx.js'][821] = 0;
  _$jscoverage['js/vs_fx.js'][823] = 0;
  _$jscoverage['js/vs_fx.js'][853] = 0;
  _$jscoverage['js/vs_fx.js'][869] = 0;
  _$jscoverage['js/vs_fx.js'][870] = 0;
  _$jscoverage['js/vs_fx.js'][871] = 0;
  _$jscoverage['js/vs_fx.js'][873] = 0;
  _$jscoverage['js/vs_fx.js'][874] = 0;
  _$jscoverage['js/vs_fx.js'][875] = 0;
  _$jscoverage['js/vs_fx.js'][876] = 0;
  _$jscoverage['js/vs_fx.js'][877] = 0;
  _$jscoverage['js/vs_fx.js'][878] = 0;
  _$jscoverage['js/vs_fx.js'][879] = 0;
  _$jscoverage['js/vs_fx.js'][880] = 0;
  _$jscoverage['js/vs_fx.js'][881] = 0;
  _$jscoverage['js/vs_fx.js'][882] = 0;
  _$jscoverage['js/vs_fx.js'][883] = 0;
  _$jscoverage['js/vs_fx.js'][884] = 0;
  _$jscoverage['js/vs_fx.js'][885] = 0;
  _$jscoverage['js/vs_fx.js'][886] = 0;
  _$jscoverage['js/vs_fx.js'][888] = 0;
  _$jscoverage['js/vs_fx.js'][890] = 0;
  _$jscoverage['js/vs_fx.js'][891] = 0;
  _$jscoverage['js/vs_fx.js'][892] = 0;
  _$jscoverage['js/vs_fx.js'][893] = 0;
  _$jscoverage['js/vs_fx.js'][897] = 0;
  _$jscoverage['js/vs_fx.js'][898] = 0;
  _$jscoverage['js/vs_fx.js'][900] = 0;
  _$jscoverage['js/vs_fx.js'][916] = 0;
  _$jscoverage['js/vs_fx.js'][919] = 0;
  _$jscoverage['js/vs_fx.js'][925] = 0;
  _$jscoverage['js/vs_fx.js'][935] = 0;
  _$jscoverage['js/vs_fx.js'][937] = 0;
  _$jscoverage['js/vs_fx.js'][945] = 0;
  _$jscoverage['js/vs_fx.js'][946] = 0;
  _$jscoverage['js/vs_fx.js'][948] = 0;
  _$jscoverage['js/vs_fx.js'][960] = 0;
  _$jscoverage['js/vs_fx.js'][962] = 0;
  _$jscoverage['js/vs_fx.js'][970] = 0;
  _$jscoverage['js/vs_fx.js'][971] = 0;
  _$jscoverage['js/vs_fx.js'][973] = 0;
  _$jscoverage['js/vs_fx.js'][988] = 0;
  _$jscoverage['js/vs_fx.js'][996] = 0;
  _$jscoverage['js/vs_fx.js'][1004] = 0;
  _$jscoverage['js/vs_fx.js'][1012] = 0;
  _$jscoverage['js/vs_fx.js'][1020] = 0;
  _$jscoverage['js/vs_fx.js'][1052] = 0;
  _$jscoverage['js/vs_fx.js'][1054] = 0;
  _$jscoverage['js/vs_fx.js'][1055] = 0;
  _$jscoverage['js/vs_fx.js'][1057] = 0;
  _$jscoverage['js/vs_fx.js'][1061] = 0;
  _$jscoverage['js/vs_fx.js'][1062] = 0;
  _$jscoverage['js/vs_fx.js'][1064] = 0;
  _$jscoverage['js/vs_fx.js'][1066] = 0;
  _$jscoverage['js/vs_fx.js'][1067] = 0;
  _$jscoverage['js/vs_fx.js'][1068] = 0;
  _$jscoverage['js/vs_fx.js'][1070] = 0;
  _$jscoverage['js/vs_fx.js'][1073] = 0;
  _$jscoverage['js/vs_fx.js'][1099] = 0;
  _$jscoverage['js/vs_fx.js'][1124] = 0;
  _$jscoverage['js/vs_fx.js'][1126] = 0;
  _$jscoverage['js/vs_fx.js'][1127] = 0;
  _$jscoverage['js/vs_fx.js'][1129] = 0;
  _$jscoverage['js/vs_fx.js'][1133] = 0;
  _$jscoverage['js/vs_fx.js'][1135] = 0;
  _$jscoverage['js/vs_fx.js'][1137] = 0;
  _$jscoverage['js/vs_fx.js'][1140] = 0;
  _$jscoverage['js/vs_fx.js'][1150] = 0;
  _$jscoverage['js/vs_fx.js'][1173] = 0;
  _$jscoverage['js/vs_fx.js'][1175] = 0;
  _$jscoverage['js/vs_fx.js'][1176] = 0;
  _$jscoverage['js/vs_fx.js'][1178] = 0;
  _$jscoverage['js/vs_fx.js'][1182] = 0;
  _$jscoverage['js/vs_fx.js'][1185] = 0;
  _$jscoverage['js/vs_fx.js'][1186] = 0;
  _$jscoverage['js/vs_fx.js'][1187] = 0;
  _$jscoverage['js/vs_fx.js'][1189] = 0;
  _$jscoverage['js/vs_fx.js'][1192] = 0;
  _$jscoverage['js/vs_fx.js'][1218] = 0;
  _$jscoverage['js/vs_fx.js'][1242] = 0;
  _$jscoverage['js/vs_fx.js'][1244] = 0;
  _$jscoverage['js/vs_fx.js'][1245] = 0;
  _$jscoverage['js/vs_fx.js'][1247] = 0;
  _$jscoverage['js/vs_fx.js'][1251] = 0;
  _$jscoverage['js/vs_fx.js'][1253] = 0;
  _$jscoverage['js/vs_fx.js'][1254] = 0;
  _$jscoverage['js/vs_fx.js'][1255] = 0;
  _$jscoverage['js/vs_fx.js'][1257] = 0;
  _$jscoverage['js/vs_fx.js'][1260] = 0;
  _$jscoverage['js/vs_fx.js'][1278] = 0;
  _$jscoverage['js/vs_fx.js'][1303] = 0;
  _$jscoverage['js/vs_fx.js'][1305] = 0;
  _$jscoverage['js/vs_fx.js'][1306] = 0;
  _$jscoverage['js/vs_fx.js'][1308] = 0;
  _$jscoverage['js/vs_fx.js'][1312] = 0;
  _$jscoverage['js/vs_fx.js'][1314] = 0;
  _$jscoverage['js/vs_fx.js'][1315] = 0;
  _$jscoverage['js/vs_fx.js'][1317] = 0;
  _$jscoverage['js/vs_fx.js'][1320] = 0;
  _$jscoverage['js/vs_fx.js'][1338] = 0;
  _$jscoverage['js/vs_fx.js'][1367] = 0;
  _$jscoverage['js/vs_fx.js'][1369] = 0;
  _$jscoverage['js/vs_fx.js'][1370] = 0;
  _$jscoverage['js/vs_fx.js'][1372] = 0;
  _$jscoverage['js/vs_fx.js'][1376] = 0;
  _$jscoverage['js/vs_fx.js'][1378] = 0;
  _$jscoverage['js/vs_fx.js'][1380] = 0;
  _$jscoverage['js/vs_fx.js'][1383] = 0;
  _$jscoverage['js/vs_fx.js'][1393] = 0;
  _$jscoverage['js/vs_fx.js'][1404] = 0;
  _$jscoverage['js/vs_fx.js'][1405] = 0;
  _$jscoverage['js/vs_fx.js'][1411] = 0;
  _$jscoverage['js/vs_fx.js'][1412] = 0;
  _$jscoverage['js/vs_fx.js'][1419] = 0;
  _$jscoverage['js/vs_fx.js'][1420] = 0;
  _$jscoverage['js/vs_fx.js'][1427] = 0;
  _$jscoverage['js/vs_fx.js'][1428] = 0;
  _$jscoverage['js/vs_fx.js'][1435] = 0;
  _$jscoverage['js/vs_fx.js'][1436] = 0;
  _$jscoverage['js/vs_fx.js'][1443] = 0;
  _$jscoverage['js/vs_fx.js'][1444] = 0;
  _$jscoverage['js/vs_fx.js'][1451] = 0;
  _$jscoverage['js/vs_fx.js'][1452] = 0;
  _$jscoverage['js/vs_fx.js'][1459] = 0;
  _$jscoverage['js/vs_fx.js'][1460] = 0;
  _$jscoverage['js/vs_fx.js'][1467] = 0;
  _$jscoverage['js/vs_fx.js'][1468] = 0;
  _$jscoverage['js/vs_fx.js'][1475] = 0;
  _$jscoverage['js/vs_fx.js'][1476] = 0;
  _$jscoverage['js/vs_fx.js'][1482] = 0;
  _$jscoverage['js/vs_fx.js'][1483] = 0;
  _$jscoverage['js/vs_fx.js'][1484] = 0;
  _$jscoverage['js/vs_fx.js'][1485] = 0;
  _$jscoverage['js/vs_fx.js'][1486] = 0;
  _$jscoverage['js/vs_fx.js'][1487] = 0;
  _$jscoverage['js/vs_fx.js'][1488] = 0;
  _$jscoverage['js/vs_fx.js'][1489] = 0;
  _$jscoverage['js/vs_fx.js'][1588] = 0;
  _$jscoverage['js/vs_fx.js'][1590] = 0;
  _$jscoverage['js/vs_fx.js'][1591] = 0;
  _$jscoverage['js/vs_fx.js'][1592] = 0;
  _$jscoverage['js/vs_fx.js'][1594] = 0;
  _$jscoverage['js/vs_fx.js'][1596] = 0;
  _$jscoverage['js/vs_fx.js'][1599] = 0;
  _$jscoverage['js/vs_fx.js'][1600] = 0;
  _$jscoverage['js/vs_fx.js'][1604] = 0;
  _$jscoverage['js/vs_fx.js'][1640] = 0;
  _$jscoverage['js/vs_fx.js'][1642] = 0;
  _$jscoverage['js/vs_fx.js'][1644] = 0;
  _$jscoverage['js/vs_fx.js'][1645] = 0;
  _$jscoverage['js/vs_fx.js'][1648] = 0;
  _$jscoverage['js/vs_fx.js'][1650] = 0;
  _$jscoverage['js/vs_fx.js'][1651] = 0;
  _$jscoverage['js/vs_fx.js'][1660] = 0;
  _$jscoverage['js/vs_fx.js'][1662] = 0;
  _$jscoverage['js/vs_fx.js'][1664] = 0;
  _$jscoverage['js/vs_fx.js'][1666] = 0;
  _$jscoverage['js/vs_fx.js'][1667] = 0;
  _$jscoverage['js/vs_fx.js'][1669] = 0;
  _$jscoverage['js/vs_fx.js'][1671] = 0;
  _$jscoverage['js/vs_fx.js'][1672] = 0;
  _$jscoverage['js/vs_fx.js'][1674] = 0;
  _$jscoverage['js/vs_fx.js'][1676] = 0;
  _$jscoverage['js/vs_fx.js'][1677] = 0;
  _$jscoverage['js/vs_fx.js'][1691] = 0;
  _$jscoverage['js/vs_fx.js'][1693] = 0;
  _$jscoverage['js/vs_fx.js'][1694] = 0;
  _$jscoverage['js/vs_fx.js'][1696] = 0;
  _$jscoverage['js/vs_fx.js'][1700] = 0;
  _$jscoverage['js/vs_fx.js'][1719] = 0;
  _$jscoverage['js/vs_fx.js'][1721] = 0;
  _$jscoverage['js/vs_fx.js'][1722] = 0;
  _$jscoverage['js/vs_fx.js'][1724] = 0;
  _$jscoverage['js/vs_fx.js'][1734] = 0;
  _$jscoverage['js/vs_fx.js'][1735] = 0;
  _$jscoverage['js/vs_fx.js'][1766] = 0;
  _$jscoverage['js/vs_fx.js'][1767] = 0;
  _$jscoverage['js/vs_fx.js'][1769] = 0;
  _$jscoverage['js/vs_fx.js'][1770] = 0;
  _$jscoverage['js/vs_fx.js'][1771] = 0;
  _$jscoverage['js/vs_fx.js'][1772] = 0;
  _$jscoverage['js/vs_fx.js'][1773] = 0;
  _$jscoverage['js/vs_fx.js'][1774] = 0;
  _$jscoverage['js/vs_fx.js'][1776] = 0;
  _$jscoverage['js/vs_fx.js'][1777] = 0;
  _$jscoverage['js/vs_fx.js'][1779] = 0;
  _$jscoverage['js/vs_fx.js'][1780] = 0;
  _$jscoverage['js/vs_fx.js'][1781] = 0;
  _$jscoverage['js/vs_fx.js'][1783] = 0;
  _$jscoverage['js/vs_fx.js'][1785] = 0;
  _$jscoverage['js/vs_fx.js'][1787] = 0;
  _$jscoverage['js/vs_fx.js'][1788] = 0;
  _$jscoverage['js/vs_fx.js'][1790] = 0;
  _$jscoverage['js/vs_fx.js'][1791] = 0;
  _$jscoverage['js/vs_fx.js'][1793] = 0;
  _$jscoverage['js/vs_fx.js'][1797] = 0;
  _$jscoverage['js/vs_fx.js'][1799] = 0;
  _$jscoverage['js/vs_fx.js'][1818] = 0;
  _$jscoverage['js/vs_fx.js'][1820] = 0;
  _$jscoverage['js/vs_fx.js'][1821] = 0;
  _$jscoverage['js/vs_fx.js'][1822] = 0;
  _$jscoverage['js/vs_fx.js'][1823] = 0;
  _$jscoverage['js/vs_fx.js'][1824] = 0;
  _$jscoverage['js/vs_fx.js'][1826] = 0;
  _$jscoverage['js/vs_fx.js'][1827] = 0;
  _$jscoverage['js/vs_fx.js'][1829] = 0;
  _$jscoverage['js/vs_fx.js'][1831] = 0;
  _$jscoverage['js/vs_fx.js'][1850] = 0;
  _$jscoverage['js/vs_fx.js'][1851] = 0;
  _$jscoverage['js/vs_fx.js'][1853] = 0;
  _$jscoverage['js/vs_fx.js'][1854] = 0;
  _$jscoverage['js/vs_fx.js'][1856] = 0;
  _$jscoverage['js/vs_fx.js'][1857] = 0;
  _$jscoverage['js/vs_fx.js'][1859] = 0;
  _$jscoverage['js/vs_fx.js'][1861] = 0;
  _$jscoverage['js/vs_fx.js'][1862] = 0;
  _$jscoverage['js/vs_fx.js'][1866] = 0;
  _$jscoverage['js/vs_fx.js'][1867] = 0;
  _$jscoverage['js/vs_fx.js'][1868] = 0;
  _$jscoverage['js/vs_fx.js'][1870] = 0;
  _$jscoverage['js/vs_fx.js'][1896] = 0;
  _$jscoverage['js/vs_fx.js'][1898] = 0;
  _$jscoverage['js/vs_fx.js'][1899] = 0;
  _$jscoverage['js/vs_fx.js'][1900] = 0;
  _$jscoverage['js/vs_fx.js'][1902] = 0;
  _$jscoverage['js/vs_fx.js'][1904] = 0;
  _$jscoverage['js/vs_fx.js'][1907] = 0;
  _$jscoverage['js/vs_fx.js'][1909] = 0;
  _$jscoverage['js/vs_fx.js'][1911] = 0;
  _$jscoverage['js/vs_fx.js'][1912] = 0;
  _$jscoverage['js/vs_fx.js'][1914] = 0;
  _$jscoverage['js/vs_fx.js'][1915] = 0;
  _$jscoverage['js/vs_fx.js'][1925] = 0;
  _$jscoverage['js/vs_fx.js'][1927] = 0;
  _$jscoverage['js/vs_fx.js'][1929] = 0;
  _$jscoverage['js/vs_fx.js'][1931] = 0;
  _$jscoverage['js/vs_fx.js'][1933] = 0;
  _$jscoverage['js/vs_fx.js'][1935] = 0;
  _$jscoverage['js/vs_fx.js'][1936] = 0;
  _$jscoverage['js/vs_fx.js'][1938] = 0;
  _$jscoverage['js/vs_fx.js'][1940] = 0;
  _$jscoverage['js/vs_fx.js'][1942] = 0;
  _$jscoverage['js/vs_fx.js'][1946] = 0;
  _$jscoverage['js/vs_fx.js'][1948] = 0;
  _$jscoverage['js/vs_fx.js'][1949] = 0;
  _$jscoverage['js/vs_fx.js'][1951] = 0;
  _$jscoverage['js/vs_fx.js'][1952] = 0;
  _$jscoverage['js/vs_fx.js'][1954] = 0;
  _$jscoverage['js/vs_fx.js'][1956] = 0;
  _$jscoverage['js/vs_fx.js'][1958] = 0;
  _$jscoverage['js/vs_fx.js'][1959] = 0;
  _$jscoverage['js/vs_fx.js'][1961] = 0;
  _$jscoverage['js/vs_fx.js'][1963] = 0;
  _$jscoverage['js/vs_fx.js'][1964] = 0;
  _$jscoverage['js/vs_fx.js'][1967] = 0;
  _$jscoverage['js/vs_fx.js'][1969] = 0;
  _$jscoverage['js/vs_fx.js'][1971] = 0;
  _$jscoverage['js/vs_fx.js'][1973] = 0;
  _$jscoverage['js/vs_fx.js'][1977] = 0;
  _$jscoverage['js/vs_fx.js'][1978] = 0;
  _$jscoverage['js/vs_fx.js'][1980] = 0;
  _$jscoverage['js/vs_fx.js'][1982] = 0;
  _$jscoverage['js/vs_fx.js'][1983] = 0;
  _$jscoverage['js/vs_fx.js'][1986] = 0;
  _$jscoverage['js/vs_fx.js'][1988] = 0;
  _$jscoverage['js/vs_fx.js'][2014] = 0;
  _$jscoverage['js/vs_fx.js'][2016] = 0;
  _$jscoverage['js/vs_fx.js'][2018] = 0;
  _$jscoverage['js/vs_fx.js'][2020] = 0;
  _$jscoverage['js/vs_fx.js'][2021] = 0;
  _$jscoverage['js/vs_fx.js'][2023] = 0;
  _$jscoverage['js/vs_fx.js'][2024] = 0;
  _$jscoverage['js/vs_fx.js'][2027] = 0;
  _$jscoverage['js/vs_fx.js'][2028] = 0;
  _$jscoverage['js/vs_fx.js'][2030] = 0;
  _$jscoverage['js/vs_fx.js'][2056] = 0;
  _$jscoverage['js/vs_fx.js'][2058] = 0;
  _$jscoverage['js/vs_fx.js'][2075] = 0;
  _$jscoverage['js/vs_fx.js'][2077] = 0;
  _$jscoverage['js/vs_fx.js'][2081] = 0;
  _$jscoverage['js/vs_fx.js'][2083] = 0;
  _$jscoverage['js/vs_fx.js'][2086] = 0;
  _$jscoverage['js/vs_fx.js'][2087] = 0;
  _$jscoverage['js/vs_fx.js'][2089] = 0;
  _$jscoverage['js/vs_fx.js'][2091] = 0;
  _$jscoverage['js/vs_fx.js'][2092] = 0;
  _$jscoverage['js/vs_fx.js'][2097] = 0;
  _$jscoverage['js/vs_fx.js'][2099] = 0;
  _$jscoverage['js/vs_fx.js'][2101] = 0;
  _$jscoverage['js/vs_fx.js'][2104] = 0;
  _$jscoverage['js/vs_fx.js'][2107] = 0;
  _$jscoverage['js/vs_fx.js'][2109] = 0;
  _$jscoverage['js/vs_fx.js'][2112] = 0;
  _$jscoverage['js/vs_fx.js'][2114] = 0;
  _$jscoverage['js/vs_fx.js'][2118] = 0;
  _$jscoverage['js/vs_fx.js'][2123] = 0;
  _$jscoverage['js/vs_fx.js'][2125] = 0;
  _$jscoverage['js/vs_fx.js'][2126] = 0;
  _$jscoverage['js/vs_fx.js'][2128] = 0;
  _$jscoverage['js/vs_fx.js'][2130] = 0;
  _$jscoverage['js/vs_fx.js'][2131] = 0;
  _$jscoverage['js/vs_fx.js'][2132] = 0;
  _$jscoverage['js/vs_fx.js'][2133] = 0;
  _$jscoverage['js/vs_fx.js'][2144] = 0;
  _$jscoverage['js/vs_fx.js'][2146] = 0;
  _$jscoverage['js/vs_fx.js'][2150] = 0;
  _$jscoverage['js/vs_fx.js'][2152] = 0;
  _$jscoverage['js/vs_fx.js'][2153] = 0;
  _$jscoverage['js/vs_fx.js'][2155] = 0;
  _$jscoverage['js/vs_fx.js'][2157] = 0;
  _$jscoverage['js/vs_fx.js'][2158] = 0;
  _$jscoverage['js/vs_fx.js'][2159] = 0;
  _$jscoverage['js/vs_fx.js'][2160] = 0;
  _$jscoverage['js/vs_fx.js'][2184] = 0;
  _$jscoverage['js/vs_fx.js'][2186] = 0;
  _$jscoverage['js/vs_fx.js'][2188] = 0;
  _$jscoverage['js/vs_fx.js'][2189] = 0;
  _$jscoverage['js/vs_fx.js'][2193] = 0;
  _$jscoverage['js/vs_fx.js'][2195] = 0;
  _$jscoverage['js/vs_fx.js'][2197] = 0;
  _$jscoverage['js/vs_fx.js'][2200] = 0;
  _$jscoverage['js/vs_fx.js'][2201] = 0;
  _$jscoverage['js/vs_fx.js'][2205] = 0;
  _$jscoverage['js/vs_fx.js'][2208] = 0;
  _$jscoverage['js/vs_fx.js'][2209] = 0;
  _$jscoverage['js/vs_fx.js'][2211] = 0;
  _$jscoverage['js/vs_fx.js'][2213] = 0;
  _$jscoverage['js/vs_fx.js'][2215] = 0;
  _$jscoverage['js/vs_fx.js'][2217] = 0;
  _$jscoverage['js/vs_fx.js'][2219] = 0;
  _$jscoverage['js/vs_fx.js'][2221] = 0;
  _$jscoverage['js/vs_fx.js'][2223] = 0;
  _$jscoverage['js/vs_fx.js'][2228] = 0;
  _$jscoverage['js/vs_fx.js'][2233] = 0;
  _$jscoverage['js/vs_fx.js'][2235] = 0;
  _$jscoverage['js/vs_fx.js'][2242] = 0;
  _$jscoverage['js/vs_fx.js'][2245] = 0;
  _$jscoverage['js/vs_fx.js'][2247] = 0;
  _$jscoverage['js/vs_fx.js'][2248] = 0;
  _$jscoverage['js/vs_fx.js'][2250] = 0;
  _$jscoverage['js/vs_fx.js'][2252] = 0;
  _$jscoverage['js/vs_fx.js'][2254] = 0;
  _$jscoverage['js/vs_fx.js'][2258] = 0;
  _$jscoverage['js/vs_fx.js'][2267] = 0;
  _$jscoverage['js/vs_fx.js'][2268] = 0;
  _$jscoverage['js/vs_fx.js'][2284] = 0;
  _$jscoverage['js/vs_fx.js'][2286] = 0;
  _$jscoverage['js/vs_fx.js'][2289] = 0;
  _$jscoverage['js/vs_fx.js'][2295] = 0;
  _$jscoverage['js/vs_fx.js'][2310] = 0;
  _$jscoverage['js/vs_fx.js'][2312] = 0;
  _$jscoverage['js/vs_fx.js'][2313] = 0;
  _$jscoverage['js/vs_fx.js'][2316] = 0;
  _$jscoverage['js/vs_fx.js'][2319] = 0;
  _$jscoverage['js/vs_fx.js'][2320] = 0;
  _$jscoverage['js/vs_fx.js'][2322] = 0;
  _$jscoverage['js/vs_fx.js'][2330] = 0;
  _$jscoverage['js/vs_fx.js'][2352] = 0;
  _$jscoverage['js/vs_fx.js'][2360] = 0;
  _$jscoverage['js/vs_fx.js'][2402] = 0;
  _$jscoverage['js/vs_fx.js'][2404] = 0;
  _$jscoverage['js/vs_fx.js'][2405] = 0;
  _$jscoverage['js/vs_fx.js'][2406] = 0;
  _$jscoverage['js/vs_fx.js'][2408] = 0;
  _$jscoverage['js/vs_fx.js'][2410] = 0;
  _$jscoverage['js/vs_fx.js'][2411] = 0;
  _$jscoverage['js/vs_fx.js'][2412] = 0;
  _$jscoverage['js/vs_fx.js'][2414] = 0;
  _$jscoverage['js/vs_fx.js'][2421] = 0;
  _$jscoverage['js/vs_fx.js'][2428] = 0;
  _$jscoverage['js/vs_fx.js'][2435] = 0;
  _$jscoverage['js/vs_fx.js'][2442] = 0;
  _$jscoverage['js/vs_fx.js'][2444] = 0;
  _$jscoverage['js/vs_fx.js'][2509] = 0;
  _$jscoverage['js/vs_fx.js'][2511] = 0;
  _$jscoverage['js/vs_fx.js'][2520] = 0;
  _$jscoverage['js/vs_fx.js'][2522] = 0;
  _$jscoverage['js/vs_fx.js'][2523] = 0;
  _$jscoverage['js/vs_fx.js'][2558] = 0;
  _$jscoverage['js/vs_fx.js'][2559] = 0;
  _$jscoverage['js/vs_fx.js'][2561] = 0;
  _$jscoverage['js/vs_fx.js'][2563] = 0;
  _$jscoverage['js/vs_fx.js'][2565] = 0;
  _$jscoverage['js/vs_fx.js'][2566] = 0;
  _$jscoverage['js/vs_fx.js'][2569] = 0;
  _$jscoverage['js/vs_fx.js'][2571] = 0;
  _$jscoverage['js/vs_fx.js'][2572] = 0;
  _$jscoverage['js/vs_fx.js'][2574] = 0;
  _$jscoverage['js/vs_fx.js'][2577] = 0;
  _$jscoverage['js/vs_fx.js'][2578] = 0;
  _$jscoverage['js/vs_fx.js'][2579] = 0;
  _$jscoverage['js/vs_fx.js'][2583] = 0;
  _$jscoverage['js/vs_fx.js'][2585] = 0;
  _$jscoverage['js/vs_fx.js'][2586] = 0;
  _$jscoverage['js/vs_fx.js'][2588] = 0;
  _$jscoverage['js/vs_fx.js'][2589] = 0;
  _$jscoverage['js/vs_fx.js'][2591] = 0;
  _$jscoverage['js/vs_fx.js'][2593] = 0;
  _$jscoverage['js/vs_fx.js'][2596] = 0;
  _$jscoverage['js/vs_fx.js'][2597] = 0;
  _$jscoverage['js/vs_fx.js'][2598] = 0;
  _$jscoverage['js/vs_fx.js'][2600] = 0;
  _$jscoverage['js/vs_fx.js'][2602] = 0;
  _$jscoverage['js/vs_fx.js'][2605] = 0;
  _$jscoverage['js/vs_fx.js'][2608] = 0;
  _$jscoverage['js/vs_fx.js'][2609] = 0;
  _$jscoverage['js/vs_fx.js'][2635] = 0;
  _$jscoverage['js/vs_fx.js'][2637] = 0;
  _$jscoverage['js/vs_fx.js'][2638] = 0;
  _$jscoverage['js/vs_fx.js'][2639] = 0;
  _$jscoverage['js/vs_fx.js'][2640] = 0;
  _$jscoverage['js/vs_fx.js'][2641] = 0;
  _$jscoverage['js/vs_fx.js'][2643] = 0;
  _$jscoverage['js/vs_fx.js'][2644] = 0;
  _$jscoverage['js/vs_fx.js'][2646] = 0;
  _$jscoverage['js/vs_fx.js'][2647] = 0;
  _$jscoverage['js/vs_fx.js'][2648] = 0;
  _$jscoverage['js/vs_fx.js'][2650] = 0;
  _$jscoverage['js/vs_fx.js'][2652] = 0;
  _$jscoverage['js/vs_fx.js'][2653] = 0;
  _$jscoverage['js/vs_fx.js'][2655] = 0;
  _$jscoverage['js/vs_fx.js'][2657] = 0;
  _$jscoverage['js/vs_fx.js'][2660] = 0;
  _$jscoverage['js/vs_fx.js'][2662] = 0;
  _$jscoverage['js/vs_fx.js'][2663] = 0;
  _$jscoverage['js/vs_fx.js'][2665] = 0;
  _$jscoverage['js/vs_fx.js'][2666] = 0;
  _$jscoverage['js/vs_fx.js'][2670] = 0;
  _$jscoverage['js/vs_fx.js'][2672] = 0;
  _$jscoverage['js/vs_fx.js'][2673] = 0;
  _$jscoverage['js/vs_fx.js'][2676] = 0;
  _$jscoverage['js/vs_fx.js'][2678] = 0;
  _$jscoverage['js/vs_fx.js'][2680] = 0;
  _$jscoverage['js/vs_fx.js'][2682] = 0;
  _$jscoverage['js/vs_fx.js'][2686] = 0;
  _$jscoverage['js/vs_fx.js'][2687] = 0;
  _$jscoverage['js/vs_fx.js'][2692] = 0;
  _$jscoverage['js/vs_fx.js'][2695] = 0;
  _$jscoverage['js/vs_fx.js'][2706] = 0;
  _$jscoverage['js/vs_fx.js'][2723] = 0;
  _$jscoverage['js/vs_fx.js'][2724] = 0;
  _$jscoverage['js/vs_fx.js'][2726] = 0;
  _$jscoverage['js/vs_fx.js'][2739] = 0;
  _$jscoverage['js/vs_fx.js'][2740] = 0;
  _$jscoverage['js/vs_fx.js'][2742] = 0;
  _$jscoverage['js/vs_fx.js'][2743] = 0;
  _$jscoverage['js/vs_fx.js'][2745] = 0;
  _$jscoverage['js/vs_fx.js'][2747] = 0;
  _$jscoverage['js/vs_fx.js'][2749] = 0;
  _$jscoverage['js/vs_fx.js'][2750] = 0;
  _$jscoverage['js/vs_fx.js'][2752] = 0;
  _$jscoverage['js/vs_fx.js'][2756] = 0;
  _$jscoverage['js/vs_fx.js'][2758] = 0;
  _$jscoverage['js/vs_fx.js'][2759] = 0;
  _$jscoverage['js/vs_fx.js'][2761] = 0;
  _$jscoverage['js/vs_fx.js'][2775] = 0;
  _$jscoverage['js/vs_fx.js'][2788] = 0;
  _$jscoverage['js/vs_fx.js'][2801] = 0;
  _$jscoverage['js/vs_fx.js'][2811] = 0;
  _$jscoverage['js/vs_fx.js'][2817] = 0;
  _$jscoverage['js/vs_fx.js'][2828] = 0;
  _$jscoverage['js/vs_fx.js'][2829] = 0;
  _$jscoverage['js/vs_fx.js'][2830] = 0;
  _$jscoverage['js/vs_fx.js'][2832] = 0;
  _$jscoverage['js/vs_fx.js'][2833] = 0;
  _$jscoverage['js/vs_fx.js'][2835] = 0;
  _$jscoverage['js/vs_fx.js'][2836] = 0;
  _$jscoverage['js/vs_fx.js'][2838] = 0;
  _$jscoverage['js/vs_fx.js'][2847] = 0;
  _$jscoverage['js/vs_fx.js'][2849] = 0;
  _$jscoverage['js/vs_fx.js'][2851] = 0;
  _$jscoverage['js/vs_fx.js'][2862] = 0;
  _$jscoverage['js/vs_fx.js'][2864] = 0;
  _$jscoverage['js/vs_fx.js'][2865] = 0;
  _$jscoverage['js/vs_fx.js'][2867] = 0;
  _$jscoverage['js/vs_fx.js'][2869] = 0;
  _$jscoverage['js/vs_fx.js'][2870] = 0;
  _$jscoverage['js/vs_fx.js'][2871] = 0;
  _$jscoverage['js/vs_fx.js'][2873] = 0;
  _$jscoverage['js/vs_fx.js'][2877] = 0;
  _$jscoverage['js/vs_fx.js'][2878] = 0;
  _$jscoverage['js/vs_fx.js'][2880] = 0;
  _$jscoverage['js/vs_fx.js'][2882] = 0;
  _$jscoverage['js/vs_fx.js'][2883] = 0;
  _$jscoverage['js/vs_fx.js'][2885] = 0;
  _$jscoverage['js/vs_fx.js'][2896] = 0;
  _$jscoverage['js/vs_fx.js'][2907] = 0;
  _$jscoverage['js/vs_fx.js'][2908] = 0;
  _$jscoverage['js/vs_fx.js'][2910] = 0;
  _$jscoverage['js/vs_fx.js'][2918] = 0;
  _$jscoverage['js/vs_fx.js'][2995] = 0;
  _$jscoverage['js/vs_fx.js'][2997] = 0;
  _$jscoverage['js/vs_fx.js'][2998] = 0;
  _$jscoverage['js/vs_fx.js'][2999] = 0;
  _$jscoverage['js/vs_fx.js'][3001] = 0;
  _$jscoverage['js/vs_fx.js'][3003] = 0;
  _$jscoverage['js/vs_fx.js'][3004] = 0;
  _$jscoverage['js/vs_fx.js'][3005] = 0;
  _$jscoverage['js/vs_fx.js'][3007] = 0;
  _$jscoverage['js/vs_fx.js'][3015] = 0;
  _$jscoverage['js/vs_fx.js'][3023] = 0;
  _$jscoverage['js/vs_fx.js'][3031] = 0;
  _$jscoverage['js/vs_fx.js'][3033] = 0;
  _$jscoverage['js/vs_fx.js'][3082] = 0;
  _$jscoverage['js/vs_fx.js'][3083] = 0;
  _$jscoverage['js/vs_fx.js'][3085] = 0;
  _$jscoverage['js/vs_fx.js'][3086] = 0;
  _$jscoverage['js/vs_fx.js'][3087] = 0;
  _$jscoverage['js/vs_fx.js'][3088] = 0;
  _$jscoverage['js/vs_fx.js'][3090] = 0;
  _$jscoverage['js/vs_fx.js'][3092] = 0;
  _$jscoverage['js/vs_fx.js'][3093] = 0;
  _$jscoverage['js/vs_fx.js'][3094] = 0;
  _$jscoverage['js/vs_fx.js'][3095] = 0;
  _$jscoverage['js/vs_fx.js'][3099] = 0;
  _$jscoverage['js/vs_fx.js'][3101] = 0;
  _$jscoverage['js/vs_fx.js'][3103] = 0;
  _$jscoverage['js/vs_fx.js'][3105] = 0;
  _$jscoverage['js/vs_fx.js'][3108] = 0;
  _$jscoverage['js/vs_fx.js'][3110] = 0;
  _$jscoverage['js/vs_fx.js'][3111] = 0;
  _$jscoverage['js/vs_fx.js'][3113] = 0;
  _$jscoverage['js/vs_fx.js'][3115] = 0;
  _$jscoverage['js/vs_fx.js'][3118] = 0;
  _$jscoverage['js/vs_fx.js'][3120] = 0;
  _$jscoverage['js/vs_fx.js'][3122] = 0;
  _$jscoverage['js/vs_fx.js'][3124] = 0;
  _$jscoverage['js/vs_fx.js'][3128] = 0;
  _$jscoverage['js/vs_fx.js'][3129] = 0;
  _$jscoverage['js/vs_fx.js'][3130] = 0;
  _$jscoverage['js/vs_fx.js'][3133] = 0;
  _$jscoverage['js/vs_fx.js'][3134] = 0;
  _$jscoverage['js/vs_fx.js'][3165] = 0;
  _$jscoverage['js/vs_fx.js'][3166] = 0;
  _$jscoverage['js/vs_fx.js'][3168] = 0;
  _$jscoverage['js/vs_fx.js'][3170] = 0;
  _$jscoverage['js/vs_fx.js'][3172] = 0;
  _$jscoverage['js/vs_fx.js'][3173] = 0;
  _$jscoverage['js/vs_fx.js'][3176] = 0;
  _$jscoverage['js/vs_fx.js'][3178] = 0;
  _$jscoverage['js/vs_fx.js'][3179] = 0;
  _$jscoverage['js/vs_fx.js'][3181] = 0;
  _$jscoverage['js/vs_fx.js'][3184] = 0;
  _$jscoverage['js/vs_fx.js'][3186] = 0;
  _$jscoverage['js/vs_fx.js'][3192] = 0;
  _$jscoverage['js/vs_fx.js'][3193] = 0;
  _$jscoverage['js/vs_fx.js'][3195] = 0;
  _$jscoverage['js/vs_fx.js'][3196] = 0;
  _$jscoverage['js/vs_fx.js'][3198] = 0;
  _$jscoverage['js/vs_fx.js'][3200] = 0;
  _$jscoverage['js/vs_fx.js'][3202] = 0;
  _$jscoverage['js/vs_fx.js'][3205] = 0;
  _$jscoverage['js/vs_fx.js'][3206] = 0;
  _$jscoverage['js/vs_fx.js'][3207] = 0;
  _$jscoverage['js/vs_fx.js'][3209] = 0;
  _$jscoverage['js/vs_fx.js'][3211] = 0;
  _$jscoverage['js/vs_fx.js'][3214] = 0;
  _$jscoverage['js/vs_fx.js'][3215] = 0;
  _$jscoverage['js/vs_fx.js'][3216] = 0;
  _$jscoverage['js/vs_fx.js'][3220] = 0;
  _$jscoverage['js/vs_fx.js'][3222] = 0;
  _$jscoverage['js/vs_fx.js'][3223] = 0;
  _$jscoverage['js/vs_fx.js'][3227] = 0;
  _$jscoverage['js/vs_fx.js'][3228] = 0;
  _$jscoverage['js/vs_fx.js'][3237] = 0;
  _$jscoverage['js/vs_fx.js'][3238] = 0;
  _$jscoverage['js/vs_fx.js'][3239] = 0;
  _$jscoverage['js/vs_fx.js'][3241] = 0;
  _$jscoverage['js/vs_fx.js'][3243] = 0;
  _$jscoverage['js/vs_fx.js'][3245] = 0;
  _$jscoverage['js/vs_fx.js'][3248] = 0;
  _$jscoverage['js/vs_fx.js'][3249] = 0;
  _$jscoverage['js/vs_fx.js'][3261] = 0;
  _$jscoverage['js/vs_fx.js'][3264] = 0;
  _$jscoverage['js/vs_fx.js'][3266] = 0;
  _$jscoverage['js/vs_fx.js'][3268] = 0;
  _$jscoverage['js/vs_fx.js'][3269] = 0;
  _$jscoverage['js/vs_fx.js'][3271] = 0;
  _$jscoverage['js/vs_fx.js'][3275] = 0;
  _$jscoverage['js/vs_fx.js'][3276] = 0;
  _$jscoverage['js/vs_fx.js'][3278] = 0;
  _$jscoverage['js/vs_fx.js'][3281] = 0;
  _$jscoverage['js/vs_fx.js'][3282] = 0;
  _$jscoverage['js/vs_fx.js'][3284] = 0;
  _$jscoverage['js/vs_fx.js'][3285] = 0;
  _$jscoverage['js/vs_fx.js'][3287] = 0;
  _$jscoverage['js/vs_fx.js'][3289] = 0;
  _$jscoverage['js/vs_fx.js'][3290] = 0;
  _$jscoverage['js/vs_fx.js'][3292] = 0;
  _$jscoverage['js/vs_fx.js'][3293] = 0;
  _$jscoverage['js/vs_fx.js'][3295] = 0;
  _$jscoverage['js/vs_fx.js'][3299] = 0;
  _$jscoverage['js/vs_fx.js'][3300] = 0;
  _$jscoverage['js/vs_fx.js'][3302] = 0;
  _$jscoverage['js/vs_fx.js'][3305] = 0;
  _$jscoverage['js/vs_fx.js'][3307] = 0;
  _$jscoverage['js/vs_fx.js'][3309] = 0;
  _$jscoverage['js/vs_fx.js'][3311] = 0;
  _$jscoverage['js/vs_fx.js'][3313] = 0;
  _$jscoverage['js/vs_fx.js'][3315] = 0;
  _$jscoverage['js/vs_fx.js'][3317] = 0;
  _$jscoverage['js/vs_fx.js'][3319] = 0;
  _$jscoverage['js/vs_fx.js'][3320] = 0;
  _$jscoverage['js/vs_fx.js'][3324] = 0;
  _$jscoverage['js/vs_fx.js'][3325] = 0;
  _$jscoverage['js/vs_fx.js'][3329] = 0;
  _$jscoverage['js/vs_fx.js'][3330] = 0;
  _$jscoverage['js/vs_fx.js'][3340] = 0;
  _$jscoverage['js/vs_fx.js'][3341] = 0;
  _$jscoverage['js/vs_fx.js'][3452] = 0;
  _$jscoverage['js/vs_fx.js'][3458] = 0;
  _$jscoverage['js/vs_fx.js'][3469] = 0;
  _$jscoverage['js/vs_fx.js'][3471] = 0;
  _$jscoverage['js/vs_fx.js'][3472] = 0;
  _$jscoverage['js/vs_fx.js'][3474] = 0;
  _$jscoverage['js/vs_fx.js'][3475] = 0;
  _$jscoverage['js/vs_fx.js'][3484] = 0;
  _$jscoverage['js/vs_fx.js'][3495] = 0;
  _$jscoverage['js/vs_fx.js'][3496] = 0;
  _$jscoverage['js/vs_fx.js'][3498] = 0;
  _$jscoverage['js/vs_fx.js'][3499] = 0;
  _$jscoverage['js/vs_fx.js'][3500] = 0;
  _$jscoverage['js/vs_fx.js'][3501] = 0;
  _$jscoverage['js/vs_fx.js'][3509] = 0;
  _$jscoverage['js/vs_fx.js'][3631] = 0;
  _$jscoverage['js/vs_fx.js'][3633] = 0;
  _$jscoverage['js/vs_fx.js'][3634] = 0;
  _$jscoverage['js/vs_fx.js'][3635] = 0;
  _$jscoverage['js/vs_fx.js'][3637] = 0;
  _$jscoverage['js/vs_fx.js'][3639] = 0;
  _$jscoverage['js/vs_fx.js'][3642] = 0;
  _$jscoverage['js/vs_fx.js'][3645] = 0;
  _$jscoverage['js/vs_fx.js'][3647] = 0;
  _$jscoverage['js/vs_fx.js'][3649] = 0;
  _$jscoverage['js/vs_fx.js'][3661] = 0;
  _$jscoverage['js/vs_fx.js'][3668] = 0;
  _$jscoverage['js/vs_fx.js'][3677] = 0;
  _$jscoverage['js/vs_fx.js'][3684] = 0;
  _$jscoverage['js/vs_fx.js'][3690] = 0;
  _$jscoverage['js/vs_fx.js'][3692] = 0;
  _$jscoverage['js/vs_fx.js'][3722] = 0;
  _$jscoverage['js/vs_fx.js'][3731] = 0;
  _$jscoverage['js/vs_fx.js'][3733] = 0;
  _$jscoverage['js/vs_fx.js'][3735] = 0;
  _$jscoverage['js/vs_fx.js'][3736] = 0;
  _$jscoverage['js/vs_fx.js'][3737] = 0;
  _$jscoverage['js/vs_fx.js'][3738] = 0;
  _$jscoverage['js/vs_fx.js'][3751] = 0;
  _$jscoverage['js/vs_fx.js'][3753] = 0;
  _$jscoverage['js/vs_fx.js'][3762] = 0;
  _$jscoverage['js/vs_fx.js'][3763] = 0;
  _$jscoverage['js/vs_fx.js'][3772] = 0;
  _$jscoverage['js/vs_fx.js'][3774] = 0;
  _$jscoverage['js/vs_fx.js'][3775] = 0;
  _$jscoverage['js/vs_fx.js'][3815] = 0;
  _$jscoverage['js/vs_fx.js'][3816] = 0;
  _$jscoverage['js/vs_fx.js'][3818] = 0;
  _$jscoverage['js/vs_fx.js'][3820] = 0;
  _$jscoverage['js/vs_fx.js'][3822] = 0;
  _$jscoverage['js/vs_fx.js'][3823] = 0;
  _$jscoverage['js/vs_fx.js'][3825] = 0;
  _$jscoverage['js/vs_fx.js'][3828] = 0;
  _$jscoverage['js/vs_fx.js'][3842] = 0;
  _$jscoverage['js/vs_fx.js'][3844] = 0;
  _$jscoverage['js/vs_fx.js'][3845] = 0;
  _$jscoverage['js/vs_fx.js'][3847] = 0;
  _$jscoverage['js/vs_fx.js'][3849] = 0;
  _$jscoverage['js/vs_fx.js'][3850] = 0;
  _$jscoverage['js/vs_fx.js'][3852] = 0;
  _$jscoverage['js/vs_fx.js'][3853] = 0;
  _$jscoverage['js/vs_fx.js'][3856] = 0;
  _$jscoverage['js/vs_fx.js'][3857] = 0;
  _$jscoverage['js/vs_fx.js'][3859] = 0;
  _$jscoverage['js/vs_fx.js'][3860] = 0;
  _$jscoverage['js/vs_fx.js'][3862] = 0;
  _$jscoverage['js/vs_fx.js'][3863] = 0;
  _$jscoverage['js/vs_fx.js'][3865] = 0;
  _$jscoverage['js/vs_fx.js'][3869] = 0;
  _$jscoverage['js/vs_fx.js'][3870] = 0;
  _$jscoverage['js/vs_fx.js'][3872] = 0;
  _$jscoverage['js/vs_fx.js'][3892] = 0;
  _$jscoverage['js/vs_fx.js'][3893] = 0;
  _$jscoverage['js/vs_fx.js'][3894] = 0;
  _$jscoverage['js/vs_fx.js'][3896] = 0;
  _$jscoverage['js/vs_fx.js'][3898] = 0;
  _$jscoverage['js/vs_fx.js'][3900] = 0;
  _$jscoverage['js/vs_fx.js'][3903] = 0;
  _$jscoverage['js/vs_fx.js'][3906] = 0;
  _$jscoverage['js/vs_fx.js'][3907] = 0;
  _$jscoverage['js/vs_fx.js'][3908] = 0;
  _$jscoverage['js/vs_fx.js'][3909] = 0;
  _$jscoverage['js/vs_fx.js'][3911] = 0;
  _$jscoverage['js/vs_fx.js'][3913] = 0;
  _$jscoverage['js/vs_fx.js'][3916] = 0;
  _$jscoverage['js/vs_fx.js'][3919] = 0;
  _$jscoverage['js/vs_fx.js'][3920] = 0;
  _$jscoverage['js/vs_fx.js'][3924] = 0;
  _$jscoverage['js/vs_fx.js'][3927] = 0;
  _$jscoverage['js/vs_fx.js'][3930] = 0;
  _$jscoverage['js/vs_fx.js'][3931] = 0;
  _$jscoverage['js/vs_fx.js'][3946] = 0;
  _$jscoverage['js/vs_fx.js'][3948] = 0;
  _$jscoverage['js/vs_fx.js'][3966] = 0;
  _$jscoverage['js/vs_fx.js'][3969] = 0;
  _$jscoverage['js/vs_fx.js'][3971] = 0;
  _$jscoverage['js/vs_fx.js'][3976] = 0;
  _$jscoverage['js/vs_fx.js'][3982] = 0;
  _$jscoverage['js/vs_fx.js'][3992] = 0;
  _$jscoverage['js/vs_fx.js'][3993] = 0;
  _$jscoverage['js/vs_fx.js'][3994] = 0;
  _$jscoverage['js/vs_fx.js'][3996] = 0;
  _$jscoverage['js/vs_fx.js'][3997] = 0;
  _$jscoverage['js/vs_fx.js'][3999] = 0;
  _$jscoverage['js/vs_fx.js'][4000] = 0;
  _$jscoverage['js/vs_fx.js'][4002] = 0;
  _$jscoverage['js/vs_fx.js'][4011] = 0;
  _$jscoverage['js/vs_fx.js'][4013] = 0;
  _$jscoverage['js/vs_fx.js'][4015] = 0;
  _$jscoverage['js/vs_fx.js'][4028] = 0;
  _$jscoverage['js/vs_fx.js'][4030] = 0;
  _$jscoverage['js/vs_fx.js'][4031] = 0;
  _$jscoverage['js/vs_fx.js'][4034] = 0;
  _$jscoverage['js/vs_fx.js'][4037] = 0;
  _$jscoverage['js/vs_fx.js'][4038] = 0;
  _$jscoverage['js/vs_fx.js'][4040] = 0;
  _$jscoverage['js/vs_fx.js'][4041] = 0;
  _$jscoverage['js/vs_fx.js'][4042] = 0;
  _$jscoverage['js/vs_fx.js'][4044] = 0;
  _$jscoverage['js/vs_fx.js'][4053] = 0;
  _$jscoverage['js/vs_fx.js'][4061] = 0;
  _$jscoverage['js/vs_fx.js'][4158] = 0;
  _$jscoverage['js/vs_fx.js'][4160] = 0;
  _$jscoverage['js/vs_fx.js'][4161] = 0;
  _$jscoverage['js/vs_fx.js'][4162] = 0;
  _$jscoverage['js/vs_fx.js'][4164] = 0;
  _$jscoverage['js/vs_fx.js'][4166] = 0;
  _$jscoverage['js/vs_fx.js'][4167] = 0;
  _$jscoverage['js/vs_fx.js'][4169] = 0;
  _$jscoverage['js/vs_fx.js'][4177] = 0;
  _$jscoverage['js/vs_fx.js'][4184] = 0;
  _$jscoverage['js/vs_fx.js'][4191] = 0;
  _$jscoverage['js/vs_fx.js'][4198] = 0;
  _$jscoverage['js/vs_fx.js'][4205] = 0;
  _$jscoverage['js/vs_fx.js'][4207] = 0;
  _$jscoverage['js/vs_fx.js'][4244] = 0;
  _$jscoverage['js/vs_fx.js'][4245] = 0;
  _$jscoverage['js/vs_fx.js'][4247] = 0;
  _$jscoverage['js/vs_fx.js'][4249] = 0;
  _$jscoverage['js/vs_fx.js'][4250] = 0;
  _$jscoverage['js/vs_fx.js'][4252] = 0;
  _$jscoverage['js/vs_fx.js'][4254] = 0;
  _$jscoverage['js/vs_fx.js'][4255] = 0;
  _$jscoverage['js/vs_fx.js'][4257] = 0;
  _$jscoverage['js/vs_fx.js'][4259] = 0;
  _$jscoverage['js/vs_fx.js'][4260] = 0;
  _$jscoverage['js/vs_fx.js'][4264] = 0;
  _$jscoverage['js/vs_fx.js'][4265] = 0;
  _$jscoverage['js/vs_fx.js'][4300] = 0;
  _$jscoverage['js/vs_fx.js'][4301] = 0;
  _$jscoverage['js/vs_fx.js'][4303] = 0;
  _$jscoverage['js/vs_fx.js'][4305] = 0;
  _$jscoverage['js/vs_fx.js'][4307] = 0;
  _$jscoverage['js/vs_fx.js'][4308] = 0;
  _$jscoverage['js/vs_fx.js'][4311] = 0;
  _$jscoverage['js/vs_fx.js'][4313] = 0;
  _$jscoverage['js/vs_fx.js'][4314] = 0;
  _$jscoverage['js/vs_fx.js'][4316] = 0;
  _$jscoverage['js/vs_fx.js'][4319] = 0;
  _$jscoverage['js/vs_fx.js'][4321] = 0;
  _$jscoverage['js/vs_fx.js'][4327] = 0;
  _$jscoverage['js/vs_fx.js'][4328] = 0;
  _$jscoverage['js/vs_fx.js'][4330] = 0;
  _$jscoverage['js/vs_fx.js'][4331] = 0;
  _$jscoverage['js/vs_fx.js'][4333] = 0;
  _$jscoverage['js/vs_fx.js'][4335] = 0;
  _$jscoverage['js/vs_fx.js'][4337] = 0;
  _$jscoverage['js/vs_fx.js'][4340] = 0;
  _$jscoverage['js/vs_fx.js'][4341] = 0;
  _$jscoverage['js/vs_fx.js'][4342] = 0;
  _$jscoverage['js/vs_fx.js'][4344] = 0;
  _$jscoverage['js/vs_fx.js'][4346] = 0;
  _$jscoverage['js/vs_fx.js'][4349] = 0;
  _$jscoverage['js/vs_fx.js'][4350] = 0;
  _$jscoverage['js/vs_fx.js'][4351] = 0;
  _$jscoverage['js/vs_fx.js'][4355] = 0;
  _$jscoverage['js/vs_fx.js'][4357] = 0;
  _$jscoverage['js/vs_fx.js'][4358] = 0;
  _$jscoverage['js/vs_fx.js'][4362] = 0;
  _$jscoverage['js/vs_fx.js'][4363] = 0;
  _$jscoverage['js/vs_fx.js'][4372] = 0;
  _$jscoverage['js/vs_fx.js'][4373] = 0;
  _$jscoverage['js/vs_fx.js'][4374] = 0;
  _$jscoverage['js/vs_fx.js'][4375] = 0;
  _$jscoverage['js/vs_fx.js'][4376] = 0;
  _$jscoverage['js/vs_fx.js'][4378] = 0;
  _$jscoverage['js/vs_fx.js'][4380] = 0;
  _$jscoverage['js/vs_fx.js'][4382] = 0;
  _$jscoverage['js/vs_fx.js'][4384] = 0;
  _$jscoverage['js/vs_fx.js'][4386] = 0;
  _$jscoverage['js/vs_fx.js'][4390] = 0;
  _$jscoverage['js/vs_fx.js'][4392] = 0;
  _$jscoverage['js/vs_fx.js'][4393] = 0;
  _$jscoverage['js/vs_fx.js'][4395] = 0;
  _$jscoverage['js/vs_fx.js'][4396] = 0;
  _$jscoverage['js/vs_fx.js'][4405] = 0;
  _$jscoverage['js/vs_fx.js'][4407] = 0;
  _$jscoverage['js/vs_fx.js'][4409] = 0;
  _$jscoverage['js/vs_fx.js'][4412] = 0;
  _$jscoverage['js/vs_fx.js'][4413] = 0;
  _$jscoverage['js/vs_fx.js'][4415] = 0;
  _$jscoverage['js/vs_fx.js'][4419] = 0;
  _$jscoverage['js/vs_fx.js'][4420] = 0;
  _$jscoverage['js/vs_fx.js'][4422] = 0;
  _$jscoverage['js/vs_fx.js'][4425] = 0;
  _$jscoverage['js/vs_fx.js'][4426] = 0;
  _$jscoverage['js/vs_fx.js'][4428] = 0;
  _$jscoverage['js/vs_fx.js'][4430] = 0;
  _$jscoverage['js/vs_fx.js'][4431] = 0;
  _$jscoverage['js/vs_fx.js'][4433] = 0;
  _$jscoverage['js/vs_fx.js'][4436] = 0;
  _$jscoverage['js/vs_fx.js'][4437] = 0;
  _$jscoverage['js/vs_fx.js'][4439] = 0;
  _$jscoverage['js/vs_fx.js'][4442] = 0;
  _$jscoverage['js/vs_fx.js'][4443] = 0;
  _$jscoverage['js/vs_fx.js'][4445] = 0;
  _$jscoverage['js/vs_fx.js'][4447] = 0;
  _$jscoverage['js/vs_fx.js'][4448] = 0;
  _$jscoverage['js/vs_fx.js'][4449] = 0;
  _$jscoverage['js/vs_fx.js'][4453] = 0;
  _$jscoverage['js/vs_fx.js'][4454] = 0;
  _$jscoverage['js/vs_fx.js'][4456] = 0;
  _$jscoverage['js/vs_fx.js'][4458] = 0;
  _$jscoverage['js/vs_fx.js'][4459] = 0;
  _$jscoverage['js/vs_fx.js'][4460] = 0;
  _$jscoverage['js/vs_fx.js'][4462] = 0;
  _$jscoverage['js/vs_fx.js'][4465] = 0;
  _$jscoverage['js/vs_fx.js'][4467] = 0;
  _$jscoverage['js/vs_fx.js'][4468] = 0;
  _$jscoverage['js/vs_fx.js'][4470] = 0;
  _$jscoverage['js/vs_fx.js'][4472] = 0;
  _$jscoverage['js/vs_fx.js'][4474] = 0;
  _$jscoverage['js/vs_fx.js'][4476] = 0;
  _$jscoverage['js/vs_fx.js'][4479] = 0;
  _$jscoverage['js/vs_fx.js'][4481] = 0;
  _$jscoverage['js/vs_fx.js'][4484] = 0;
  _$jscoverage['js/vs_fx.js'][4489] = 0;
  _$jscoverage['js/vs_fx.js'][4491] = 0;
  _$jscoverage['js/vs_fx.js'][4494] = 0;
  _$jscoverage['js/vs_fx.js'][4497] = 0;
  _$jscoverage['js/vs_fx.js'][4498] = 0;
  _$jscoverage['js/vs_fx.js'][4504] = 0;
  _$jscoverage['js/vs_fx.js'][4506] = 0;
  _$jscoverage['js/vs_fx.js'][4507] = 0;
  _$jscoverage['js/vs_fx.js'][4509] = 0;
  _$jscoverage['js/vs_fx.js'][4511] = 0;
  _$jscoverage['js/vs_fx.js'][4512] = 0;
  _$jscoverage['js/vs_fx.js'][4514] = 0;
  _$jscoverage['js/vs_fx.js'][4517] = 0;
  _$jscoverage['js/vs_fx.js'][4519] = 0;
  _$jscoverage['js/vs_fx.js'][4522] = 0;
  _$jscoverage['js/vs_fx.js'][4527] = 0;
  _$jscoverage['js/vs_fx.js'][4529] = 0;
  _$jscoverage['js/vs_fx.js'][4532] = 0;
  _$jscoverage['js/vs_fx.js'][4535] = 0;
  _$jscoverage['js/vs_fx.js'][4536] = 0;
  _$jscoverage['js/vs_fx.js'][4541] = 0;
  _$jscoverage['js/vs_fx.js'][4543] = 0;
  _$jscoverage['js/vs_fx.js'][4545] = 0;
  _$jscoverage['js/vs_fx.js'][4548] = 0;
  _$jscoverage['js/vs_fx.js'][4550] = 0;
  _$jscoverage['js/vs_fx.js'][4552] = 0;
  _$jscoverage['js/vs_fx.js'][4554] = 0;
  _$jscoverage['js/vs_fx.js'][4559] = 0;
  _$jscoverage['js/vs_fx.js'][4561] = 0;
  _$jscoverage['js/vs_fx.js'][4563] = 0;
  _$jscoverage['js/vs_fx.js'][4565] = 0;
  _$jscoverage['js/vs_fx.js'][4568] = 0;
  _$jscoverage['js/vs_fx.js'][4570] = 0;
  _$jscoverage['js/vs_fx.js'][4572] = 0;
  _$jscoverage['js/vs_fx.js'][4573] = 0;
  _$jscoverage['js/vs_fx.js'][4575] = 0;
  _$jscoverage['js/vs_fx.js'][4579] = 0;
  _$jscoverage['js/vs_fx.js'][4580] = 0;
  _$jscoverage['js/vs_fx.js'][4581] = 0;
  _$jscoverage['js/vs_fx.js'][4583] = 0;
  _$jscoverage['js/vs_fx.js'][4585] = 0;
  _$jscoverage['js/vs_fx.js'][4587] = 0;
  _$jscoverage['js/vs_fx.js'][4591] = 0;
  _$jscoverage['js/vs_fx.js'][4592] = 0;
  _$jscoverage['js/vs_fx.js'][4593] = 0;
  _$jscoverage['js/vs_fx.js'][4595] = 0;
  _$jscoverage['js/vs_fx.js'][4597] = 0;
  _$jscoverage['js/vs_fx.js'][4599] = 0;
  _$jscoverage['js/vs_fx.js'][4601] = 0;
  _$jscoverage['js/vs_fx.js'][4602] = 0;
  _$jscoverage['js/vs_fx.js'][4604] = 0;
  _$jscoverage['js/vs_fx.js'][4605] = 0;
  _$jscoverage['js/vs_fx.js'][4607] = 0;
  _$jscoverage['js/vs_fx.js'][4609] = 0;
  _$jscoverage['js/vs_fx.js'][4611] = 0;
  _$jscoverage['js/vs_fx.js'][4613] = 0;
  _$jscoverage['js/vs_fx.js'][4615] = 0;
  _$jscoverage['js/vs_fx.js'][4617] = 0;
  _$jscoverage['js/vs_fx.js'][4621] = 0;
  _$jscoverage['js/vs_fx.js'][4623] = 0;
  _$jscoverage['js/vs_fx.js'][4624] = 0;
  _$jscoverage['js/vs_fx.js'][4626] = 0;
  _$jscoverage['js/vs_fx.js'][4628] = 0;
  _$jscoverage['js/vs_fx.js'][4632] = 0;
  _$jscoverage['js/vs_fx.js'][4633] = 0;
  _$jscoverage['js/vs_fx.js'][4637] = 0;
  _$jscoverage['js/vs_fx.js'][4643] = 0;
  _$jscoverage['js/vs_fx.js'][4653] = 0;
  _$jscoverage['js/vs_fx.js'][4656] = 0;
  _$jscoverage['js/vs_fx.js'][4659] = 0;
  _$jscoverage['js/vs_fx.js'][4661] = 0;
  _$jscoverage['js/vs_fx.js'][4662] = 0;
  _$jscoverage['js/vs_fx.js'][4671] = 0;
  _$jscoverage['js/vs_fx.js'][4682] = 0;
  _$jscoverage['js/vs_fx.js'][4683] = 0;
  _$jscoverage['js/vs_fx.js'][4685] = 0;
  _$jscoverage['js/vs_fx.js'][4686] = 0;
  _$jscoverage['js/vs_fx.js'][4687] = 0;
  _$jscoverage['js/vs_fx.js'][4688] = 0;
  _$jscoverage['js/vs_fx.js'][4689] = 0;
  _$jscoverage['js/vs_fx.js'][4699] = 0;
  _$jscoverage['js/vs_fx.js'][4786] = 0;
  _$jscoverage['js/vs_fx.js'][4788] = 0;
  _$jscoverage['js/vs_fx.js'][4789] = 0;
  _$jscoverage['js/vs_fx.js'][4790] = 0;
  _$jscoverage['js/vs_fx.js'][4792] = 0;
  _$jscoverage['js/vs_fx.js'][4799] = 0;
  _$jscoverage['js/vs_fx.js'][4800] = 0;
  _$jscoverage['js/vs_fx.js'][4801] = 0;
  _$jscoverage['js/vs_fx.js'][4802] = 0;
  _$jscoverage['js/vs_fx.js'][4803] = 0;
  _$jscoverage['js/vs_fx.js'][4804] = 0;
  _$jscoverage['js/vs_fx.js'][4805] = 0;
  _$jscoverage['js/vs_fx.js'][4806] = 0;
  _$jscoverage['js/vs_fx.js'][4812] = 0;
  _$jscoverage['js/vs_fx.js'][4818] = 0;
  _$jscoverage['js/vs_fx.js'][4821] = 0;
  _$jscoverage['js/vs_fx.js'][4865] = 0;
  _$jscoverage['js/vs_fx.js'][4867] = 0;
  _$jscoverage['js/vs_fx.js'][4869] = 0;
  _$jscoverage['js/vs_fx.js'][4870] = 0;
  _$jscoverage['js/vs_fx.js'][4871] = 0;
  _$jscoverage['js/vs_fx.js'][4873] = 0;
  _$jscoverage['js/vs_fx.js'][4886] = 0;
  _$jscoverage['js/vs_fx.js'][4888] = 0;
  _$jscoverage['js/vs_fx.js'][4890] = 0;
  _$jscoverage['js/vs_fx.js'][4892] = 0;
  _$jscoverage['js/vs_fx.js'][4893] = 0;
  _$jscoverage['js/vs_fx.js'][4895] = 0;
  _$jscoverage['js/vs_fx.js'][4899] = 0;
  _$jscoverage['js/vs_fx.js'][4900] = 0;
  _$jscoverage['js/vs_fx.js'][4902] = 0;
  _$jscoverage['js/vs_fx.js'][4905] = 0;
  _$jscoverage['js/vs_fx.js'][4906] = 0;
  _$jscoverage['js/vs_fx.js'][4908] = 0;
  _$jscoverage['js/vs_fx.js'][4910] = 0;
  _$jscoverage['js/vs_fx.js'][4912] = 0;
  _$jscoverage['js/vs_fx.js'][4913] = 0;
  _$jscoverage['js/vs_fx.js'][4914] = 0;
  _$jscoverage['js/vs_fx.js'][4916] = 0;
  _$jscoverage['js/vs_fx.js'][4918] = 0;
  _$jscoverage['js/vs_fx.js'][4920] = 0;
  _$jscoverage['js/vs_fx.js'][4921] = 0;
  _$jscoverage['js/vs_fx.js'][4923] = 0;
  _$jscoverage['js/vs_fx.js'][4925] = 0;
  _$jscoverage['js/vs_fx.js'][4926] = 0;
  _$jscoverage['js/vs_fx.js'][4927] = 0;
  _$jscoverage['js/vs_fx.js'][4931] = 0;
  _$jscoverage['js/vs_fx.js'][4932] = 0;
  _$jscoverage['js/vs_fx.js'][4934] = 0;
  _$jscoverage['js/vs_fx.js'][4936] = 0;
  _$jscoverage['js/vs_fx.js'][4937] = 0;
  _$jscoverage['js/vs_fx.js'][4938] = 0;
  _$jscoverage['js/vs_fx.js'][4940] = 0;
  _$jscoverage['js/vs_fx.js'][4942] = 0;
  _$jscoverage['js/vs_fx.js'][4943] = 0;
  _$jscoverage['js/vs_fx.js'][4945] = 0;
  _$jscoverage['js/vs_fx.js'][4947] = 0;
  _$jscoverage['js/vs_fx.js'][4948] = 0;
  _$jscoverage['js/vs_fx.js'][4950] = 0;
  _$jscoverage['js/vs_fx.js'][4952] = 0;
  _$jscoverage['js/vs_fx.js'][4954] = 0;
  _$jscoverage['js/vs_fx.js'][4957] = 0;
  _$jscoverage['js/vs_fx.js'][4962] = 0;
  _$jscoverage['js/vs_fx.js'][4964] = 0;
  _$jscoverage['js/vs_fx.js'][4967] = 0;
  _$jscoverage['js/vs_fx.js'][4970] = 0;
  _$jscoverage['js/vs_fx.js'][4971] = 0;
  _$jscoverage['js/vs_fx.js'][4975] = 0;
  _$jscoverage['js/vs_fx.js'][4977] = 0;
  _$jscoverage['js/vs_fx.js'][4978] = 0;
  _$jscoverage['js/vs_fx.js'][4980] = 0;
  _$jscoverage['js/vs_fx.js'][4982] = 0;
  _$jscoverage['js/vs_fx.js'][4984] = 0;
  _$jscoverage['js/vs_fx.js'][4986] = 0;
  _$jscoverage['js/vs_fx.js'][4988] = 0;
  _$jscoverage['js/vs_fx.js'][4990] = 0;
  _$jscoverage['js/vs_fx.js'][4991] = 0;
  _$jscoverage['js/vs_fx.js'][4993] = 0;
  _$jscoverage['js/vs_fx.js'][4995] = 0;
  _$jscoverage['js/vs_fx.js'][4996] = 0;
  _$jscoverage['js/vs_fx.js'][4997] = 0;
  _$jscoverage['js/vs_fx.js'][4999] = 0;
  _$jscoverage['js/vs_fx.js'][5001] = 0;
  _$jscoverage['js/vs_fx.js'][5003] = 0;
  _$jscoverage['js/vs_fx.js'][5005] = 0;
  _$jscoverage['js/vs_fx.js'][5006] = 0;
  _$jscoverage['js/vs_fx.js'][5008] = 0;
  _$jscoverage['js/vs_fx.js'][5010] = 0;
  _$jscoverage['js/vs_fx.js'][5012] = 0;
  _$jscoverage['js/vs_fx.js'][5015] = 0;
  _$jscoverage['js/vs_fx.js'][5020] = 0;
  _$jscoverage['js/vs_fx.js'][5022] = 0;
  _$jscoverage['js/vs_fx.js'][5025] = 0;
  _$jscoverage['js/vs_fx.js'][5028] = 0;
  _$jscoverage['js/vs_fx.js'][5030] = 0;
  _$jscoverage['js/vs_fx.js'][5034] = 0;
  _$jscoverage['js/vs_fx.js'][5035] = 0;
  _$jscoverage['js/vs_fx.js'][5054] = 0;
  _$jscoverage['js/vs_fx.js'][5059] = 0;
  _$jscoverage['js/vs_fx.js'][5060] = 0;
  _$jscoverage['js/vs_fx.js'][5062] = 0;
  _$jscoverage['js/vs_fx.js'][5064] = 0;
  _$jscoverage['js/vs_fx.js'][5065] = 0;
  _$jscoverage['js/vs_fx.js'][5066] = 0;
  _$jscoverage['js/vs_fx.js'][5067] = 0;
  _$jscoverage['js/vs_fx.js'][5069] = 0;
  _$jscoverage['js/vs_fx.js'][5071] = 0;
  _$jscoverage['js/vs_fx.js'][5073] = 0;
  _$jscoverage['js/vs_fx.js'][5076] = 0;
  _$jscoverage['js/vs_fx.js'][5078] = 0;
  _$jscoverage['js/vs_fx.js'][5081] = 0;
  _$jscoverage['js/vs_fx.js'][5083] = 0;
  _$jscoverage['js/vs_fx.js'][5085] = 0;
  _$jscoverage['js/vs_fx.js'][5088] = 0;
  _$jscoverage['js/vs_fx.js'][5089] = 0;
  _$jscoverage['js/vs_fx.js'][5090] = 0;
  _$jscoverage['js/vs_fx.js'][5092] = 0;
  _$jscoverage['js/vs_fx.js'][5094] = 0;
  _$jscoverage['js/vs_fx.js'][5096] = 0;
  _$jscoverage['js/vs_fx.js'][5098] = 0;
  _$jscoverage['js/vs_fx.js'][5102] = 0;
  _$jscoverage['js/vs_fx.js'][5104] = 0;
  _$jscoverage['js/vs_fx.js'][5105] = 0;
  _$jscoverage['js/vs_fx.js'][5109] = 0;
  _$jscoverage['js/vs_fx.js'][5112] = 0;
  _$jscoverage['js/vs_fx.js'][5113] = 0;
  _$jscoverage['js/vs_fx.js'][5115] = 0;
  _$jscoverage['js/vs_fx.js'][5117] = 0;
  _$jscoverage['js/vs_fx.js'][5119] = 0;
  _$jscoverage['js/vs_fx.js'][5123] = 0;
  _$jscoverage['js/vs_fx.js'][5126] = 0;
  _$jscoverage['js/vs_fx.js'][5128] = 0;
  _$jscoverage['js/vs_fx.js'][5129] = 0;
  _$jscoverage['js/vs_fx.js'][5130] = 0;
  _$jscoverage['js/vs_fx.js'][5133] = 0;
  _$jscoverage['js/vs_fx.js'][5135] = 0;
  _$jscoverage['js/vs_fx.js'][5136] = 0;
  _$jscoverage['js/vs_fx.js'][5138] = 0;
  _$jscoverage['js/vs_fx.js'][5140] = 0;
  _$jscoverage['js/vs_fx.js'][5142] = 0;
  _$jscoverage['js/vs_fx.js'][5147] = 0;
  _$jscoverage['js/vs_fx.js'][5153] = 0;
  _$jscoverage['js/vs_fx.js'][5241] = 0;
  _$jscoverage['js/vs_fx.js'][5243] = 0;
  _$jscoverage['js/vs_fx.js'][5244] = 0;
  _$jscoverage['js/vs_fx.js'][5245] = 0;
  _$jscoverage['js/vs_fx.js'][5247] = 0;
  _$jscoverage['js/vs_fx.js'][5251] = 0;
  _$jscoverage['js/vs_fx.js'][5252] = 0;
  _$jscoverage['js/vs_fx.js'][5253] = 0;
  _$jscoverage['js/vs_fx.js'][5259] = 0;
  _$jscoverage['js/vs_fx.js'][5261] = 0;
  _$jscoverage['js/vs_fx.js'][5298] = 0;
  _$jscoverage['js/vs_fx.js'][5300] = 0;
  _$jscoverage['js/vs_fx.js'][5302] = 0;
  _$jscoverage['js/vs_fx.js'][5303] = 0;
  _$jscoverage['js/vs_fx.js'][5304] = 0;
  _$jscoverage['js/vs_fx.js'][5306] = 0;
  _$jscoverage['js/vs_fx.js'][5327] = 0;
  _$jscoverage['js/vs_fx.js'][5331] = 0;
  _$jscoverage['js/vs_fx.js'][5332] = 0;
  _$jscoverage['js/vs_fx.js'][5336] = 0;
  _$jscoverage['js/vs_fx.js'][5337] = 0;
  _$jscoverage['js/vs_fx.js'][5338] = 0;
  _$jscoverage['js/vs_fx.js'][5339] = 0;
  _$jscoverage['js/vs_fx.js'][5341] = 0;
  _$jscoverage['js/vs_fx.js'][5343] = 0;
  _$jscoverage['js/vs_fx.js'][5346] = 0;
  _$jscoverage['js/vs_fx.js'][5348] = 0;
  _$jscoverage['js/vs_fx.js'][5350] = 0;
  _$jscoverage['js/vs_fx.js'][5353] = 0;
  _$jscoverage['js/vs_fx.js'][5354] = 0;
  _$jscoverage['js/vs_fx.js'][5355] = 0;
  _$jscoverage['js/vs_fx.js'][5357] = 0;
  _$jscoverage['js/vs_fx.js'][5359] = 0;
  _$jscoverage['js/vs_fx.js'][5361] = 0;
  _$jscoverage['js/vs_fx.js'][5363] = 0;
  _$jscoverage['js/vs_fx.js'][5367] = 0;
  _$jscoverage['js/vs_fx.js'][5369] = 0;
  _$jscoverage['js/vs_fx.js'][5370] = 0;
  _$jscoverage['js/vs_fx.js'][5374] = 0;
  _$jscoverage['js/vs_fx.js'][5377] = 0;
  _$jscoverage['js/vs_fx.js'][5378] = 0;
  _$jscoverage['js/vs_fx.js'][5380] = 0;
  _$jscoverage['js/vs_fx.js'][5382] = 0;
  _$jscoverage['js/vs_fx.js'][5383] = 0;
  _$jscoverage['js/vs_fx.js'][5385] = 0;
  _$jscoverage['js/vs_fx.js'][5387] = 0;
  _$jscoverage['js/vs_fx.js'][5388] = 0;
  _$jscoverage['js/vs_fx.js'][5391] = 0;
  _$jscoverage['js/vs_fx.js'][5393] = 0;
  _$jscoverage['js/vs_fx.js'][5394] = 0;
  _$jscoverage['js/vs_fx.js'][5396] = 0;
  _$jscoverage['js/vs_fx.js'][5398] = 0;
  _$jscoverage['js/vs_fx.js'][5400] = 0;
  _$jscoverage['js/vs_fx.js'][5405] = 0;
  _$jscoverage['js/vs_fx.js'][5411] = 0;
  _$jscoverage['js/vs_fx.js'][5419] = 0;
  _$jscoverage['js/vs_fx.js'][5420] = 0;
  _$jscoverage['js/vs_fx.js'][5422] = 0;
  _$jscoverage['js/vs_fx.js'][5423] = 0;
  _$jscoverage['js/vs_fx.js'][5431] = 0;
}
_$jscoverage['js/vs_fx.js'].source = ["<span class=\"c\">/** @license</span>","<span class=\"c\">  Copyright (C) 2009-2012. David Thevenin, ViniSketch SARL (c), and </span>","<span class=\"c\">  contributors. All rights reserved</span>","<span class=\"c\">  </span>","<span class=\"c\">  This program is free software: you can redistribute it and/or modify</span>","<span class=\"c\">  it under the terms of the GNU Lesser General Public License as published</span>","<span class=\"c\">  by the Free Software Foundation, either version 3 of the License, or</span>","<span class=\"c\">  (at your option) any later version.</span>","<span class=\"c\">  </span>","<span class=\"c\">  This program is distributed in the hope that it will be useful,</span>","<span class=\"c\">  but WITHOUT ANY WARRANTY; without even the implied warranty of</span>","<span class=\"c\">  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the</span>","<span class=\"c\">  GNU Lesser General Public License for more details.</span>","<span class=\"c\">  </span>","<span class=\"c\">  You should have received a copy of the GNU Lesser General Public License</span>","<span class=\"c\">  along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.</span>","<span class=\"c\">*/</span>","","<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>window<span class=\"k\">,</span> undefined<span class=\"k\">)</span> <span class=\"k\">{</span>","","<span class=\"k\">var</span> document <span class=\"k\">=</span> window<span class=\"k\">.</span>document<span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\">  Copyright (C) 2009-2012. David Thevenin, ViniSketch SARL (c), and </span>","<span class=\"c\">  contributors. All rights reserved</span>","<span class=\"c\">  </span>","<span class=\"c\">  This program is free software: you can redistribute it and/or modify</span>","<span class=\"c\">  it under the terms of the GNU Lesser General Public License as published</span>","<span class=\"c\">  by the Free Software Foundation, either version 3 of the License, or</span>","<span class=\"c\">  (at your option) any later version.</span>","<span class=\"c\">  </span>","<span class=\"c\">  This program is distributed in the hope that it will be useful,</span>","<span class=\"c\">  but WITHOUT ANY WARRANTY; without even the implied warranty of</span>","<span class=\"c\">  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the</span>","<span class=\"c\">  GNU Lesser General Public License for more details.</span>","<span class=\"c\">  </span>","<span class=\"c\">  You should have received a copy of the GNU Lesser General Public License</span>","<span class=\"c\">  along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.</span>","<span class=\"c\">*/</span>","","<span class=\"c\">/********************************************************************</span>","<span class=\"c\">                   </span>","<span class=\"c\">*********************************************************************/</span>","<span class=\"c\">/** @private */</span>","<span class=\"k\">var</span> vs <span class=\"k\">=</span> window<span class=\"k\">.</span>vs<span class=\"k\">,</span>","  util <span class=\"k\">=</span> vs<span class=\"k\">.</span>util<span class=\"k\">,</span>","  core <span class=\"k\">=</span> vs<span class=\"k\">.</span>core<span class=\"k\">,</span>","  ui <span class=\"k\">=</span> vs<span class=\"k\">.</span>ui<span class=\"k\">,</span>","  fx <span class=\"k\">=</span> vs<span class=\"k\">.</span>fx<span class=\"k\">,</span>","  setElementTransform <span class=\"k\">=</span> util<span class=\"k\">.</span>setElementTransform<span class=\"k\">,</span>","  getElementTransform <span class=\"k\">=</span> util<span class=\"k\">.</span>getElementTransform<span class=\"k\">,</span>","  SUPPORT_3D_TRANSFORM <span class=\"k\">=</span> vs<span class=\"k\">.</span>SUPPORT_3D_TRANSFORM<span class=\"k\">;</span>","<span class=\"c\">/**</span>","<span class=\"c\">  Copyright (C) 2009-2012. David Thevenin, ViniSketch SARL (c), and </span>","<span class=\"c\">  contributors. All rights reserved</span>","<span class=\"c\">  </span>","<span class=\"c\">  This program is free software: you can redistribute it and/or modify</span>","<span class=\"c\">  it under the terms of the GNU Lesser General Public License as published</span>","<span class=\"c\">  by the Free Software Foundation, either version 3 of the License, or</span>","<span class=\"c\">  (at your option) any later version.</span>","<span class=\"c\">  </span>","<span class=\"c\">  This program is distributed in the hope that it will be useful,</span>","<span class=\"c\">  but WITHOUT ANY WARRANTY; without even the implied warranty of</span>","<span class=\"c\">  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the</span>","<span class=\"c\">  GNU Lesser General Public License for more details.</span>","<span class=\"c\">  </span>","<span class=\"c\">  You should have received a copy of the GNU Lesser General Public License</span>","<span class=\"c\">  along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.</span>","<span class=\"c\">*/</span>","","<span class=\"k\">if</span> <span class=\"k\">(</span>util<span class=\"k\">.</span>vsTestStyle<span class=\"k\">.</span>webkitTransform <span class=\"k\">!==</span> undefined<span class=\"k\">)</span>","<span class=\"k\">{</span>","  <span class=\"k\">var</span> ANIMATION_DURATION <span class=\"k\">=</span> <span class=\"s\">\"-webkit-animation-duration\"</span><span class=\"k\">;</span>","  <span class=\"k\">var</span> ANIMATION_DELAY <span class=\"k\">=</span> <span class=\"s\">\"-webkit-animation-delay\"</span><span class=\"k\">;</span>","  <span class=\"k\">var</span> ANIMATION_NAME <span class=\"k\">=</span> <span class=\"s\">\"-webkit-animation-name\"</span><span class=\"k\">;</span>","  <span class=\"k\">var</span> ANIMATION_END <span class=\"k\">=</span> <span class=\"s\">\"webkitAnimationEnd\"</span><span class=\"k\">;</span>","  <span class=\"k\">var</span> ANIMATION_TIMING_FUNC <span class=\"k\">=</span> <span class=\"s\">\"-webkit-animation-timing-function\"</span><span class=\"k\">;</span>","  ","  <span class=\"k\">var</span> TRANSITION_DURATION <span class=\"k\">=</span> <span class=\"s\">\"-webkit-transition-duration\"</span><span class=\"k\">;</span>","  <span class=\"k\">var</span> TRANSITION_DELAY <span class=\"k\">=</span> <span class=\"s\">\"-webkit-transition-delay\"</span><span class=\"k\">;</span>","  <span class=\"k\">var</span> TRANSITION_END <span class=\"k\">=</span> <span class=\"s\">\"webkitTransitionEnd\"</span><span class=\"k\">;</span>","  <span class=\"k\">var</span> TRANSITION_TIMING_FUNC <span class=\"k\">=</span> <span class=\"s\">\"-webkit-transition-timing-function\"</span><span class=\"k\">;</span>","  <span class=\"k\">var</span> TRANSITION_PROPERTY <span class=\"k\">=</span> <span class=\"s\">\"-webkit-transition-property\"</span><span class=\"k\">;</span>","  ","  <span class=\"k\">var</span> TRANSFORM_ORIGIN <span class=\"k\">=</span> <span class=\"s\">\"-webkit-transform-origin\"</span><span class=\"k\">;</span>","  <span class=\"k\">var</span> ITERATION_COUNT <span class=\"k\">=</span> <span class=\"s\">\"-webkit-animation-iteration-count\"</span><span class=\"k\">;</span>","  <span class=\"k\">var</span> TRANSFORM <span class=\"k\">=</span> <span class=\"s\">\"-webkit-transform\"</span><span class=\"k\">;</span>","  <span class=\"k\">var</span> KEY_FRAMES <span class=\"k\">=</span> <span class=\"s\">\"-webkit-keyframes\"</span><span class=\"k\">;</span>","<span class=\"k\">}</span>  ","<span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>util<span class=\"k\">.</span>vsTestStyle<span class=\"k\">.</span>msTransform <span class=\"k\">!==</span> undefined<span class=\"k\">)</span>","<span class=\"k\">{</span>","  <span class=\"k\">var</span> ANIMATION_DURATION <span class=\"k\">=</span> <span class=\"s\">\"-ms-animation-duration\"</span><span class=\"k\">;</span>","  <span class=\"k\">var</span> ANIMATION_DELAY <span class=\"k\">=</span> <span class=\"s\">\"-ms-animation-delay\"</span><span class=\"k\">;</span>","  <span class=\"k\">var</span> ANIMATION_NAME <span class=\"k\">=</span> <span class=\"s\">\"-ms-animation-name\"</span><span class=\"k\">;</span>","  <span class=\"k\">var</span> ANIMATION_END <span class=\"k\">=</span> <span class=\"s\">\"msAnimationEnd\"</span><span class=\"k\">;</span>","  <span class=\"k\">var</span> ANIMATION_TIMING_FUNC <span class=\"k\">=</span> <span class=\"s\">\"-ms-animation-timing-function\"</span><span class=\"k\">;</span>","  ","  <span class=\"k\">var</span> TRANSITION_DURATION <span class=\"k\">=</span> <span class=\"s\">\"-ms-transition-duration\"</span><span class=\"k\">;</span>","  <span class=\"k\">var</span> TRANSITION_DELAY <span class=\"k\">=</span> <span class=\"s\">\"-ms-transition-delay\"</span><span class=\"k\">;</span>","  <span class=\"k\">var</span> TRANSITION_END <span class=\"k\">=</span> <span class=\"s\">\"msTransitionEnd\"</span><span class=\"k\">;</span>","  <span class=\"k\">var</span> TRANSITION_TIMING_FUNC <span class=\"k\">=</span> <span class=\"s\">\"-ms-transition-timing-function\"</span><span class=\"k\">;</span>","  <span class=\"k\">var</span> TRANSITION_PROPERTY <span class=\"k\">=</span> <span class=\"s\">\"-ms-transition-property\"</span><span class=\"k\">;</span>","  ","  <span class=\"k\">var</span> TRANSFORM_ORIGIN <span class=\"k\">=</span> <span class=\"s\">\"-ms-transform-origin\"</span><span class=\"k\">;</span>","  <span class=\"k\">var</span> ITERATION_COUNT <span class=\"k\">=</span> <span class=\"s\">\"-ms-animation-iteration-count\"</span><span class=\"k\">;</span>","  <span class=\"k\">var</span> TRANSFORM <span class=\"k\">=</span> <span class=\"s\">\"-ms-transform\"</span><span class=\"k\">;</span>","  <span class=\"k\">var</span> KEY_FRAMES <span class=\"k\">=</span> <span class=\"s\">\"-ms-keyframes\"</span><span class=\"k\">;</span>","<span class=\"k\">}</span>  ","<span class=\"k\">else</span>","<span class=\"k\">{</span>","  <span class=\"k\">var</span> ANIMATION_DURATION <span class=\"k\">=</span> <span class=\"s\">\"animation-duration\"</span><span class=\"k\">;</span>","  <span class=\"k\">var</span> ANIMATION_DELAY <span class=\"k\">=</span> <span class=\"s\">\"animation-delay\"</span><span class=\"k\">;</span>","  <span class=\"k\">var</span> ANIMATION_NAME <span class=\"k\">=</span> <span class=\"s\">\"animation-name\"</span><span class=\"k\">;</span>","  <span class=\"k\">var</span> ANIMATION_END <span class=\"k\">=</span> <span class=\"s\">\"animationEnd\"</span><span class=\"k\">;</span>","  <span class=\"k\">var</span> ANIMATION_TIMING_FUNC <span class=\"k\">=</span> <span class=\"s\">\"animation-timing-function\"</span><span class=\"k\">;</span>","  ","  <span class=\"k\">var</span> TRANSITION_DURATION <span class=\"k\">=</span> <span class=\"s\">\"transition-duration\"</span><span class=\"k\">;</span>","  <span class=\"k\">var</span> TRANSITION_DELAY <span class=\"k\">=</span> <span class=\"s\">\"transition-delay\"</span><span class=\"k\">;</span>","  <span class=\"k\">var</span> TRANSITION_END <span class=\"k\">=</span> <span class=\"s\">\"transitionEnd\"</span><span class=\"k\">;</span>","  <span class=\"k\">var</span> TRANSITION_TIMING_FUNC <span class=\"k\">=</span> <span class=\"s\">\"transition-timing-function\"</span><span class=\"k\">;</span>","  <span class=\"k\">var</span> TRANSITION_PROPERTY <span class=\"k\">=</span> <span class=\"s\">\"transition-property\"</span><span class=\"k\">;</span>","  ","  <span class=\"k\">var</span> TRANSFORM_ORIGIN <span class=\"k\">=</span> <span class=\"s\">\"transform-origin\"</span><span class=\"k\">;</span>","  <span class=\"k\">var</span> ITERATION_COUNT <span class=\"k\">=</span> <span class=\"s\">\"animation-iteration-count\"</span><span class=\"k\">;</span>","  <span class=\"k\">var</span> TRANSFORM <span class=\"k\">=</span> <span class=\"s\">\"transform\"</span><span class=\"k\">;</span>","  <span class=\"k\">var</span> KEY_FRAMES <span class=\"k\">=</span> <span class=\"s\">\"keyframes\"</span><span class=\"k\">;</span>","<span class=\"k\">}</span>  ","","<span class=\"c\">/**</span>","<span class=\"c\"> * @private</span>","<span class=\"c\"> * @const</span>","<span class=\"c\"> */</span>","<span class=\"k\">var</span> AnimationWidthRegExp <span class=\"k\">=</span> <span class=\"k\">new</span> RegExp <span class=\"k\">(</span><span class=\"s\">/\\$width/g</span><span class=\"k\">);</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * @private</span>","<span class=\"c\"> * @const</span>","<span class=\"c\"> */</span>","<span class=\"k\">var</span> AnimationHeightRegExp <span class=\"k\">=</span> <span class=\"k\">new</span> RegExp <span class=\"k\">(</span><span class=\"s\">/\\$height/g</span><span class=\"k\">);</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * @private</span>","<span class=\"c\"> * @const</span>","<span class=\"c\"> */</span>","<span class=\"k\">var</span> AnimationXRegExp <span class=\"k\">=</span> <span class=\"k\">new</span> RegExp <span class=\"k\">(</span><span class=\"s\">/\\$x/g</span><span class=\"k\">);</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * @private</span>","<span class=\"c\"> * @const</span>","<span class=\"c\"> */</span>","<span class=\"k\">var</span> AnimationYRegExp <span class=\"k\">=</span> <span class=\"k\">new</span> RegExp <span class=\"k\">(</span><span class=\"s\">/\\$y/g</span><span class=\"k\">);</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * @private</span>","<span class=\"c\"> * @const</span>","<span class=\"c\"> */</span>","<span class=\"k\">var</span> AnimationVariableRegExp <span class=\"k\">=</span> <span class=\"k\">new</span> RegExp <span class=\"k\">(</span><span class=\"s\">/\\$\\{([\\w]+)\\}/g</span><span class=\"k\">);</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> *  Cancel a playing animation</span>","<span class=\"c\"> * @name vs.fx.cancelAnimation</span>","<span class=\"c\"> * @param {String} id the animation id return par vs.fx.Animation.process ();</span>","<span class=\"c\"> */</span>","<span class=\"k\">function</span> cancelAnimation <span class=\"k\">(</span>anim_id<span class=\"k\">)</span>","<span class=\"k\">{</span>","  <span class=\"k\">if</span> <span class=\"k\">(!</span>anim_id<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span> <span class=\"k\">}</span>","  <span class=\"k\">var</span> anim_name<span class=\"k\">,</span> cssAnimation<span class=\"k\">,</span> anim_id<span class=\"k\">,</span> data<span class=\"k\">;</span>","","  data <span class=\"k\">=</span> Animation<span class=\"k\">.</span>__css_animations <span class=\"k\">[</span>anim_id<span class=\"k\">];</span>","  <span class=\"k\">if</span> <span class=\"k\">(</span>data <span class=\"k\">&amp;&amp;</span> data<span class=\"k\">.</span>length <span class=\"k\">===</span> <span class=\"s\">2</span><span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>data<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"k\">!</span>data<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">].</span>getStyle <span class=\"k\">||</span> <span class=\"k\">!</span>data <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">])</span> <span class=\"k\">{</span> <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    ","    anim_name <span class=\"k\">=</span> data<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">].</span>getStyle <span class=\"k\">(</span>ANIMATION_NAME<span class=\"k\">);</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>anim_name<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    ","    anim_name <span class=\"k\">=</span> anim_name<span class=\"k\">.</span>replace <span class=\"k\">(</span>anim_id<span class=\"k\">,</span> <span class=\"s\">''</span><span class=\"k\">);</span>","    data<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">].</span>setStyle <span class=\"k\">(</span>ANIMATION_NAME<span class=\"k\">,</span> anim_name<span class=\"k\">);</span>","  ","    <span class=\"k\">try</span> <span class=\"k\">{</span>","      document<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span><span class=\"s\">\"head\"</span><span class=\"k\">)[</span><span class=\"s\">0</span><span class=\"k\">].</span>removeChild <span class=\"k\">(</span>data <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]);</span>","    <span class=\"k\">}</span>","    <span class=\"k\">catch</span> <span class=\"k\">(</span>e<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      console<span class=\"k\">.</span>error <span class=\"k\">(</span>e<span class=\"k\">);</span>","      <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","    <span class=\"k\">delete</span> <span class=\"k\">(</span>Animation<span class=\"k\">.</span>__css_animations <span class=\"k\">[</span>anim_id<span class=\"k\">]);</span>","  <span class=\"k\">}</span>","  <span class=\"k\">else</span> <span class=\"k\">{</span> <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span> <span class=\"k\">}</span>","  ","  <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","<span class=\"k\">}</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> *  @private</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @param {vs.fx.View} comp the component the view will be animated</span>","<span class=\"c\"> * @param {vs.fx.Animation} animation the animation</span>","<span class=\"c\"> * @param {Function} clb an optional callback to call at the end of animation</span>","<span class=\"c\"> * @param {Object} ctx an optional execution context associated to the clb</span>","<span class=\"c\"> * @return {String} return the identifier of the animation process. You can</span>","<span class=\"c\"> *       use it to stop the animation for instance.</span>","<span class=\"c\"> */</span>","<span class=\"k\">var</span> procesAnimation <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>comp<span class=\"k\">,</span> animation<span class=\"k\">,</span> clb<span class=\"k\">,</span> ctx<span class=\"k\">)</span>","<span class=\"k\">{</span>","  <span class=\"k\">if</span> <span class=\"k\">(!</span>animation <span class=\"k\">||</span> <span class=\"k\">!</span>comp <span class=\"k\">||</span> <span class=\"k\">!</span>comp<span class=\"k\">.</span>view<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    console<span class=\"k\">.</span>error <span class=\"k\">(</span><span class=\"s\">'procesAnimation: invalid component parameter!'</span><span class=\"k\">);</span>","    <span class=\"k\">return</span><span class=\"k\">;</span>","  <span class=\"k\">}</span>","  ","  <span class=\"k\">function</span> isComplexAnimation <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>animation<span class=\"k\">.</span>keyFrames <span class=\"k\">[</span><span class=\"s\">'0%'</span><span class=\"k\">])</span> <span class=\"k\">{</span> <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","  <span class=\"k\">}</span> ","","  <span class=\"k\">var</span> initWithParameters<span class=\"k\">,</span> parseValue<span class=\"k\">,</span> applySimpleAnimation<span class=\"k\">,</span> applyStyleTo<span class=\"k\">,</span>","    runComplexAnimation<span class=\"k\">,</span> applyComplexAnimation<span class=\"k\">,</span>","    cssAnimation<span class=\"k\">,</span> anim_id <span class=\"k\">=</span> core<span class=\"k\">.</span>createId <span class=\"k\">(),</span>","    isComplex <span class=\"k\">=</span> isComplexAnimation <span class=\"k\">();</span>","","  initWithParameters <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    <span class=\"k\">var</span> property<span class=\"k\">;</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>isComplex<span class=\"k\">)</span>","    <span class=\"k\">{</span> property <span class=\"k\">=</span> ANIMATION_DURATION<span class=\"k\">;</span> <span class=\"k\">}</span>","    <span class=\"k\">else</span> <span class=\"k\">{</span> property <span class=\"k\">=</span> TRANSITION_DURATION<span class=\"k\">;</span> <span class=\"k\">}</span>","","    <span class=\"k\">if</span> <span class=\"k\">(</span>util<span class=\"k\">.</span>isArray <span class=\"k\">(</span>animation<span class=\"k\">.</span>origin<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> animation<span class=\"k\">.</span>origin<span class=\"k\">.</span>length <span class=\"k\">===</span> <span class=\"s\">2</span><span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">var</span> value <span class=\"k\">=</span> animation<span class=\"k\">.</span>origin <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">+</span> <span class=\"s\">'% '</span> <span class=\"k\">+</span> animation<span class=\"k\">.</span>origin <span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]</span> <span class=\"k\">+</span> <span class=\"s\">'%'</span><span class=\"k\">;</span>","      comp<span class=\"k\">.</span>setStyle <span class=\"k\">(</span>TRANSFORM_ORIGIN<span class=\"k\">,</span> value<span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">if</span> <span class=\"k\">(</span>util<span class=\"k\">.</span>isString <span class=\"k\">(</span>animation<span class=\"k\">.</span>durations<span class=\"k\">))</span>","    <span class=\"k\">{</span>","      comp<span class=\"k\">.</span>setStyle <span class=\"k\">(</span>property<span class=\"k\">,</span> animation<span class=\"k\">.</span>durations<span class=\"k\">);</span>","    <span class=\"k\">}</span>","    <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>util<span class=\"k\">.</span>isArray <span class=\"k\">(</span>animation<span class=\"k\">.</span>durations<span class=\"k\">))</span>","    <span class=\"k\">{</span>","      comp<span class=\"k\">.</span>setStyle <span class=\"k\">(</span>property<span class=\"k\">,</span> animation<span class=\"k\">.</span>durations<span class=\"k\">.</span>join <span class=\"k\">(</span><span class=\"s\">', '</span><span class=\"k\">));</span>","    <span class=\"k\">}</span>","    <span class=\"k\">else</span>","    <span class=\"k\">{</span>","      comp<span class=\"k\">.</span>setStyle <span class=\"k\">(</span>property<span class=\"k\">,</span> Animation<span class=\"k\">.</span>DEFAULT_DURATION<span class=\"k\">);</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">if</span> <span class=\"k\">(</span>isComplex<span class=\"k\">)</span> <span class=\"k\">{</span> property <span class=\"k\">=</span> ANIMATION_DELAY<span class=\"k\">;</span> <span class=\"k\">}</span>","    <span class=\"k\">else</span> <span class=\"k\">{</span> property <span class=\"k\">=</span> TRANSITION_DELAY<span class=\"k\">;</span> <span class=\"k\">}</span>","","    <span class=\"k\">if</span> <span class=\"k\">(</span>util<span class=\"k\">.</span>isNumber <span class=\"k\">(</span>animation<span class=\"k\">.</span>delay<span class=\"k\">))</span>","    <span class=\"k\">{</span>","      comp<span class=\"k\">.</span>setStyle <span class=\"k\">(</span>property<span class=\"k\">,</span> animation<span class=\"k\">.</span>delay <span class=\"k\">+</span> <span class=\"s\">'ms'</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","    <span class=\"k\">else</span>","    <span class=\"k\">{</span> comp<span class=\"k\">.</span>setStyle <span class=\"k\">(</span>property<span class=\"k\">,</span> <span class=\"s\">'0'</span><span class=\"k\">);</span> <span class=\"k\">}</span>","","    <span class=\"k\">if</span> <span class=\"k\">(</span>isComplex<span class=\"k\">)</span> property <span class=\"k\">=</span> ANIMATION_TIMING_FUNC<span class=\"k\">;</span>","    <span class=\"k\">else</span> property <span class=\"k\">=</span> TRANSITION_TIMING_FUNC<span class=\"k\">;</span>","","    <span class=\"k\">if</span> <span class=\"k\">(</span>util<span class=\"k\">.</span>isString <span class=\"k\">(</span>animation<span class=\"k\">.</span>timings<span class=\"k\">))</span>","    <span class=\"k\">{</span>","      comp<span class=\"k\">.</span>setStyle <span class=\"k\">(</span>property<span class=\"k\">,</span> animation<span class=\"k\">.</span>timings<span class=\"k\">);</span>","    <span class=\"k\">}</span>","    <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>util<span class=\"k\">.</span>isArray <span class=\"k\">(</span>animation<span class=\"k\">.</span>timings<span class=\"k\">))</span>","    <span class=\"k\">{</span>","      comp<span class=\"k\">.</span>setStyle <span class=\"k\">(</span>property<span class=\"k\">,</span> animation<span class=\"k\">.</span>timings<span class=\"k\">.</span>join <span class=\"k\">(</span><span class=\"s\">', '</span><span class=\"k\">));</span>","    <span class=\"k\">}</span>","    <span class=\"k\">else</span>","    <span class=\"k\">{</span>","      comp<span class=\"k\">.</span>setStyle <span class=\"k\">(</span>property<span class=\"k\">,</span> Animation<span class=\"k\">.</span>EASE<span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">if</span> <span class=\"k\">(</span>isComplex<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>animation<span class=\"k\">.</span>iterationCount <span class=\"k\">===</span> <span class=\"s\">'infinite'</span><span class=\"k\">)</span>","      <span class=\"k\">{</span>","        comp<span class=\"k\">.</span>setStyle <span class=\"k\">(</span>ITERATION_COUNT<span class=\"k\">,</span> <span class=\"s\">'infinite'</span><span class=\"k\">);</span>","      <span class=\"k\">}</span>","      <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(!</span>animation<span class=\"k\">.</span>iterationCount <span class=\"k\">||</span>","               <span class=\"k\">!</span>util<span class=\"k\">.</span>isNumber <span class=\"k\">(</span>animation<span class=\"k\">.</span>iterationCount<span class=\"k\">))</span>","      <span class=\"k\">{</span>","        comp<span class=\"k\">.</span>setStyle <span class=\"k\">(</span>ITERATION_COUNT<span class=\"k\">,</span> <span class=\"s\">'1'</span><span class=\"k\">);</span>","      <span class=\"k\">}</span>","      <span class=\"k\">else</span> ","      <span class=\"k\">{</span>","        comp<span class=\"k\">.</span>setStyle <span class=\"k\">(</span>ITERATION_COUNT<span class=\"k\">,</span> animation<span class=\"k\">.</span>iterationCount<span class=\"k\">);</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">;</span>","  ","  parseValue <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>v<span class=\"k\">,</span> data<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">var</span> matches<span class=\"k\">,</span> i<span class=\"k\">,</span> props <span class=\"k\">=</span> <span class=\"k\">[],</span> prop<span class=\"k\">;</span>","    ","    <span class=\"k\">if</span> <span class=\"k\">(</span>util<span class=\"k\">.</span>isNumber <span class=\"k\">(</span>v<span class=\"k\">))</span> <span class=\"k\">{</span> <span class=\"k\">return</span> v<span class=\"k\">;</span> <span class=\"k\">}</span>","    ","    <span class=\"k\">if</span> <span class=\"k\">(</span>util<span class=\"k\">.</span>isString <span class=\"k\">(</span>v<span class=\"k\">))</span>","    <span class=\"k\">{</span>","      v <span class=\"k\">=</span> v<span class=\"k\">.</span>replace <span class=\"k\">(</span>AnimationWidthRegExp<span class=\"k\">,</span> comp<span class=\"k\">.</span>size <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">+</span> <span class=\"s\">'px'</span><span class=\"k\">);</span>","      v <span class=\"k\">=</span> v<span class=\"k\">.</span>replace <span class=\"k\">(</span>AnimationHeightRegExp<span class=\"k\">,</span> comp<span class=\"k\">.</span>size <span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]</span> <span class=\"k\">+</span> <span class=\"s\">'px'</span><span class=\"k\">);</span>","      v <span class=\"k\">=</span> v<span class=\"k\">.</span>replace <span class=\"k\">(</span>AnimationXRegExp<span class=\"k\">,</span> comp<span class=\"k\">.</span>position <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">+</span> <span class=\"s\">'px'</span><span class=\"k\">);</span>","      v <span class=\"k\">=</span> v<span class=\"k\">.</span>replace <span class=\"k\">(</span>AnimationYRegExp<span class=\"k\">,</span> comp<span class=\"k\">.</span>position <span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]</span> <span class=\"k\">+</span> <span class=\"s\">'px'</span><span class=\"k\">);</span>","      ","      <span class=\"k\">var</span> matches <span class=\"k\">=</span> AnimationVariableRegExp<span class=\"k\">.</span>exec <span class=\"k\">(</span>v<span class=\"k\">);</span>","      <span class=\"k\">while</span> <span class=\"k\">(</span>matches <span class=\"k\">&amp;&amp;</span> matches<span class=\"k\">.</span>length <span class=\"k\">===</span> <span class=\"s\">2</span><span class=\"k\">)</span>","      <span class=\"k\">{</span>","        props<span class=\"k\">.</span>push <span class=\"k\">(</span>matches <span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]);</span>","        matches <span class=\"k\">=</span> AnimationVariableRegExp<span class=\"k\">.</span>exec <span class=\"k\">(</span>v<span class=\"k\">);</span>","      <span class=\"k\">}</span>","      <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> props<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++)</span>","      <span class=\"k\">{</span>","        prop <span class=\"k\">=</span> props <span class=\"k\">[</span>i<span class=\"k\">];</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">typeof</span> data<span class=\"k\">[</span>prop<span class=\"k\">]</span> <span class=\"k\">!==</span> <span class=\"s\">'undefined'</span><span class=\"k\">)</span>","        <span class=\"k\">{</span> v <span class=\"k\">=</span> v<span class=\"k\">.</span>replace <span class=\"k\">(</span><span class=\"s\">'${'</span> <span class=\"k\">+</span> prop <span class=\"k\">+</span> <span class=\"s\">'}'</span><span class=\"k\">,</span> data<span class=\"k\">[</span>prop<span class=\"k\">]);</span> <span class=\"k\">}</span>","        <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">typeof</span> animation<span class=\"k\">[</span>prop<span class=\"k\">]</span> <span class=\"k\">!==</span> <span class=\"s\">'undefined'</span><span class=\"k\">)</span>","        <span class=\"k\">{</span> v <span class=\"k\">=</span> v<span class=\"k\">.</span>replace <span class=\"k\">(</span><span class=\"s\">'${'</span> <span class=\"k\">+</span> prop <span class=\"k\">+</span> <span class=\"s\">'}'</span><span class=\"k\">,</span> animation<span class=\"k\">[</span>prop<span class=\"k\">]);</span> <span class=\"k\">}</span>","      <span class=\"k\">}</span>","      ","      <span class=\"k\">return</span> v<span class=\"k\">;</span>","    <span class=\"k\">}</span>","    ","    console<span class=\"k\">.</span>warn ","      <span class=\"k\">(</span><span class=\"s\">\"vs.fx.Animation._parseValue. Unknown value's type: \"</span> <span class=\"k\">+</span> v<span class=\"k\">);</span>","    <span class=\"k\">return</span> <span class=\"s\">0</span><span class=\"k\">;</span>","  <span class=\"k\">}</span><span class=\"k\">;</span>","  ","  applySimpleAnimation <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    initWithParameters <span class=\"k\">();</span>","    <span class=\"k\">var</span> callback<span class=\"k\">,</span> i<span class=\"k\">,</span> self <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">,</span> dur<span class=\"k\">;</span>","    ","    callback <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>event<span class=\"k\">)</span> ","    <span class=\"k\">{</span>","      <span class=\"c\">// do nothing if that event just bubbled from our target's sub-tree</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>event<span class=\"k\">.</span>currentTarget <span class=\"k\">!==</span> comp<span class=\"k\">.</span>view<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      ","      comp<span class=\"k\">.</span>view<span class=\"k\">.</span>removeEventListener <span class=\"k\">(</span>TRANSITION_END<span class=\"k\">,</span> callback<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">);</span>","      ","      <span class=\"c\">// clear transition parameters</span>","      comp<span class=\"k\">.</span>view<span class=\"k\">.</span>style<span class=\"k\">.</span>removeProperty <span class=\"k\">(</span>TRANSITION_DURATION<span class=\"k\">);</span>","      comp<span class=\"k\">.</span>view<span class=\"k\">.</span>style<span class=\"k\">.</span>removeProperty <span class=\"k\">(</span>TRANSITION_DELAY<span class=\"k\">);</span>","","      <span class=\"k\">if</span> <span class=\"k\">(</span>animation<span class=\"k\">.</span>delegate <span class=\"k\">&amp;&amp;</span> animation<span class=\"k\">.</span>delegate<span class=\"k\">.</span>taskDidEnd<span class=\"k\">)</span>","      <span class=\"k\">{</span> animation<span class=\"k\">.</span>delegate<span class=\"k\">.</span>taskDidEnd <span class=\"k\">(</span>animation<span class=\"k\">);</span> <span class=\"k\">}</span>","      ","      <span class=\"k\">if</span> <span class=\"k\">(</span>clb<span class=\"k\">)</span> <span class=\"k\">{</span> clb<span class=\"k\">.</span>call <span class=\"k\">(</span>ctx<span class=\"k\">?</span>ctx<span class=\"k\">:</span>self<span class=\"k\">);</span> <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    ","    <span class=\"c\">// if durations is egal to 0, no event is generated a the end.</span>","    <span class=\"c\">// Then use a small time</span>","    dur <span class=\"k\">=</span> parseFloat <span class=\"k\">(</span>comp<span class=\"k\">.</span>view<span class=\"k\">.</span>style <span class=\"k\">[</span>TRANSITION_DURATION<span class=\"k\">]);</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>dur <span class=\"k\">===</span> <span class=\"s\">0</span><span class=\"k\">)</span> comp<span class=\"k\">.</span>view<span class=\"k\">.</span>style <span class=\"k\">[</span>TRANSITION_DURATION<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">\"0.0001s\"</span><span class=\"k\">;</span>","    ","    comp<span class=\"k\">.</span>view<span class=\"k\">.</span>addEventListener <span class=\"k\">(</span>TRANSITION_END<span class=\"k\">,</span> callback<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">);</span>  ","    ","    applyStyleTo <span class=\"k\">();</span>","  <span class=\"k\">}</span><span class=\"k\">;</span>","  ","  applyStyleTo <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    <span class=\"k\">var</span> data <span class=\"k\">=</span> <span class=\"k\">(</span>animation<span class=\"k\">.</span>keyFrames<span class=\"k\">[</span><span class=\"s\">'100%'</span><span class=\"k\">])?</span>","      animation<span class=\"k\">.</span>keyFrames<span class=\"k\">[</span><span class=\"s\">'100%'</span><span class=\"k\">]:</span>animation<span class=\"k\">,</span> transform <span class=\"k\">=</span> <span class=\"s\">''</span><span class=\"k\">,</span>","      property<span class=\"k\">,</span> properties <span class=\"k\">=</span> <span class=\"k\">[],</span> value<span class=\"k\">;</span>","    ","    <span class=\"k\">if</span> <span class=\"k\">(</span>data<span class=\"k\">)</span> <span class=\"k\">for</span> <span class=\"k\">(</span>i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> animation<span class=\"k\">.</span>properties<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++)</span>","    <span class=\"k\">{</span>","      property <span class=\"k\">=</span> animation<span class=\"k\">.</span>properties <span class=\"k\">[</span>i<span class=\"k\">];</span>","      value <span class=\"k\">=</span> parseValue <span class=\"k\">(</span>animation<span class=\"k\">.</span>values <span class=\"k\">[</span>i<span class=\"k\">],</span> data<span class=\"k\">);</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>property <span class=\"k\">===</span> <span class=\"s\">'rotate'</span><span class=\"k\">)</span>","      <span class=\"k\">{</span> transform <span class=\"k\">+=</span> <span class=\"s\">'rotate('</span> <span class=\"k\">+</span> value <span class=\"k\">+</span> <span class=\"s\">') '</span><span class=\"k\">;</span> property <span class=\"k\">=</span> TRANSFORM<span class=\"k\">;</span><span class=\"k\">}</span>","      <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>property <span class=\"k\">===</span> <span class=\"s\">'skew'</span><span class=\"k\">)</span>","      <span class=\"k\">{</span> transform <span class=\"k\">+=</span> <span class=\"s\">'skew('</span> <span class=\"k\">+</span> value <span class=\"k\">+</span> <span class=\"s\">') '</span><span class=\"k\">;</span> property <span class=\"k\">=</span> TRANSFORM<span class=\"k\">;</span><span class=\"k\">}</span>","      <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>SUPPORT_3D_TRANSFORM <span class=\"k\">&amp;&amp;</span> property <span class=\"k\">===</span> <span class=\"s\">'translate'</span><span class=\"k\">)</span>","      <span class=\"k\">{</span> transform <span class=\"k\">+=</span> <span class=\"s\">'translate3d('</span> <span class=\"k\">+</span> value <span class=\"k\">+</span> <span class=\"s\">') '</span><span class=\"k\">;</span> property <span class=\"k\">=</span> TRANSFORM<span class=\"k\">;</span><span class=\"k\">}</span>","      <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>property <span class=\"k\">===</span> <span class=\"s\">'translate'</span><span class=\"k\">)</span>","      <span class=\"k\">{</span> transform <span class=\"k\">+=</span> <span class=\"s\">'translate('</span> <span class=\"k\">+</span> value <span class=\"k\">+</span> <span class=\"s\">') '</span><span class=\"k\">;</span> property <span class=\"k\">=</span> TRANSFORM<span class=\"k\">;</span><span class=\"k\">}</span>","      <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>property <span class=\"k\">===</span> <span class=\"s\">'translateX'</span><span class=\"k\">)</span>","      <span class=\"k\">{</span> transform <span class=\"k\">+=</span> <span class=\"s\">'translateX('</span> <span class=\"k\">+</span> value <span class=\"k\">+</span> <span class=\"s\">') '</span><span class=\"k\">;</span> property <span class=\"k\">=</span> TRANSFORM<span class=\"k\">;</span><span class=\"k\">}</span>","      <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>property <span class=\"k\">===</span> <span class=\"s\">'translateY'</span><span class=\"k\">)</span>","      <span class=\"k\">{</span> transform <span class=\"k\">+=</span> <span class=\"s\">'translateY('</span> <span class=\"k\">+</span> value <span class=\"k\">+</span> <span class=\"s\">') '</span><span class=\"k\">;</span> property <span class=\"k\">=</span> TRANSFORM<span class=\"k\">;</span><span class=\"k\">}</span>","      <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>property <span class=\"k\">===</span> <span class=\"s\">'rotateX'</span><span class=\"k\">)</span>","      <span class=\"k\">{</span> transform <span class=\"k\">+=</span> <span class=\"s\">'rotateX('</span> <span class=\"k\">+</span> value <span class=\"k\">+</span> <span class=\"s\">') '</span><span class=\"k\">;</span> property <span class=\"k\">=</span> TRANSFORM<span class=\"k\">;</span><span class=\"k\">}</span>","      <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>property <span class=\"k\">===</span> <span class=\"s\">'rotateY'</span><span class=\"k\">)</span>","      <span class=\"k\">{</span> transform <span class=\"k\">+=</span> <span class=\"s\">'rotateY('</span> <span class=\"k\">+</span> value <span class=\"k\">+</span> <span class=\"s\">') '</span><span class=\"k\">;</span> property <span class=\"k\">=</span> TRANSFORM<span class=\"k\">;</span><span class=\"k\">}</span>","      <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>property <span class=\"k\">===</span> <span class=\"s\">'scale'</span><span class=\"k\">)</span>","      <span class=\"k\">{</span> transform <span class=\"k\">+=</span> <span class=\"s\">'scale('</span> <span class=\"k\">+</span> value <span class=\"k\">+</span> <span class=\"s\">') '</span><span class=\"k\">;</span> property <span class=\"k\">=</span> TRANSFORM<span class=\"k\">;</span><span class=\"k\">}</span>","      <span class=\"k\">else</span>","      <span class=\"k\">{</span> comp<span class=\"k\">.</span>setStyle <span class=\"k\">(</span>property<span class=\"k\">,</span> value<span class=\"k\">);</span> <span class=\"k\">}</span>","      ","      <span class=\"k\">if</span> <span class=\"k\">(</span>properties<span class=\"k\">.</span>indexOf <span class=\"k\">(</span>property<span class=\"k\">)</span> <span class=\"k\">==</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">)</span> properties<span class=\"k\">.</span>push <span class=\"k\">(</span>property<span class=\"k\">);</span>    ","    <span class=\"k\">}</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>transform<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      setElementTransform <span class=\"k\">(</span>comp<span class=\"k\">.</span>view<span class=\"k\">,</span> transform<span class=\"k\">);</span>","    <span class=\"k\">}</span>","    comp<span class=\"k\">.</span>setStyle <span class=\"k\">(</span>TRANSITION_PROPERTY<span class=\"k\">,</span> properties<span class=\"k\">.</span>join <span class=\"k\">(</span><span class=\"s\">','</span><span class=\"k\">));</span> ","  <span class=\"k\">}</span>","  ","  runComplexAnimation <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    initWithParameters <span class=\"k\">();</span>","    ","    <span class=\"k\">var</span> i<span class=\"k\">,</span> callback<span class=\"k\">,</span> value<span class=\"k\">,</span> anim_name<span class=\"k\">,</span> dur<span class=\"k\">,</span> ","    ","    callback <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>event<span class=\"k\">)</span> ","    <span class=\"k\">{</span>","      <span class=\"c\">// do nothing if that event just bubbled from our target's sub-tree</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>event<span class=\"k\">.</span>currentTarget <span class=\"k\">!==</span> comp<span class=\"k\">.</span>view<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      ","      comp<span class=\"k\">.</span>view<span class=\"k\">.</span>removeEventListener <span class=\"k\">(</span>ANIMATION_END<span class=\"k\">,</span> callback<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">);</span>","      ","      <span class=\"c\">// apply the last state</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>isComplex<span class=\"k\">)</span> <span class=\"k\">{</span> applyStyleTo <span class=\"k\">();</span> <span class=\"k\">}</span>","","      <span class=\"c\">// clear animations parameters</span>","      comp<span class=\"k\">.</span>view<span class=\"k\">.</span>style<span class=\"k\">.</span>removeProperty <span class=\"k\">(</span>ANIMATION_DURATION<span class=\"k\">);</span>","      comp<span class=\"k\">.</span>view<span class=\"k\">.</span>style<span class=\"k\">.</span>removeProperty <span class=\"k\">(</span>ANIMATION_DELAY<span class=\"k\">);</span>","","      <span class=\"c\">// clean the animation</span>","      anim_name <span class=\"k\">=</span> comp<span class=\"k\">.</span>getStyle <span class=\"k\">(</span>ANIMATION_NAME<span class=\"k\">);</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>anim_name<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        anim_name <span class=\"k\">=</span> anim_name<span class=\"k\">.</span>replace <span class=\"k\">(</span>anim_id<span class=\"k\">,</span> <span class=\"s\">''</span><span class=\"k\">);</span>","        comp<span class=\"k\">.</span>setStyle <span class=\"k\">(</span>ANIMATION_NAME<span class=\"k\">,</span> anim_name<span class=\"k\">);</span>","      <span class=\"k\">}</span>","      ","      <span class=\"k\">try</span>","      <span class=\"k\">{</span>","        data <span class=\"k\">=</span> Animation<span class=\"k\">.</span>__css_animations <span class=\"k\">[</span>anim_id<span class=\"k\">];</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>data <span class=\"k\">&amp;&amp;</span> data<span class=\"k\">.</span>length <span class=\"k\">===</span> <span class=\"s\">2</span><span class=\"k\">)</span>","        <span class=\"k\">{</span>","          document<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span><span class=\"s\">\"head\"</span><span class=\"k\">)[</span><span class=\"s\">0</span><span class=\"k\">].</span>removeChild <span class=\"k\">(</span>data <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]);</span>","          <span class=\"k\">delete</span> <span class=\"k\">(</span>Animation<span class=\"k\">.</span>__css_animations <span class=\"k\">[</span>anim_id<span class=\"k\">]);</span>      ","        <span class=\"k\">}</span> ","      <span class=\"k\">}</span>","      <span class=\"k\">catch</span> <span class=\"k\">(</span>e<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        console<span class=\"k\">.</span>error <span class=\"k\">(</span>e<span class=\"k\">);</span>","        <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","      <span class=\"k\">}</span>","      ","      <span class=\"k\">if</span> <span class=\"k\">(</span>animation<span class=\"k\">.</span>delegate <span class=\"k\">&amp;&amp;</span> animation<span class=\"k\">.</span>delegate<span class=\"k\">.</span>taskDidStop<span class=\"k\">)</span>","      <span class=\"k\">{</span> animation<span class=\"k\">.</span>delegate<span class=\"k\">.</span>taskDidEnd <span class=\"k\">(</span>animation<span class=\"k\">);</span> <span class=\"k\">}</span>","","      <span class=\"k\">if</span> <span class=\"k\">(</span>clb<span class=\"k\">)</span> <span class=\"k\">{</span> clb<span class=\"k\">.</span>call <span class=\"k\">(</span>ctx<span class=\"k\">?</span>ctx<span class=\"k\">:</span>self<span class=\"k\">);</span> <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    ","    <span class=\"c\">// if durations is egal to 0, no event is generated a the end.</span>","    <span class=\"c\">// Then use a small time</span>","    dur <span class=\"k\">=</span> parseFloat <span class=\"k\">(</span>comp<span class=\"k\">.</span>view<span class=\"k\">.</span>style <span class=\"k\">[</span>ANIMATION_DURATION<span class=\"k\">]);</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>dur <span class=\"k\">===</span> <span class=\"s\">0</span><span class=\"k\">)</span> comp<span class=\"k\">.</span>view<span class=\"k\">.</span>style <span class=\"k\">[</span>ANIMATION_DURATION<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">\"0.0001s\"</span><span class=\"k\">;</span>","","    comp<span class=\"k\">.</span>view<span class=\"k\">.</span>addEventListener <span class=\"k\">(</span>ANIMATION_END<span class=\"k\">,</span> callback<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">);</span>","    anim_name <span class=\"k\">=</span> comp<span class=\"k\">.</span>getStyle <span class=\"k\">(</span>ANIMATION_NAME<span class=\"k\">);</span>","    ","    <span class=\"k\">if</span> <span class=\"k\">(!</span>anim_name<span class=\"k\">)</span> <span class=\"k\">{</span> anim_name <span class=\"k\">=</span> anim_id<span class=\"k\">;</span> <span class=\"k\">}</span>","    <span class=\"k\">else</span> <span class=\"k\">{</span> anim_name <span class=\"k\">+=</span> <span class=\"s\">', '</span> <span class=\"k\">+</span> anim_id<span class=\"k\">;</span> <span class=\"k\">}</span>","    ","    comp<span class=\"k\">.</span>setStyle <span class=\"k\">(</span>ANIMATION_NAME<span class=\"k\">,</span> anim_name<span class=\"k\">);</span>","  <span class=\"k\">}</span>","","  applyComplexAnimation <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    <span class=\"k\">var</span> data<span class=\"k\">,</span> key<span class=\"k\">,</span> style<span class=\"k\">,</span> i<span class=\"k\">,</span> property<span class=\"k\">,</span> transform<span class=\"k\">,</span> value<span class=\"k\">,</span>","    cssAnimation <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'style'</span><span class=\"k\">);</span>","    cssAnimation<span class=\"k\">.</span>type <span class=\"k\">=</span> <span class=\"s\">'text/css'</span><span class=\"k\">;</span>","    ","    <span class=\"k\">var</span> rules_str <span class=\"k\">=</span> <span class=\"s\">''</span><span class=\"k\">;</span>","    <span class=\"k\">for</span> <span class=\"k\">(</span>key <span class=\"k\">in</span> animation<span class=\"k\">.</span>keyFrames<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      transform <span class=\"k\">=</span> <span class=\"s\">''</span><span class=\"k\">;</span>","      data <span class=\"k\">=</span> animation<span class=\"k\">.</span>keyFrames <span class=\"k\">[</span>key<span class=\"k\">];</span>","      style <span class=\"k\">=</span> <span class=\"s\">''</span><span class=\"k\">;</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>util<span class=\"k\">.</span>isArray <span class=\"k\">(</span>data<span class=\"k\">))</span>","      <span class=\"k\">{</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> data<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++)</span>","        <span class=\"k\">{</span>","          value <span class=\"k\">=</span> data <span class=\"k\">[</span>i<span class=\"k\">];</span>","          <span class=\"k\">if</span> <span class=\"k\">(</span>value <span class=\"k\">==</span> <span class=\"k\">null</span> <span class=\"k\">||</span> <span class=\"k\">typeof</span> value <span class=\"k\">==</span> <span class=\"s\">'undefined'</span><span class=\"k\">)</span> <span class=\"k\">continue</span><span class=\"k\">;</span>","          value <span class=\"k\">=</span> parseValue <span class=\"k\">(</span>value<span class=\"k\">,</span> animation<span class=\"k\">);</span>","          property <span class=\"k\">=</span> animation<span class=\"k\">.</span>properties <span class=\"k\">[</span>i<span class=\"k\">];</span>","          <span class=\"k\">if</span> <span class=\"k\">(!</span>property<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">continue</span><span class=\"k\">;</span> <span class=\"k\">}</span>","          <span class=\"k\">if</span> <span class=\"k\">(</span>property <span class=\"k\">===</span> <span class=\"s\">'rotate'</span><span class=\"k\">)</span>","          <span class=\"k\">{</span> transform <span class=\"k\">+=</span> <span class=\"s\">'rotate('</span> <span class=\"k\">+</span> value <span class=\"k\">+</span> <span class=\"s\">') '</span><span class=\"k\">;</span> <span class=\"k\">}</span>","          <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>property <span class=\"k\">===</span> <span class=\"s\">'skew'</span><span class=\"k\">)</span>","          <span class=\"k\">{</span> transform <span class=\"k\">+=</span> <span class=\"s\">'skew('</span> <span class=\"k\">+</span> value <span class=\"k\">+</span> <span class=\"s\">') '</span><span class=\"k\">;</span> <span class=\"k\">}</span>","          <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>SUPPORT_3D_TRANSFORM <span class=\"k\">&amp;&amp;</span> property <span class=\"k\">===</span> <span class=\"s\">'translate'</span><span class=\"k\">)</span>","          <span class=\"k\">{</span> transform <span class=\"k\">+=</span> <span class=\"s\">'translate3d('</span> <span class=\"k\">+</span> value <span class=\"k\">+</span> <span class=\"s\">') '</span><span class=\"k\">;</span> <span class=\"k\">}</span>","          <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>property <span class=\"k\">===</span> <span class=\"s\">'translate'</span><span class=\"k\">)</span>","          <span class=\"k\">{</span> transform <span class=\"k\">+=</span> <span class=\"s\">'translate('</span> <span class=\"k\">+</span> value <span class=\"k\">+</span> <span class=\"s\">') '</span><span class=\"k\">;</span> <span class=\"k\">}</span>","          <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>property <span class=\"k\">===</span> <span class=\"s\">'translateX'</span><span class=\"k\">)</span>","          <span class=\"k\">{</span> transform <span class=\"k\">+=</span> <span class=\"s\">'translateX('</span> <span class=\"k\">+</span> value <span class=\"k\">+</span> <span class=\"s\">') '</span><span class=\"k\">;</span> <span class=\"k\">}</span>","          <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>property <span class=\"k\">===</span> <span class=\"s\">'translateY'</span><span class=\"k\">)</span>","          <span class=\"k\">{</span> transform <span class=\"k\">+=</span> <span class=\"s\">'translateY('</span> <span class=\"k\">+</span> value <span class=\"k\">+</span> <span class=\"s\">') '</span><span class=\"k\">;</span> <span class=\"k\">}</span>","          <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>property <span class=\"k\">===</span> <span class=\"s\">'rotateX'</span><span class=\"k\">)</span>","          <span class=\"k\">{</span> transform <span class=\"k\">+=</span> <span class=\"s\">'rotateX('</span> <span class=\"k\">+</span> value <span class=\"k\">+</span> <span class=\"s\">') '</span><span class=\"k\">;</span> <span class=\"k\">}</span>","          <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>property <span class=\"k\">===</span> <span class=\"s\">'rotateY'</span><span class=\"k\">)</span>","          <span class=\"k\">{</span> transform <span class=\"k\">+=</span> <span class=\"s\">'rotateY('</span> <span class=\"k\">+</span> value <span class=\"k\">+</span> <span class=\"s\">') '</span><span class=\"k\">;</span> <span class=\"k\">}</span>","          <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>property <span class=\"k\">===</span> <span class=\"s\">'scale'</span><span class=\"k\">)</span>","          <span class=\"k\">{</span> transform <span class=\"k\">+=</span> <span class=\"s\">'scale('</span> <span class=\"k\">+</span> value <span class=\"k\">+</span> <span class=\"s\">') '</span><span class=\"k\">;</span> <span class=\"k\">}</span>","          <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>property <span class=\"k\">===</span> <span class=\"s\">'perspective'</span><span class=\"k\">)</span>","          <span class=\"k\">{</span> transform <span class=\"k\">+=</span> <span class=\"s\">'perspective('</span> <span class=\"k\">+</span> value <span class=\"k\">+</span> <span class=\"s\">') '</span><span class=\"k\">;</span> <span class=\"k\">}</span>","          <span class=\"k\">else</span>","          <span class=\"k\">{</span> style <span class=\"k\">+=</span> property <span class=\"k\">+</span> <span class=\"s\">':'</span> <span class=\"k\">+</span> value <span class=\"k\">+</span> <span class=\"s\">';'</span><span class=\"k\">;</span> <span class=\"k\">}</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span>","      <span class=\"k\">else</span>","      <span class=\"k\">{</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span>i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> animation<span class=\"k\">.</span>properties<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++)</span>","        <span class=\"k\">{</span>","          value <span class=\"k\">=</span> parseValue <span class=\"k\">(</span>animation<span class=\"k\">.</span>values <span class=\"k\">[</span>i<span class=\"k\">],</span> data<span class=\"k\">);</span>","          property <span class=\"k\">=</span> animation<span class=\"k\">.</span>properties <span class=\"k\">[</span>i<span class=\"k\">];</span>","          <span class=\"k\">if</span> <span class=\"k\">(!</span>property<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">continue</span><span class=\"k\">;</span> <span class=\"k\">}</span>","          <span class=\"k\">if</span> <span class=\"k\">(</span>property <span class=\"k\">===</span> <span class=\"s\">'rotate'</span><span class=\"k\">)</span>","          <span class=\"k\">{</span> transform <span class=\"k\">+=</span> <span class=\"s\">'rotate('</span> <span class=\"k\">+</span> value <span class=\"k\">+</span> <span class=\"s\">') '</span><span class=\"k\">;</span> <span class=\"k\">}</span>","          <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>property <span class=\"k\">===</span> <span class=\"s\">'skew'</span><span class=\"k\">)</span>","          <span class=\"k\">{</span> transform <span class=\"k\">+=</span> <span class=\"s\">'skew('</span> <span class=\"k\">+</span> value <span class=\"k\">+</span> <span class=\"s\">') '</span><span class=\"k\">;</span> <span class=\"k\">}</span>","          <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>SUPPORT_3D_TRANSFORM <span class=\"k\">&amp;&amp;</span> property <span class=\"k\">===</span> <span class=\"s\">'translate'</span><span class=\"k\">)</span>","          <span class=\"k\">{</span> transform <span class=\"k\">+=</span> <span class=\"s\">'translate3d('</span> <span class=\"k\">+</span> value <span class=\"k\">+</span> <span class=\"s\">') '</span><span class=\"k\">;</span> <span class=\"k\">}</span>","          <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>property <span class=\"k\">===</span> <span class=\"s\">'translate'</span><span class=\"k\">)</span>","          <span class=\"k\">{</span> transform <span class=\"k\">+=</span> <span class=\"s\">'translate('</span> <span class=\"k\">+</span> value <span class=\"k\">+</span> <span class=\"s\">') '</span><span class=\"k\">;</span> <span class=\"k\">}</span>","          <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>property <span class=\"k\">===</span> <span class=\"s\">'translateX'</span><span class=\"k\">)</span>","          <span class=\"k\">{</span> transform <span class=\"k\">+=</span> <span class=\"s\">'translateX('</span> <span class=\"k\">+</span> value <span class=\"k\">+</span> <span class=\"s\">') '</span><span class=\"k\">;</span> <span class=\"k\">}</span>","          <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>property <span class=\"k\">===</span> <span class=\"s\">'translateY'</span><span class=\"k\">)</span>","          <span class=\"k\">{</span> transform <span class=\"k\">+=</span> <span class=\"s\">'translateY('</span> <span class=\"k\">+</span> value <span class=\"k\">+</span> <span class=\"s\">') '</span><span class=\"k\">;</span> <span class=\"k\">}</span>","          <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>property <span class=\"k\">===</span> <span class=\"s\">'rotateX'</span><span class=\"k\">)</span>","          <span class=\"k\">{</span> transform <span class=\"k\">+=</span> <span class=\"s\">'rotateX('</span> <span class=\"k\">+</span> value <span class=\"k\">+</span> <span class=\"s\">') '</span><span class=\"k\">;</span> <span class=\"k\">}</span>","          <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>property <span class=\"k\">===</span> <span class=\"s\">'rotateY'</span><span class=\"k\">)</span>","          <span class=\"k\">{</span> transform <span class=\"k\">+=</span> <span class=\"s\">'rotateY('</span> <span class=\"k\">+</span> value <span class=\"k\">+</span> <span class=\"s\">') '</span><span class=\"k\">;</span> <span class=\"k\">}</span>","          <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>property <span class=\"k\">===</span> <span class=\"s\">'scale'</span><span class=\"k\">)</span>","          <span class=\"k\">{</span> transform <span class=\"k\">+=</span> <span class=\"s\">'scale('</span> <span class=\"k\">+</span> value <span class=\"k\">+</span> <span class=\"s\">') '</span><span class=\"k\">;</span> <span class=\"k\">}</span>","          <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>property <span class=\"k\">===</span> <span class=\"s\">'perspective'</span><span class=\"k\">)</span>","          <span class=\"k\">{</span> transform <span class=\"k\">+=</span> <span class=\"s\">'perspective('</span> <span class=\"k\">+</span> value <span class=\"k\">+</span> <span class=\"s\">') '</span><span class=\"k\">;</span> <span class=\"k\">}</span>","          <span class=\"k\">else</span>","          <span class=\"k\">{</span> style <span class=\"k\">+=</span> property <span class=\"k\">+</span> <span class=\"s\">':'</span> <span class=\"k\">+</span> value <span class=\"k\">+</span> <span class=\"s\">';'</span><span class=\"k\">;</span> <span class=\"k\">}</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>transform<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        style <span class=\"k\">+=</span> TRANSFORM <span class=\"k\">+</span> <span class=\"s\">': '</span> <span class=\"k\">+</span> transform <span class=\"k\">+</span> <span class=\"s\">';'</span><span class=\"k\">;</span>","      <span class=\"k\">}</span>","","      rules_str <span class=\"k\">+=</span> key <span class=\"k\">+</span> <span class=\"s\">' { '</span> <span class=\"k\">+</span> style <span class=\"k\">+</span> <span class=\"s\">' } '</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","        ","    <span class=\"k\">var</span> rules <span class=\"k\">=</span> document<span class=\"k\">.</span>createTextNode","      <span class=\"k\">(</span><span class=\"s\">'@'</span> <span class=\"k\">+</span> KEY_FRAMES <span class=\"k\">+</span> <span class=\"s\">' '</span> <span class=\"k\">+</span> anim_id <span class=\"k\">+</span> <span class=\"s\">' { '</span> <span class=\"k\">+</span> rules_str <span class=\"k\">+</span> <span class=\"s\">' }'</span><span class=\"k\">);</span>","","    cssAnimation<span class=\"k\">.</span>appendChild <span class=\"k\">(</span>rules<span class=\"k\">);</span>","    document<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span><span class=\"s\">\"head\"</span><span class=\"k\">)[</span><span class=\"s\">0</span><span class=\"k\">].</span>appendChild<span class=\"k\">(</span>cssAnimation<span class=\"k\">);</span>","    ","    Animation<span class=\"k\">.</span>__css_animations <span class=\"k\">[</span>anim_id<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">[</span>cssAnimation<span class=\"k\">,</span> comp<span class=\"k\">];</span>","    ","    runComplexAnimation <span class=\"k\">();</span>","  <span class=\"k\">}</span>","","  <span class=\"k\">if</span> <span class=\"k\">(</span>isComplex<span class=\"k\">)</span> <span class=\"k\">{</span> applyComplexAnimation <span class=\"k\">();</span> <span class=\"k\">}</span>","  <span class=\"k\">else</span> <span class=\"k\">{</span> applySimpleAnimation <span class=\"k\">();</span> <span class=\"k\">}</span>","  ","  <span class=\"k\">return</span> anim_id<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> *  @class</span>","<span class=\"c\"> *  An vs.fx.Animation object, contains information for animate a vs.fx.View</span>","<span class=\"c\"> *  component.</span>","<span class=\"c\"> *  &lt;p&gt;</span>","<span class=\"c\"> *  It specifies the css properties to animate and the values for each</span>","<span class=\"c\"> *  properties.</span>","<span class=\"c\"> *  You can define one transformation or a set of transformation</span>","<span class=\"c\"> *  for your animation. In case of multiple transformation the developer</span>","<span class=\"c\"> *  an specify a duration for each transformation.</span>","<span class=\"c\"> *  &lt;p&gt;</span>","<span class=\"c\"> *  &lt;u&gt;Predefined animations&lt;/u&gt;: {@link vs.fx.TranslateAnimation},</span>","<span class=\"c\"> *  {@link vs.fx.RotateAnimation}, {@link vs.fx.RotateXYZAnimation},</span>","<span class=\"c\"> *  {@link vs.fx.ScaleAnimation}, {@link vs.fx.SkewAnimation}</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  @see vs.fx.TranslateAnimation</span>","<span class=\"c\"> *  @see vs.fx.RotateAnimation</span>","<span class=\"c\"> *  @see vs.fx.RotateXYZAnimation</span>","<span class=\"c\"> *  @see vs.fx.ScaleAnimation</span>","<span class=\"c\"> *  @see vs.fx.SkewAnimation</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  @example</span>","<span class=\"c\"> *  // animate with a constant</span>","<span class=\"c\"> *  a = new vs.fx.Animation (['rotate', '30deg']);&#226;&#128;&#139;</span>","<span class=\"c\"> *  a.process (comp);</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  // animate with a predefined variable</span>","<span class=\"c\"> *  a = new vs.fx.Animation (['translate', '$width']);&#226;&#128;&#139;</span>","<span class=\"c\"> *  a.process (comp);</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  // animate with a generic variable</span>","<span class=\"c\"> *  a = new vs.fx.Animation (['rotate', '${r}deg']);&#226;&#128;&#139;</span>","<span class=\"c\"> *  a.r = 50;</span>","<span class=\"c\"> *  a.process (comp);</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @example</span>","<span class=\"c\"> * // example of multiple transformations an durations </span>","<span class=\"c\"> * // define a animation with two transformations</span>","<span class=\"c\"> * animation = new vs.fx.Animation ([&#226;&#128;&#152;width&#226;&#128;&#153;, '100px'], ['opacity', '0'])</span>","<span class=\"c\"> * // set duration for each</span>","<span class=\"c\"> * animation.durations = ['1s', '2s'];</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @example</span>","<span class=\"c\"> * // Defining a complex animation with key frames\"</span>","<span class=\"c\"> * var translate = new vs.fx.TranslateAnimation (130, 150);</span>","<span class=\"c\"> * translate.durations = '3s';</span>","<span class=\"c\"> * translate.iterationCount = 3;</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * translate.addKeyFrame ('from', {x:0, y: 0, z:0});</span>","<span class=\"c\"> * translate.addKeyFrame (20, {x:50, y: 0, z: 0});</span>","<span class=\"c\"> * translate.addKeyFrame (40, {x:50, y: 50, z: 0});</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * translate.process (myObject);</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  @author David Thevenin</span>","<span class=\"c\"> * @name vs.fx.Animation</span>","<span class=\"c\"> *  @extends vs.core.Task</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  @constructor</span>","<span class=\"c\"> *  Main constructor</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @param {Array.&lt;string&gt;} animations The array of &lt;property, value&gt; to animate</span>","<span class=\"c\">*/</span>","<span class=\"k\">function</span> Animation <span class=\"k\">(</span>animations<span class=\"k\">)</span>","<span class=\"k\">{</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>parent <span class=\"k\">=</span> core<span class=\"k\">.</span>Task<span class=\"k\">;</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>parent <span class=\"k\">();</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>constructor <span class=\"k\">=</span> Animation<span class=\"k\">;</span>","  ","  <span class=\"k\">if</span> <span class=\"k\">(</span>arguments<span class=\"k\">.</span>length<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>setAnimations <span class=\"k\">(</span>arguments<span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>keyFrames <span class=\"k\">[</span><span class=\"s\">'100%'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","  <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * @private</span>","<span class=\"c\"> */</span>","Animation<span class=\"k\">.</span>__css_animations <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","","Animation<span class=\"k\">.</span>DEFAULT_DURATION <span class=\"k\">=</span> <span class=\"s\">'0.3s'</span><span class=\"k\">;</span>","Animation<span class=\"k\">.</span>DEFAULT_TIMING <span class=\"k\">=</span> Animation<span class=\"k\">.</span>EASE<span class=\"k\">;</span>","","Animation<span class=\"k\">.</span>prototype <span class=\"k\">=</span> <span class=\"k\">{</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * The css properties to animate</span>","<span class=\"c\">   * @type {Array.&lt;string&gt;}</span>","<span class=\"c\">   * @name vs.fx.Animation#properties</span>","<span class=\"c\">   */</span>","  properties<span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * The css values for each properties</span>","<span class=\"c\">   * @type {Array.&lt;string&gt;}</span>","<span class=\"c\">   * @name vs.fx.Animation#values</span>","<span class=\"c\">   */</span>","  values<span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * The duration for each transformation. For setting only one duration,</span>","<span class=\"c\">   * use a string (ex anim.duration = '3s')</span>","<span class=\"c\">   * @type Array.&lt;string&gt;</span>","<span class=\"c\">   * @name vs.fx.Animation#durations</span>","<span class=\"c\">   */</span>","  durations<span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * Specifies how the intermediate values used during a transition are </span>","<span class=\"c\">   * calculated. &lt;p /&gt;Use the constants to specify preset points of the curve:</span>","<span class=\"c\">   * ({@link vs.fx.Animation.EASE},</span>","<span class=\"c\">   * {@link vs.fx.Animation.LINEAR}, {@link vs.fx.Animation.EASE_IN},</span>","<span class=\"c\">   * {@link vs.fx.Animation.EASE_OUT}, {@link vs.fx.Animation.EASE_IN_OUT})</span>","<span class=\"c\">   * or the cubic-bezier function to specify your own points.</span>","<span class=\"c\">   * &lt;p /&gt;</span>","<span class=\"c\">   * Specifies a cubic B&#195;&#169;zier curve : cubic-bezier(P1x,P1y,P2x,P2y) &lt;br /&gt;</span>","<span class=\"c\">   * Parameters: &lt;br /&gt;</span>","<span class=\"c\">   * - First point in the B&#195;&#169;zier curve : P1x, P1y &lt;br /&gt;</span>","<span class=\"c\">   * - Second point in the B&#195;&#169;zier curve : P2x, P2y &lt;br /&gt;</span>","<span class=\"c\">   * </span>","<span class=\"c\">   * @type Array.&lt;string&gt;</span>","<span class=\"c\">   * @name vs.fx.Animation#timings</span>","<span class=\"c\">   */</span>","  timings<span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * Specifies the number of times an animation iterates.</span>","<span class=\"c\">   * The transformations establishes the origin for transforms applied to</span>","<span class=\"c\">   * your component with respect to its border box. By default the value</span>","<span class=\"c\">   * is 50%, 50%.</span>","<span class=\"c\">   * &lt;p&gt;The values is express as an array of percentages of the element&#226;&#128;&#153;s size,</span>","<span class=\"c\">   * origin [0] =&gt; pos X, origin [1] =&gt; pos Y</span>","<span class=\"c\">   * @type {Array.&lt;int&gt;}</span>","<span class=\"c\">   * @name vs.fx.Animation#origin</span>","<span class=\"c\">   */</span>","  origin<span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * Sets the origin for the transformations</span>","<span class=\"c\">   * By default it is set to 1.</span>","<span class=\"c\">   * For infinite interation, use 'infinite' value.</span>","<span class=\"c\">   * @type number | 'infinite'</span>","<span class=\"c\">   * @name vs.fx.Animation#iterationCount</span>","<span class=\"c\">   */</span>","  iterationCount<span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * The time to begin executing an animation after it is applied. &lt;br/&gt;</span>","<span class=\"c\">   * If 0, the animation executes as soon as it is applied. &lt;br/&gt;</span>","<span class=\"c\">   * If positive, it specifies an offset from the moment the animation is </span>","<span class=\"c\">   * applied, and the animation delays execution by that offset. &lt;br/&gt;</span>","<span class=\"c\">   * If negative, the animation executes the moment the property changes but </span>","<span class=\"c\">   * appears to begin at the specified negative offset&#226;&#128;&#148;that is, begins part-way </span>","<span class=\"c\">   * through the animation. &lt;br/&gt;</span>","<span class=\"c\">   * The unit is milliseconds.  &lt;br/&gt;</span>","<span class=\"c\">   * By default it is set to 0.</span>","<span class=\"c\">   * @type number</span>","<span class=\"c\">   * @name vs.fx.Animation#delay</span>","<span class=\"c\">   */</span>","  delay<span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * @private</span>","<span class=\"c\">   * @type Object</span>","<span class=\"c\">   * @name vs.fx.Animation#keyFrames</span>","<span class=\"c\">   */</span>","  keyFrames<span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   *  Defines the properties to animate.</span>","<span class=\"c\">   *  &lt;p&gt;</span>","<span class=\"c\">   *  When you call the method you redefines your animation, and all</span>","<span class=\"c\">   *  animation options are set to default value.</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @example</span>","<span class=\"c\">   * // define a animation with two transformations</span>","<span class=\"c\">   * animation = new vs.fx.Animation ()</span>","<span class=\"c\">   * animation.setAnimations ([[&#226;&#128;&#152;width&#226;&#128;&#153;, '100px'], ['opacity', '0']]);</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.fx.Animation#setAnimations </span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   * @param {Array.&lt;Array&gt;} animations The array of [property, value] </span>","<span class=\"c\">   *         to animate</span>","<span class=\"c\">   */</span>","  setAnimations <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>animations<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">var</span> i<span class=\"k\">,</span> prop<span class=\"k\">,</span> value<span class=\"k\">,</span> option<span class=\"k\">;</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>properties <span class=\"k\">=</span> <span class=\"k\">[];</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>values <span class=\"k\">=</span> <span class=\"k\">[];</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>timings <span class=\"k\">=</span> <span class=\"k\">[];</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>keyFrames <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>origin <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>durations <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>timings <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","    ","    <span class=\"k\">for</span> <span class=\"k\">(</span>i <span class=\"k\">=</span> <span class=\"s\">0</span> <span class=\"k\">;</span> i <span class=\"k\">&lt;</span> animations<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++)</span>","    <span class=\"k\">{</span>","      option <span class=\"k\">=</span> animations <span class=\"k\">[</span>i<span class=\"k\">];</span>","      <span class=\"k\">if</span> <span class=\"k\">(!</span>util<span class=\"k\">.</span>isArray <span class=\"k\">(</span>option<span class=\"k\">)</span> <span class=\"k\">||</span> option<span class=\"k\">.</span>length <span class=\"k\">!==</span> <span class=\"s\">2</span><span class=\"k\">)</span>","      <span class=\"k\">{</span>","        console<span class=\"k\">.</span>warn <span class=\"k\">(</span><span class=\"s\">'vs.fx.Animation, invalid animations'</span><span class=\"k\">);</span>","        <span class=\"k\">continue</span><span class=\"k\">;</span>","      <span class=\"k\">}</span>","      prop <span class=\"k\">=</span> option <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span> value <span class=\"k\">=</span> option <span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">];</span>","      <span class=\"k\">if</span> <span class=\"k\">(!</span>util<span class=\"k\">.</span>isString <span class=\"k\">(</span>prop<span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"k\">!</span>util<span class=\"k\">.</span>isString <span class=\"k\">(</span>value<span class=\"k\">))</span>","      <span class=\"k\">{</span>","        console<span class=\"k\">.</span>warn <span class=\"k\">(</span><span class=\"s\">'vs.fx.Animation, invalid constructor argument option: ['</span> <span class=\"k\">+</span> ","          prop <span class=\"k\">+</span> <span class=\"s\">', '</span> <span class=\"k\">+</span> value <span class=\"k\">+</span> <span class=\"s\">']'</span><span class=\"k\">);</span>","        <span class=\"k\">continue</span><span class=\"k\">;</span>","      <span class=\"k\">}</span>","      ","      <span class=\"k\">this</span><span class=\"k\">.</span>properties<span class=\"k\">.</span>push <span class=\"k\">(</span>prop<span class=\"k\">);</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>values<span class=\"k\">.</span>push <span class=\"k\">(</span>value<span class=\"k\">);</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   *  Add an animation Key frames.</span>","<span class=\"c\">   *  By default an animation does not have key frames. But you can</span>","<span class=\"c\">   *  define a complexe animation with key frames.</span>","<span class=\"c\">   *  &lt;br /&gt;</span>","<span class=\"c\">   *  You have to define at least two key frames 'from' and 'to'.</span>","<span class=\"c\">   *  Other frames are define as percentage value of the animation.</span>","<span class=\"c\">   *  &lt;p /&gt;</span>","<span class=\"c\">   *  @example</span>","<span class=\"c\">   *  var translate = new vs.fx.TranslateAnimation (130, 150);</span>","<span class=\"c\">   * </span>","<span class=\"c\">   *  translate.addKeyFrame ('from', {x:0, y: 0, z:0});</span>","<span class=\"c\">   *  translate.addKeyFrame (20, {x:50, y: 0, z: 0});</span>","<span class=\"c\">   *  translate.addKeyFrame (40, {x:50, y: 50, z: 0});</span>","<span class=\"c\">   *</span>","<span class=\"c\">   *  @example</span>","<span class=\"c\">   *  var translate = new vs.fx.Animation (['translateY','100px'],['opacity', '0']);</span>","<span class=\"c\">   * </span>","<span class=\"c\">   *  translate.addKeyFrame ('from', ['0px', '1']);</span>","<span class=\"c\">   *  translate.addKeyFrame (20, ['50px', '1']);</span>","<span class=\"c\">   *  translate.addKeyFrame (40, ['80px', '1']);</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.fx.Animation#addKeyFrame </span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   * @param {string | number} pos The percentage value of animation</span>","<span class=\"c\">   * @param {Object | Array} values the object containing values for</span>","<span class=\"c\">   *         the animation</span>","<span class=\"c\">   */</span>","  addKeyFrame <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>pos<span class=\"k\">,</span> values<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>values<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>pos <span class=\"k\">===</span> <span class=\"s\">'from'</span><span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>keyFrames <span class=\"k\">[</span><span class=\"s\">'0%'</span><span class=\"k\">]</span> <span class=\"k\">=</span> values<span class=\"k\">;</span>","      <span class=\"k\">return</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>pos <span class=\"k\">===</span> <span class=\"s\">'to'</span><span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>keyFrames <span class=\"k\">[</span><span class=\"s\">'100%'</span><span class=\"k\">]</span> <span class=\"k\">=</span> values<span class=\"k\">;</span>","      <span class=\"k\">return</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>util<span class=\"k\">.</span>isNumber <span class=\"k\">(</span>pos<span class=\"k\">)</span> <span class=\"k\">||</span> pos <span class=\"k\">&lt;</span> <span class=\"s\">0</span> <span class=\"k\">||</span> pos <span class=\"k\">&gt;</span> <span class=\"s\">100</span><span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    ","    <span class=\"k\">this</span><span class=\"k\">.</span>keyFrames <span class=\"k\">[</span>pos<span class=\"k\">+</span><span class=\"s\">'%'</span><span class=\"k\">]</span> <span class=\"k\">=</span> values<span class=\"k\">;</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   *  Use this function for animate your graphic object.</span>","<span class=\"c\">   *  &lt;p&gt;</span>","<span class=\"c\">   *  You can set a callback function that will be call at the end of animation.</span>","<span class=\"c\">   *  Associated to the callback you can defined a runtime context. This context</span>","<span class=\"c\">   *  could be a object.</span>","<span class=\"c\">   *</span>","<span class=\"c\">   *  @example</span>","<span class=\"c\">   *  obj.prototype.endAnimation = function (event)</span>","<span class=\"c\">   *  { ... }</span>","<span class=\"c\">   *</span>","<span class=\"c\">   *  obj.prototype.animate = function ()</span>","<span class=\"c\">   *  {</span>","<span class=\"c\">   *    myAnimation.process (a_gui_object, this.endAnimation, this);</span>","<span class=\"c\">   *  }</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.fx.Animation#process </span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   * @param {vs.fx.View} comp The component the view will be animated</span>","<span class=\"c\">   * @param {Function} clb an optional callback to call at the end of animation</span>","<span class=\"c\">   * @param {Object} ctx an optional execution context associated to the</span>","<span class=\"c\">   *          callback</span>","<span class=\"c\">   * @return {String} return the identifier of the animation process. You can</span>","<span class=\"c\">   *       use it to stop the animation for instance.</span>","<span class=\"c\">   */</span>","  process <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>comp<span class=\"k\">,</span> clb<span class=\"k\">,</span> ctx<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">return</span> procesAnimation <span class=\"k\">(</span>comp<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">,</span> clb<span class=\"k\">,</span> ctx<span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","<span class=\"c\">/********************************************************************</span>","<span class=\"c\">                  Task implementation</span>","<span class=\"c\">********************************************************************/</span>"," ","  <span class=\"c\">/**</span>","<span class=\"c\">   *  Clone the current animation.</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.fx.Animation#clone </span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   * @return {vs.fx.Animation} the clone animation</span>","<span class=\"c\">   */</span>","  clone<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    <span class=\"k\">var</span> anim <span class=\"k\">=</span> <span class=\"k\">new</span> Animation <span class=\"k\">(),</span> key<span class=\"k\">,</span> data<span class=\"k\">;</span>","    anim<span class=\"k\">.</span>keyFrames <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","    anim<span class=\"k\">.</span>keyFrames <span class=\"k\">[</span><span class=\"s\">'100%'</span><span class=\"k\">]</span> <span class=\"k\">=</span> anim<span class=\"k\">;</span>","","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>properties<span class=\"k\">)</span>","    <span class=\"k\">{</span> anim<span class=\"k\">.</span>properties <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>properties<span class=\"k\">.</span>slice <span class=\"k\">();</span> <span class=\"k\">}</span>","    <span class=\"k\">else</span> <span class=\"k\">{</span> anim<span class=\"k\">.</span>properties <span class=\"k\">=</span> <span class=\"k\">[];</span> <span class=\"k\">}</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>values<span class=\"k\">)</span>","    <span class=\"k\">{</span> anim<span class=\"k\">.</span>values <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>values<span class=\"k\">.</span>slice <span class=\"k\">();</span> <span class=\"k\">}</span>","    <span class=\"k\">else</span> <span class=\"k\">{</span> anim<span class=\"k\">.</span>values <span class=\"k\">=</span> <span class=\"k\">[];</span> <span class=\"k\">}</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>durations<span class=\"k\">)</span>","    <span class=\"k\">{</span> anim<span class=\"k\">.</span>durations <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>durations<span class=\"k\">;</span> <span class=\"k\">}</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>timings<span class=\"k\">)</span>","    <span class=\"k\">{</span> anim<span class=\"k\">.</span>timings <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>timings<span class=\"k\">.</span>slice <span class=\"k\">();</span> <span class=\"k\">}</span>","    <span class=\"k\">else</span> <span class=\"k\">{</span> anim<span class=\"k\">.</span>timings <span class=\"k\">=</span> <span class=\"k\">[];</span> <span class=\"k\">}</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>origin<span class=\"k\">)</span>","    <span class=\"k\">{</span> anim<span class=\"k\">.</span>origin <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>origin<span class=\"k\">.</span>slice <span class=\"k\">();</span> <span class=\"k\">}</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>keyFrames<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">for</span> <span class=\"k\">(</span>key <span class=\"k\">in</span> <span class=\"k\">this</span><span class=\"k\">.</span>keyFrames<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>key <span class=\"k\">===</span> <span class=\"s\">'100%'</span><span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">continue</span><span class=\"k\">;</span> <span class=\"k\">}</span>","        data <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>keyFrames <span class=\"k\">[</span>key<span class=\"k\">];</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>util<span class=\"k\">.</span>isArray <span class=\"k\">(</span>data<span class=\"k\">))</span> <span class=\"k\">{</span> anim<span class=\"k\">.</span>keyFrames <span class=\"k\">[</span>key<span class=\"k\">]</span> <span class=\"k\">=</span> data<span class=\"k\">.</span>slice <span class=\"k\">();</span> <span class=\"k\">}</span>","        <span class=\"k\">else</span> <span class=\"k\">{</span> anim<span class=\"k\">.</span>keyFrames <span class=\"k\">[</span>key<span class=\"k\">]</span> <span class=\"k\">=</span> vs<span class=\"k\">.</span>util<span class=\"k\">.</span>clone <span class=\"k\">(</span>data<span class=\"k\">);</span> <span class=\"k\">}</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    ","    anim<span class=\"k\">.</span>iterationCount <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>iterationCount<span class=\"k\">;</span>","    anim<span class=\"k\">.</span>delay <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>delay<span class=\"k\">;</span>","    ","    <span class=\"k\">return</span> anim<span class=\"k\">;</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","<span class=\"c\">/********************************************************************</span>","<span class=\"c\">                  Task implementation</span>","<span class=\"c\">********************************************************************/</span>"," ","  <span class=\"c\">/**</span>","<span class=\"c\">   *  Starts the task</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.fx.Animation#start </span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   * @param {any} param any parameter (scalar, Array, Object)</span>","<span class=\"c\">   */</span>","  start<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>param<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>process <span class=\"k\">(</span>param<span class=\"k\">);</span>","  <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","util<span class=\"k\">.</span>extendClass <span class=\"k\">(</span>Animation<span class=\"k\">,</span> core<span class=\"k\">.</span>Task<span class=\"k\">);</span>","","<span class=\"c\">/********************************************************************</span>","<span class=\"c\">                  Define class properties</span>","<span class=\"c\">********************************************************************/</span>","","util<span class=\"k\">.</span>defineClassProperties <span class=\"k\">(</span>Animation<span class=\"k\">,</span> <span class=\"k\">{</span>","  <span class=\"s\">'duration'</span><span class=\"k\">:</span> <span class=\"k\">{</span>","    <span class=\"c\">/** </span>","<span class=\"c\">     * Getter/Setter for animation duration</span>","<span class=\"c\">     * @name vs.fx.Animation#duration </span>","<span class=\"c\">     *</span>","<span class=\"c\">     * @type {String}</span>","<span class=\"c\">     */</span> ","    set <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>v<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(!</span>v<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span> ","      ","      <span class=\"k\">this</span><span class=\"k\">.</span>durations <span class=\"k\">=</span> <span class=\"k\">[</span>v<span class=\"k\">];</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","    ","    <span class=\"c\">/** </span>","<span class=\"c\">     * @ignore</span>","<span class=\"c\">     */</span> ","    get <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>durations <span class=\"k\">&amp;&amp;</span> <span class=\"k\">this</span><span class=\"k\">.</span>durations<span class=\"k\">.</span>length<span class=\"k\">)</span>","      <span class=\"k\">{</span> <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>durations <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span> <span class=\"k\">}</span>","      <span class=\"k\">else</span>","      <span class=\"k\">{</span> <span class=\"k\">return</span> Animation<span class=\"k\">.</span>DEFAULT_DURATION<span class=\"k\">;</span> <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  <span class=\"s\">'timing'</span><span class=\"k\">:</span> <span class=\"k\">{</span>","    <span class=\"c\">/** </span>","<span class=\"c\">     * Getter/Setter for animation timing</span>","<span class=\"c\">     * @name vs.fx.Animation#timing </span>","<span class=\"c\">     *</span>","<span class=\"c\">     * @type {String}</span>","<span class=\"c\">     */</span> ","    set <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>v<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(!</span>v<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span> ","      ","      <span class=\"k\">this</span><span class=\"k\">.</span>timings <span class=\"k\">=</span> <span class=\"k\">[</span>v<span class=\"k\">];</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","    ","    <span class=\"c\">/** </span>","<span class=\"c\">     * @ignore</span>","<span class=\"c\">     */</span> ","    get <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>timings <span class=\"k\">&amp;&amp;</span> <span class=\"k\">this</span><span class=\"k\">.</span>timings<span class=\"k\">.</span>length<span class=\"k\">)</span>","      <span class=\"k\">{</span> <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>timings <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span> <span class=\"k\">}</span>","      <span class=\"k\">else</span>","      <span class=\"k\">{</span> <span class=\"k\">return</span> Animation<span class=\"k\">.</span>EASE<span class=\"k\">;</span> <span class=\"k\">}</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">);</span>","","<span class=\"c\">/*************************************************************</span>","<span class=\"c\">                Timing Function</span>","<span class=\"c\">*************************************************************/</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * The ease timing function</span>","<span class=\"c\"> * Equivalent to cubic-bezier(0.25, 0.1, 0.25, 1.0)</span>","<span class=\"c\"> * @name vs.fx.Animation.EASE</span>","<span class=\"c\"> * @const</span>","<span class=\"c\"> */</span>","Animation<span class=\"k\">.</span>EASE <span class=\"k\">=</span> <span class=\"s\">'ease'</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * The linear timing function</span>","<span class=\"c\"> * Equivalent to cubic-bezier(0.0, 0.0, 1.0, 1.0)</span>","<span class=\"c\"> * @name vs.fx.Animation.LINEAR</span>","<span class=\"c\"> * @const</span>","<span class=\"c\"> */</span>","Animation<span class=\"k\">.</span>LINEAR <span class=\"k\">=</span> <span class=\"s\">'linear'</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * The ease in timing function</span>","<span class=\"c\"> * Equivalent to cubic-bezier(0.42, 0, 1.0, 1.0)</span>","<span class=\"c\"> * @name vs.fx.Animation.EASE_IN</span>","<span class=\"c\"> * @const</span>","<span class=\"c\"> */</span>","Animation<span class=\"k\">.</span>EASE_IN <span class=\"k\">=</span> <span class=\"s\">'ease-in'</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * The ease out timing function</span>","<span class=\"c\"> * Equivalent to cubic-bezier(0, 0, 0.58, 1.0)</span>","<span class=\"c\"> * @name vs.fx.Animation.EASE_OUT</span>","<span class=\"c\"> * @const</span>","<span class=\"c\"> */</span>","Animation<span class=\"k\">.</span>EASE_OUT <span class=\"k\">=</span> <span class=\"s\">'ease-out'</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * The ease in out timing function</span>","<span class=\"c\"> * Equivalent to cubic-bezier(0.42, 0, 0.58, 1.0)</span>","<span class=\"c\"> * @name vs.fx.Animation.EASE_IN_OUT</span>","<span class=\"c\"> * @const</span>","<span class=\"c\"> */</span>","Animation<span class=\"k\">.</span>EASE_IN_OUT <span class=\"k\">=</span> <span class=\"s\">'ease-in-out'</span>","","<span class=\"c\">/*************************************************************</span>","<span class=\"c\">                Specifics animations</span>","<span class=\"c\">*************************************************************/</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> *  @class</span>","<span class=\"c\"> *  Animation for translate a object view over x, y, and z axes.</span>","<span class=\"c\"> *  &lt;p&gt;</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  @example</span>","<span class=\"c\"> *  // declare the animation</span>","<span class=\"c\"> *  var translate = new vs.fx.TranslateAnimation (50, 50, 0);</span>","<span class=\"c\"> *  translate.process (comp);</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  // reconfigure the animation</span>","<span class=\"c\"> *  translate.x = 40;</span>","<span class=\"c\"> *  translate.y = 140;</span>","<span class=\"c\"> *  translate.process (comp);</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  @author David Thevenin</span>","<span class=\"c\"> * @name vs.fx.TranslateAnimation</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  @constructor</span>","<span class=\"c\"> *  Main constructor</span>","<span class=\"c\"> *  @extends vs.fx.Animation</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @param {number} x The translation value along the X axis</span>","<span class=\"c\"> * @param {number} y The translation value along the Y axis</span>","<span class=\"c\"> * @param {number} z The translation value along the Z axis if 3d css transform is possible</span>","<span class=\"c\">*/</span>","TranslateAnimation <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>x<span class=\"k\">,</span> y<span class=\"k\">,</span> z<span class=\"k\">)</span>","<span class=\"k\">{</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>parent <span class=\"k\">=</span> Animation<span class=\"k\">;</span>","  <span class=\"k\">if</span> <span class=\"k\">(!</span>arguments<span class=\"k\">.</span>length<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>parent <span class=\"k\">();</span>","  <span class=\"k\">}</span>","  <span class=\"k\">else</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>SUPPORT_3D_TRANSFORM<span class=\"k\">)</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>parent <span class=\"k\">([</span><span class=\"s\">'translate'</span><span class=\"k\">,</span> <span class=\"s\">'${x}px,${y}px,${z}px'</span><span class=\"k\">]);</span>","    <span class=\"k\">else</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>parent <span class=\"k\">([</span><span class=\"s\">'translate'</span><span class=\"k\">,</span> <span class=\"s\">'${x}px,${y}px'</span><span class=\"k\">]);</span>","  ","    <span class=\"k\">if</span> <span class=\"k\">(</span>util<span class=\"k\">.</span>isNumber <span class=\"k\">(</span>x<span class=\"k\">))</span> <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>x <span class=\"k\">=</span> x<span class=\"k\">;</span> <span class=\"k\">}</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>util<span class=\"k\">.</span>isNumber <span class=\"k\">(</span>y<span class=\"k\">))</span> <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>y <span class=\"k\">=</span> y<span class=\"k\">;</span> <span class=\"k\">}</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>util<span class=\"k\">.</span>isNumber <span class=\"k\">(</span>z<span class=\"k\">))</span> <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>z <span class=\"k\">=</span> z<span class=\"k\">;</span> <span class=\"k\">}</span>","  <span class=\"k\">}</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>constructor <span class=\"k\">=</span> TranslateAnimation<span class=\"k\">;</span>","<span class=\"k\">}</span>","","TranslateAnimation<span class=\"k\">.</span>prototype <span class=\"k\">=</span> <span class=\"k\">{</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * The translation value along the X axis</span>","<span class=\"c\">   * @public</span>","<span class=\"c\">   * @type {number}</span>","<span class=\"c\">   * @name vs.fx.TranslateAnimation#x </span>","<span class=\"c\">   */</span>","  x<span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * The translation value along the Y axis</span>","<span class=\"c\">   * @public</span>","<span class=\"c\">   * @type {number}</span>","<span class=\"c\">   * @name vs.fx.TranslateAnimation#y </span>","<span class=\"c\">   */</span>","  y<span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * The translation value along the Z axis</span>","<span class=\"c\">   * @public</span>","<span class=\"c\">   * @type {number}</span>","<span class=\"c\">   * @name vs.fx.TranslateAnimation#z </span>","<span class=\"c\">   */</span>","  z<span class=\"k\">:</span> <span class=\"s\">0</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","util<span class=\"k\">.</span>extendClass <span class=\"k\">(</span>TranslateAnimation<span class=\"k\">,</span> Animation<span class=\"k\">);</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> *  @class</span>","<span class=\"c\"> *  Rotate your object any number of degrees along the Z axis.</span>","<span class=\"c\"> *  &lt;p&gt;</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  @example</span>","<span class=\"c\"> *  // declare the animation</span>","<span class=\"c\"> *  var rotation = new vs.fx.RotateAnimation (50);</span>","<span class=\"c\"> *  rotation.process (comp);</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  // reconfigure the animation</span>","<span class=\"c\"> *  rotation.deg = 40;</span>","<span class=\"c\"> *  rotation.process (comp);</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  @author David Thevenin</span>","<span class=\"c\"> * @name vs.fx.RotateAnimation</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  @constructor</span>","<span class=\"c\"> *  Main constructor</span>","<span class=\"c\"> *  @extends vs.fx.Animation</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @param {number} deg The rotation value along the Z axis</span>","<span class=\"c\">*/</span>","RotateAnimation <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>deg<span class=\"k\">)</span>","<span class=\"k\">{</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>parent <span class=\"k\">=</span> Animation<span class=\"k\">;</span>","  <span class=\"k\">if</span> <span class=\"k\">(!</span>arguments<span class=\"k\">.</span>length<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>parent <span class=\"k\">();</span>","  <span class=\"k\">}</span>","  <span class=\"k\">else</span>","  <span class=\"k\">{</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>parent <span class=\"k\">([</span><span class=\"s\">'rotate'</span><span class=\"k\">,</span> <span class=\"s\">'${deg}deg'</span><span class=\"k\">]);</span>","  ","    <span class=\"k\">if</span> <span class=\"k\">(</span>util<span class=\"k\">.</span>isNumber <span class=\"k\">(</span>deg<span class=\"k\">))</span> <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>deg <span class=\"k\">=</span> deg<span class=\"k\">;</span> <span class=\"k\">}</span>","  <span class=\"k\">}</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>constructor <span class=\"k\">=</span> RotateAnimation<span class=\"k\">;</span>","<span class=\"k\">}</span>","","RotateAnimation<span class=\"k\">.</span>prototype <span class=\"k\">=</span> <span class=\"k\">{</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * The rotation value along the Z axis</span>","<span class=\"c\">   * @public</span>","<span class=\"c\">   * @type {number}</span>","<span class=\"c\">   * @name vs.fx.RotateAnimation#deg</span>","<span class=\"c\">   */</span>","  deg<span class=\"k\">:</span> <span class=\"s\">0</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","util<span class=\"k\">.</span>extendClass <span class=\"k\">(</span>RotateAnimation<span class=\"k\">,</span> Animation<span class=\"k\">);</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> *  @class</span>","<span class=\"c\"> *  Rotate your object any number of degrees over the X, Y and Z axes.</span>","<span class=\"c\"> *  &lt;p&gt;</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  @example</span>","<span class=\"c\"> *  // declare the animation</span>","<span class=\"c\"> *  var rotation = new vs.fx.RotateXYZAnimation (50, 50, 10);</span>","<span class=\"c\"> *  rotation.process (comp);</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  @author David Thevenin</span>","<span class=\"c\"> * @name vs.fx.RotateXYZAnimation</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  @constructor</span>","<span class=\"c\"> *  Main constructor</span>","<span class=\"c\"> *  @extends vs.fx.Animation</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @param {number} degX The rotation value along the X axis</span>","<span class=\"c\"> * @param {number} degY The rotation value along the Y axis</span>","<span class=\"c\"> * @param {number} degZ The rotation value along the Z axis</span>","<span class=\"c\">*/</span>","RotateXYZAnimation <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>degX<span class=\"k\">,</span> degY<span class=\"k\">,</span> degZ<span class=\"k\">)</span>","<span class=\"k\">{</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>parent <span class=\"k\">=</span> Animation<span class=\"k\">;</span>","  <span class=\"k\">if</span> <span class=\"k\">(!</span>arguments<span class=\"k\">.</span>length<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>parent <span class=\"k\">();</span>","  <span class=\"k\">}</span>","  <span class=\"k\">else</span>","  <span class=\"k\">{</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>parent <span class=\"k\">([</span><span class=\"s\">'rotateX'</span><span class=\"k\">,</span> <span class=\"s\">'${degX}deg'</span><span class=\"k\">],</span>","      <span class=\"k\">[</span><span class=\"s\">'rotateY'</span><span class=\"k\">,</span> <span class=\"s\">'${degY}deg'</span><span class=\"k\">],</span> <span class=\"k\">[</span><span class=\"s\">'rotate'</span> <span class=\"k\">,</span><span class=\"s\">'${degZ}deg'</span><span class=\"k\">]);</span>","    ","    <span class=\"k\">if</span> <span class=\"k\">(</span>util<span class=\"k\">.</span>isNumber <span class=\"k\">(</span>degX<span class=\"k\">))</span> <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>degX <span class=\"k\">=</span> degX<span class=\"k\">;</span> <span class=\"k\">}</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>util<span class=\"k\">.</span>isNumber <span class=\"k\">(</span>degY<span class=\"k\">))</span> <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>degY <span class=\"k\">=</span> degY<span class=\"k\">;</span> <span class=\"k\">}</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>util<span class=\"k\">.</span>isNumber <span class=\"k\">(</span>degZ<span class=\"k\">))</span> <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>degZ <span class=\"k\">=</span> degZ<span class=\"k\">;</span> <span class=\"k\">}</span>","  <span class=\"k\">}</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>constructor <span class=\"k\">=</span> RotateXYZAnimation<span class=\"k\">;</span>","<span class=\"k\">}</span>","","RotateXYZAnimation<span class=\"k\">.</span>prototype <span class=\"k\">=</span> <span class=\"k\">{</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * The rotation value along the X axis</span>","<span class=\"c\">   * @public</span>","<span class=\"c\">   * @type {number}</span>","<span class=\"c\">   * @name vs.fx.RotateXYZAnimation#degX</span>","<span class=\"c\">   */</span>","  degX<span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * The rotation value along the Y axis</span>","<span class=\"c\">   * @public</span>","<span class=\"c\">   * @type {number}</span>","<span class=\"c\">   * @name vs.fx.RotateXYZAnimation#degY</span>","<span class=\"c\">   */</span>","  degY<span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * The rotation value along the Z axis</span>","<span class=\"c\">   * @public</span>","<span class=\"c\">   * @type {number}</span>","<span class=\"c\">   * @name vs.fx.RotateXYZAnimation#degZ</span>","<span class=\"c\">   */</span>","  degZ<span class=\"k\">:</span> <span class=\"s\">0</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","util<span class=\"k\">.</span>extendClass <span class=\"k\">(</span>RotateXYZAnimation<span class=\"k\">,</span> Animation<span class=\"k\">);</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> *  @class</span>","<span class=\"c\"> *  Scale your object over the X and Y axes</span>","<span class=\"c\"> *  &lt;p&gt;</span>","<span class=\"c\"> *  If the second parameter is not provided, it is takes a value equal to</span>","<span class=\"c\"> *  the first.</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  @example</span>","<span class=\"c\"> *  // declare the animation</span>","<span class=\"c\"> *  var scale = new vs.fx.ScaleAnimation (0.5, 1);</span>","<span class=\"c\"> *  scale.process (comp);</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  @author David Thevenin</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  @constructor</span>","<span class=\"c\"> *  Main constructor</span>","<span class=\"c\"> *  @extends vs.fx.Animation</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @name vs.fx.ScaleAnimation</span>","<span class=\"c\"> * @param {number} sx The scale value along the X axis</span>","<span class=\"c\"> * @param {number} sy The scale value along the Y axis</span>","<span class=\"c\">*/</span>","ScaleAnimation <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>sx<span class=\"k\">,</span> sy<span class=\"k\">)</span>","<span class=\"k\">{</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>parent <span class=\"k\">=</span> Animation<span class=\"k\">;</span>","  <span class=\"k\">if</span> <span class=\"k\">(!</span>arguments<span class=\"k\">.</span>length<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>parent <span class=\"k\">();</span>","  <span class=\"k\">}</span>","  <span class=\"k\">else</span>","  <span class=\"k\">{</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>parent <span class=\"k\">([</span><span class=\"s\">'scale'</span><span class=\"k\">,</span> <span class=\"s\">'${sx},${sy}'</span><span class=\"k\">]);</span>","    ","    <span class=\"k\">if</span> <span class=\"k\">(</span>util<span class=\"k\">.</span>isNumber <span class=\"k\">(</span>sx<span class=\"k\">))</span> <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>sx <span class=\"k\">=</span> sx<span class=\"k\">;</span> <span class=\"k\">}</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>util<span class=\"k\">.</span>isNumber <span class=\"k\">(</span>sy<span class=\"k\">))</span> <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>sy <span class=\"k\">=</span> sy<span class=\"k\">;</span> <span class=\"k\">}</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>util<span class=\"k\">.</span>isNumber <span class=\"k\">(</span>sy<span class=\"k\">))</span> <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>sy <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>sx<span class=\"k\">;</span> <span class=\"k\">}</span>","  <span class=\"k\">}</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>constructor <span class=\"k\">=</span> ScaleAnimation<span class=\"k\">;</span>","<span class=\"k\">}</span>","","ScaleAnimation<span class=\"k\">.</span>prototype <span class=\"k\">=</span> <span class=\"k\">{</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * The scale value along the X axis</span>","<span class=\"c\">   * @public</span>","<span class=\"c\">   * @type {number}</span>","<span class=\"c\">   * @name vs.fx.ScaleAnimation#sx</span>","<span class=\"c\">   */</span>","  sx<span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * The scale value along the Y axis</span>","<span class=\"c\">   * @public</span>","<span class=\"c\">   * @type {number}</span>","<span class=\"c\">   * @name vs.fx.ScaleAnimation#sy</span>","<span class=\"c\">   */</span>","  sy<span class=\"k\">:</span> <span class=\"s\">1</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","util<span class=\"k\">.</span>extendClass <span class=\"k\">(</span>ScaleAnimation<span class=\"k\">,</span> Animation<span class=\"k\">);</span>","","","<span class=\"c\">/**</span>","<span class=\"c\"> *  @class</span>","<span class=\"c\"> *  Skew your object over the X and Y axes</span>","<span class=\"c\"> *  &lt;p&gt;</span>","<span class=\"c\"> *  If the second parameter is not provided, it is takes a value equal to</span>","<span class=\"c\"> *  the first.</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  @example</span>","<span class=\"c\"> *  // declare the animation</span>","<span class=\"c\"> *  var scale = new vs.fx.SkewAnimation (0.5, 1);</span>","<span class=\"c\"> *  scale.process (comp);</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  @author David Thevenin</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  @constructor</span>","<span class=\"c\"> *  Main constructor</span>","<span class=\"c\"> *  @extends vs.fx.Animation</span>","<span class=\"c\"> * @name vs.fx.SkewAnimation</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @param {number} x The scale value along the X axis</span>","<span class=\"c\"> * @param {number} y The scale value along the Y axis</span>","<span class=\"c\">*/</span>","SkewAnimation <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>ax<span class=\"k\">,</span> ay<span class=\"k\">)</span>","<span class=\"k\">{</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>parent <span class=\"k\">=</span> Animation<span class=\"k\">;</span>","  <span class=\"k\">if</span> <span class=\"k\">(!</span>arguments<span class=\"k\">.</span>length<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>parent <span class=\"k\">();</span>","  <span class=\"k\">}</span>","  <span class=\"k\">else</span>","  <span class=\"k\">{</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>parent <span class=\"k\">([</span><span class=\"s\">'skew'</span><span class=\"k\">,</span> <span class=\"s\">'${ax}deg,${ay}deg'</span><span class=\"k\">]);</span>","    ","    <span class=\"k\">if</span> <span class=\"k\">(</span>util<span class=\"k\">.</span>isNumber <span class=\"k\">(</span>ax<span class=\"k\">))</span> <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>ax <span class=\"k\">=</span> ax<span class=\"k\">;</span> <span class=\"k\">}</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>util<span class=\"k\">.</span>isNumber <span class=\"k\">(</span>ay<span class=\"k\">))</span> <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>ay <span class=\"k\">=</span> ay<span class=\"k\">;</span> <span class=\"k\">}</span>","  <span class=\"k\">}</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>constructor <span class=\"k\">=</span> SkewAnimation<span class=\"k\">;</span>","<span class=\"k\">}</span>","","SkewAnimation<span class=\"k\">.</span>prototype <span class=\"k\">=</span> <span class=\"k\">{</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * Specifies a skew transformation along the X axis by the given angle.</span>","<span class=\"c\">   * @public</span>","<span class=\"c\">   * @type {number}</span>","<span class=\"c\">   * @name vs.fx.SkewAnimation#ax</span>","<span class=\"c\">   */</span>","  ax<span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   *Specifies a skew transformation along the X axis by the given angle.</span>","<span class=\"c\">   * @public</span>","<span class=\"c\">   * @type {number}</span>","<span class=\"c\">   * @name vs.fx.SkewAnimation#ay</span>","<span class=\"c\">   */</span>","  ay<span class=\"k\">:</span> <span class=\"s\">0</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","util<span class=\"k\">.</span>extendClass <span class=\"k\">(</span>SkewAnimation<span class=\"k\">,</span> Animation<span class=\"k\">);</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> *  @class</span>","<span class=\"c\"> *  Animate the object' opacity</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  @example</span>","<span class=\"c\"> *  // declare the pulseo opacity animation</span>","<span class=\"c\"> *  var pulse = new vs.fx.OpacityAnimation (1);</span>","<span class=\"c\"> *  pulse.addKeyFrame ('from', {value: 1});</span>","<span class=\"c\"> *  pulse.addKeyFrame (12, {value: 0.5});</span>","<span class=\"c\"> *  pulse.addKeyFrame (25, {value: 1});</span>","<span class=\"c\"> *  pulse.addKeyFrame (37, {value: 0.5});</span>","<span class=\"c\"> *  pulse.addKeyFrame (50, {value: 1});</span>","<span class=\"c\"> *  pulse.addKeyFrame (62, {value: 0.5});</span>","<span class=\"c\"> *  pulse.addKeyFrame (75, {value: 1});</span>","<span class=\"c\"> *  pulse.addKeyFrame (87, {value: 0.5});</span>","<span class=\"c\"> *  pulse.durations = '7s';</span>","<span class=\"c\"> *  pulse.timings = vs.fx.Animation.LINEAR;</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  @author David Thevenin</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  @constructor</span>","<span class=\"c\"> *  Main constructor</span>","<span class=\"c\"> *  @extends vs.fx.Animation</span>","<span class=\"c\"> * @name vs.fx.OpacityAnimation</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @param {number} value The opacity value</span>","<span class=\"c\">*/</span>","OpacityAnimation <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>value<span class=\"k\">)</span>","<span class=\"k\">{</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>parent <span class=\"k\">=</span> Animation<span class=\"k\">;</span>","  <span class=\"k\">if</span> <span class=\"k\">(!</span>arguments<span class=\"k\">.</span>length<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>parent <span class=\"k\">();</span>","  <span class=\"k\">}</span>","  <span class=\"k\">else</span>","  <span class=\"k\">{</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>parent <span class=\"k\">([</span><span class=\"s\">'opacity'</span><span class=\"k\">,</span> <span class=\"s\">'${value}'</span><span class=\"k\">]);</span>","    ","    <span class=\"k\">if</span> <span class=\"k\">(</span>util<span class=\"k\">.</span>isNumber <span class=\"k\">(</span>value<span class=\"k\">))</span> <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>value <span class=\"k\">=</span> value<span class=\"k\">;</span> <span class=\"k\">}</span>","  <span class=\"k\">}</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>constructor <span class=\"k\">=</span> OpacityAnimation<span class=\"k\">;</span>","<span class=\"k\">}</span>","","OpacityAnimation<span class=\"k\">.</span>prototype <span class=\"k\">=</span> <span class=\"k\">{</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * Specifies the opacity value</span>","<span class=\"c\">   * @public</span>","<span class=\"c\">   * @name vs.fx.OpacityAnimation#value</span>","<span class=\"c\">   * @type {number}</span>","<span class=\"c\">   */</span>","  value<span class=\"k\">:</span> <span class=\"s\">1</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","util<span class=\"k\">.</span>extendClass <span class=\"k\">(</span>OpacityAnimation<span class=\"k\">,</span> Animation<span class=\"k\">);</span>","","<span class=\"c\">/*************************************************************</span>","<span class=\"c\">                Predefined animation</span>","<span class=\"c\">*************************************************************/</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> *  Slide a object to right.</span>","<span class=\"c\"> * @name vs.fx.Animation.SlideOutRight</span>","<span class=\"c\"> *  @type vs.fx.Animation</span>","<span class=\"c\"> */</span>","Animation<span class=\"k\">.</span>SlideOutRight <span class=\"k\">=</span> <span class=\"k\">new</span> Animation <span class=\"k\">([</span><span class=\"s\">'translateX'</span><span class=\"k\">,</span> <span class=\"s\">'$width'</span><span class=\"k\">]);</span>","Animation<span class=\"k\">.</span>SlideOutRight<span class=\"k\">.</span>addKeyFrame <span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"k\">[</span><span class=\"s\">'0px'</span><span class=\"k\">]);</span>","<span class=\"c\">/**</span>","<span class=\"c\"> *  Slide a object to left.</span>","<span class=\"c\"> * @name vs.fx.Animation.SlideOutLeft</span>","<span class=\"c\"> *  @type vs.fx.Animation</span>","<span class=\"c\"> */</span>","Animation<span class=\"k\">.</span>SlideOutLeft <span class=\"k\">=</span> <span class=\"k\">new</span> Animation <span class=\"k\">([</span><span class=\"s\">'translateX'</span><span class=\"k\">,</span> <span class=\"s\">'-$width'</span><span class=\"k\">]);</span>","Animation<span class=\"k\">.</span>SlideOutLeft<span class=\"k\">.</span>addKeyFrame <span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"k\">[</span><span class=\"s\">'0px'</span><span class=\"k\">]);</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> *  Slide a object to top.</span>","<span class=\"c\"> * @name vs.fx.Animation.SlideOutTop</span>","<span class=\"c\"> *  @type vs.fx.Animation</span>","<span class=\"c\"> */</span>","Animation<span class=\"k\">.</span>SlideOutTop <span class=\"k\">=</span> <span class=\"k\">new</span> Animation <span class=\"k\">([</span><span class=\"s\">'translateY'</span><span class=\"k\">,</span> <span class=\"s\">'-$height'</span><span class=\"k\">]);</span>","Animation<span class=\"k\">.</span>SlideOutTop<span class=\"k\">.</span>addKeyFrame <span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"k\">[</span><span class=\"s\">'0px'</span><span class=\"k\">]);</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> *  Slide a object to left.</span>","<span class=\"c\"> * @name vs.fx.Animation.SlideOutBottom</span>","<span class=\"c\"> *  @type vs.fx.Animation</span>","<span class=\"c\"> */</span>","Animation<span class=\"k\">.</span>SlideOutBottom <span class=\"k\">=</span> <span class=\"k\">new</span> Animation <span class=\"k\">([</span><span class=\"s\">'translateY'</span><span class=\"k\">,</span> <span class=\"s\">'$height'</span><span class=\"k\">]);</span>","Animation<span class=\"k\">.</span>SlideOutBottom<span class=\"k\">.</span>addKeyFrame <span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"k\">[</span><span class=\"s\">'0px'</span><span class=\"k\">]);</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> *  Slide a object to right.</span>","<span class=\"c\"> * @name vs.fx.Animation.SlideInRight</span>","<span class=\"c\"> *  @type vs.fx.Animation</span>","<span class=\"c\"> */</span>","Animation<span class=\"k\">.</span>SlideInRight <span class=\"k\">=</span> <span class=\"k\">new</span> Animation <span class=\"k\">([</span><span class=\"s\">'translateX'</span><span class=\"k\">,</span> <span class=\"s\">'0px'</span><span class=\"k\">]);</span>","Animation<span class=\"k\">.</span>SlideInRight<span class=\"k\">.</span>addKeyFrame <span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"k\">[</span><span class=\"s\">'$width'</span><span class=\"k\">]);</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> *  Slide a object to left.</span>","<span class=\"c\"> * @name vs.fx.Animation.SlideInLeft</span>","<span class=\"c\"> *  @type vs.fx.Animation</span>","<span class=\"c\"> */</span>","Animation<span class=\"k\">.</span>SlideInLeft <span class=\"k\">=</span> <span class=\"k\">new</span> Animation <span class=\"k\">([</span><span class=\"s\">'translateX'</span><span class=\"k\">,</span> <span class=\"s\">'0px'</span><span class=\"k\">]);</span>","Animation<span class=\"k\">.</span>SlideInLeft<span class=\"k\">.</span>addKeyFrame <span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"k\">[</span><span class=\"s\">'-$width'</span><span class=\"k\">]);</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> *  Slide a object to top.</span>","<span class=\"c\"> * @name vs.fx.Animation.SlideInTop</span>","<span class=\"c\"> *  @type vs.fx.Animation</span>","<span class=\"c\"> */</span>","Animation<span class=\"k\">.</span>SlideInTop <span class=\"k\">=</span> <span class=\"k\">new</span> Animation <span class=\"k\">([</span><span class=\"s\">'translateY'</span><span class=\"k\">,</span> <span class=\"s\">'0px'</span><span class=\"k\">]);</span>","Animation<span class=\"k\">.</span>SlideInTop<span class=\"k\">.</span>addKeyFrame <span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"k\">[</span><span class=\"s\">'-$height'</span><span class=\"k\">]);</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> *  Slide a object to left.</span>","<span class=\"c\"> * @name vs.fx.Animation.SlideInBottom</span>","<span class=\"c\"> *  @type vs.fx.Animation</span>","<span class=\"c\"> */</span>","Animation<span class=\"k\">.</span>SlideInBottom <span class=\"k\">=</span> <span class=\"k\">new</span> Animation <span class=\"k\">([</span><span class=\"s\">'translateY'</span><span class=\"k\">,</span> <span class=\"s\">'0px'</span><span class=\"k\">]);</span>","Animation<span class=\"k\">.</span>SlideInBottom<span class=\"k\">.</span>addKeyFrame <span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"k\">[</span><span class=\"s\">'$height'</span><span class=\"k\">]);</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> *  Fade in an object.</span>","<span class=\"c\"> * @name vs.fx.Animation.FadeIn</span>","<span class=\"c\"> *  @type vs.fx.Animation</span>","<span class=\"c\"> */</span>","Animation<span class=\"k\">.</span>FadeIn <span class=\"k\">=</span> <span class=\"k\">new</span> Animation <span class=\"k\">([</span><span class=\"s\">'opacity'</span><span class=\"k\">,</span> <span class=\"s\">'1'</span><span class=\"k\">]);</span>","Animation<span class=\"k\">.</span>FadeIn<span class=\"k\">.</span>addKeyFrame <span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"k\">[</span><span class=\"s\">'0'</span><span class=\"k\">]);</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> *  Fade out an object.</span>","<span class=\"c\"> * @name vs.fx.Animation.FadeOut</span>","<span class=\"c\"> *  @type vs.fx.Animation</span>","<span class=\"c\"> */</span>","Animation<span class=\"k\">.</span>FadeOut <span class=\"k\">=</span> <span class=\"k\">new</span> Animation <span class=\"k\">([</span><span class=\"s\">'opacity'</span><span class=\"k\">,</span> <span class=\"s\">'0'</span><span class=\"k\">]);</span>","Animation<span class=\"k\">.</span>FadeOut<span class=\"k\">.</span>addKeyFrame <span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"k\">[</span><span class=\"s\">'1'</span><span class=\"k\">]);</span>","","<span class=\"c\">/********************************************************************</span>","<span class=\"c\">                      Export</span>","<span class=\"c\">*********************************************************************/</span>","<span class=\"c\">/** @private */</span>","fx<span class=\"k\">.</span>Animation <span class=\"k\">=</span> Animation<span class=\"k\">;</span>","fx<span class=\"k\">.</span>cancelAnimation <span class=\"k\">=</span> cancelAnimation<span class=\"k\">;</span>","fx<span class=\"k\">.</span>TranslateAnimation <span class=\"k\">=</span> TranslateAnimation<span class=\"k\">;</span>","fx<span class=\"k\">.</span>RotateAnimation <span class=\"k\">=</span> RotateAnimation<span class=\"k\">;</span>","fx<span class=\"k\">.</span>RotateXYZAnimation <span class=\"k\">=</span> RotateXYZAnimation<span class=\"k\">;</span>","fx<span class=\"k\">.</span>ScaleAnimation <span class=\"k\">=</span> ScaleAnimation<span class=\"k\">;</span>","fx<span class=\"k\">.</span>SkewAnimation <span class=\"k\">=</span> SkewAnimation<span class=\"k\">;</span>","fx<span class=\"k\">.</span>OpacityAnimation <span class=\"k\">=</span> OpacityAnimation<span class=\"k\">;</span>","<span class=\"c\">/**</span>","<span class=\"c\">  Copyright (C) 2009-2012. David Thevenin, ViniSketch SARL (c), and </span>","<span class=\"c\">  contributors. All rights reserved</span>","<span class=\"c\">  </span>","<span class=\"c\">  This program is free software: you can redistribute it and/or modify</span>","<span class=\"c\">  it under the terms of the GNU Lesser General Public License as published</span>","<span class=\"c\">  by the Free Software Foundation, either version 3 of the License, or</span>","<span class=\"c\">  (at your option) any later version.</span>","<span class=\"c\">  </span>","<span class=\"c\">  This program is distributed in the hope that it will be useful,</span>","<span class=\"c\">  but WITHOUT ANY WARRANTY; without even the implied warranty of</span>","<span class=\"c\">  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the</span>","<span class=\"c\">  GNU Lesser General Public License for more details.</span>","<span class=\"c\">  </span>","<span class=\"c\">  You should have received a copy of the GNU Lesser General Public License</span>","<span class=\"c\">  along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.</span>","<span class=\"c\">*/</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> *  The Generic vs.fx.Controller class</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  @see vs.fx.SlideController</span>","<span class=\"c\"> *  @see vs.fx.CardController</span>","<span class=\"c\"> *  @see vs.fx.NavigationController</span>","<span class=\"c\"> *  @extends vs.core.EventSource</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  @class</span>","<span class=\"c\"> *  This class can be used to implement your custom GUI controller.</span>","<span class=\"c\"> *  &lt;p/&gt;</span>","<span class=\"c\"> *  Before developing your own controller you can try the SlideController</span>","<span class=\"c\"> *  or the NavigationController witch match most situations.</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  &lt;p&gt;</span>","<span class=\"c\"> *  Delegate:</span>","<span class=\"c\"> *  &lt;ul&gt;</span>","<span class=\"c\"> *    &lt;li/&gt;controllerViewWillChange : function (from vs.ui.View, to vs.ui.View, controller),</span>","<span class=\"c\"> *         Called when the view changed</span>","<span class=\"c\"> *    &lt;li/&gt;controllerAnimationDidEnd : function (from vs.ui.View, to vs.ui.View, controller), Called just after </span>","<span class=\"c\"> *         the animation ended</span>","<span class=\"c\"> *  &lt;/ul&gt;</span>","<span class=\"c\"> *  &lt;p&gt;</span>","<span class=\"c\"> *  Example:</span>","<span class=\"c\"> *  &lt;pre class=\"code\"&gt;</span>","<span class=\"c\"> * </span>","<span class=\"c\"> *   // 1 create and init the controller</span>","<span class=\"c\"> *   this.controller = new vs.fx.Controller (this);</span>","<span class=\"c\"> *   this.controller.init ();</span>","<span class=\"c\"> *   </span>","<span class=\"c\"> *   // 2.1 put a first view into the controller</span>","<span class=\"c\"> *   this.controller.add (this.firstView);</span>","<span class=\"c\"> *   // 2.2 set the first view as the initial view</span>","<span class=\"c\"> *   this.controller.initialComponent = this.firstView.id;</span>","<span class=\"c\"> *  </span>","<span class=\"c\"> *   // 3.1 create, configure and put the second view into the controller</span>","<span class=\"c\"> *   var comp = this.createAndAddComponent ('PanelOne');</span>","<span class=\"c\"> *   comp.position = [0, 44];</span>","<span class=\"c\"> *   comp.translation = [320, 0];</span>","<span class=\"c\"> *   this.controller.add (comp);</span>","<span class=\"c\"> *   </span>","<span class=\"c\"> *   // 3.2 declare transitions (with animations) between states</span>","<span class=\"c\"> *   // translateOutLeft is play on firstView when we leave the firstView</span>","<span class=\"c\"> *   // translateInRight is play on comp when we enter into comp</span>","<span class=\"c\"> *   this.controller.addTransition (this.firstView.id, comp.id, 'goToOne',</span>","<span class=\"c\"> *                                  translateOutLeft, translateInRight);</span>","<span class=\"c\"> *   this.controller.addTransition (comp.id, this.firstView.id, 'back',</span>","<span class=\"c\"> *                                  translateOutRight, translateInLeft);</span>","<span class=\"c\"> *  </span>","<span class=\"c\"> *   // 4 create, configure and put the third view into the controller</span>","<span class=\"c\"> *   comp = this.createAndAddComponent ('PanelTwo');</span>","<span class=\"c\"> *   comp.position = [0, 44];</span>","<span class=\"c\"> *   comp.translation = [320, 0];</span>","<span class=\"c\"> *   this.controller.add (comp);</span>","<span class=\"c\"> *   </span>","<span class=\"c\"> *   this.controller.addTransition (this.firstView.id, comp.id, 'goToTwo',</span>","<span class=\"c\"> *                                  translateOutLeft, translateInRight);</span>","<span class=\"c\"> *   this.controller.addTransition (comp.id, this.firstView.id, 'back',</span>","<span class=\"c\"> *                                  translateOutRight, translateInLeft);</span>","<span class=\"c\"> *  </span>","<span class=\"c\"> *   // 5 create, configure and put the fourth view into the controller</span>","<span class=\"c\"> *   var comp = this.createAndAddComponent ('PanelThree');</span>","<span class=\"c\"> *   comp.position = [0, 44];</span>","<span class=\"c\"> *   comp.translation = [320, 0];</span>","<span class=\"c\"> *   this.controller.add (comp);</span>","<span class=\"c\"> *   </span>","<span class=\"c\"> *   this.controller.addTransition (this.firstView.id, comp.id, 'goToThree',</span>","<span class=\"c\"> *                                  translateOutLeft, translateInRight);</span>","<span class=\"c\"> *   this.controller.addTransition (comp.id, this.firstView.id, 'back',</span>","<span class=\"c\"> *                                  translateOutRight, translateInLeft);</span>","<span class=\"c\"> *  </span>","<span class=\"c\"> *  &lt;/pre&gt;</span>","<span class=\"c\"> *  @author David Thevenin</span>","<span class=\"c\"> * @name vs.fx.Controller</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  @constructor</span>","<span class=\"c\"> *   Creates a new vs.fx.Controller.</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @param {vs.ui.View} owner the View using this controller [mandatory]</span>","<span class=\"c\"> */</span>","<span class=\"k\">function</span> Controller <span class=\"k\">(</span>owner<span class=\"k\">)</span>","<span class=\"k\">{</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>parent <span class=\"k\">=</span> core<span class=\"k\">.</span>EventSource<span class=\"k\">;</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>parent <span class=\"k\">();</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>constructor <span class=\"k\">=</span> Controller<span class=\"k\">;</span>","","  <span class=\"k\">if</span> <span class=\"k\">(</span>owner<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>_fsm <span class=\"k\">=</span> <span class=\"k\">new</span> core<span class=\"k\">.</span>Fsm <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","  ","    <span class=\"c\">// fsm goTo surcharge</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>goTo <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>goTo<span class=\"k\">;</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>_owner <span class=\"k\">=</span> owner<span class=\"k\">;</span>","  <span class=\"k\">}</span>","<span class=\"k\">}</span>","","Controller<span class=\"k\">.</span>prototype <span class=\"k\">=</span> <span class=\"k\">{</span>","","   <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @type {Object}</span>","<span class=\"c\">   */</span>","  _delegate<span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">,</span>","","   <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @type {Object}</span>","<span class=\"c\">   */</span>","  _owner<span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">,</span>","","   <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @type {vs.core.Fsm}</span>","<span class=\"c\">   */</span>","  _fsm<span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">,</span>","","   <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @type {String}</span>","<span class=\"c\">   */</span>","  _initial_component<span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">,</span>",""," <span class=\"c\">/**********************************************************************</span>","","<span class=\"c\">  *********************************************************************/</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  destructor <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_owner<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_owner<span class=\"k\">.</span>__controller__ <span class=\"k\">=</span> undefined<span class=\"k\">;</span>","      ","      <span class=\"k\">this</span><span class=\"k\">.</span>_owner<span class=\"k\">.</span>remove <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_owner<span class=\"k\">.</span>_ab_controller_remove<span class=\"k\">;</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_owner<span class=\"k\">.</span>_ab_controller_remove <span class=\"k\">=</span> undefined<span class=\"k\">;</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">this</span><span class=\"k\">.</span>_delegate <span class=\"k\">=</span> undefined<span class=\"k\">;</span>","","    util<span class=\"k\">.</span>free <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">);</span>","    core<span class=\"k\">.</span>EventSource<span class=\"k\">.</span>prototype<span class=\"k\">.</span>destructor<span class=\"k\">.</span>call <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  initComponent <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    core<span class=\"k\">.</span>EventSource<span class=\"k\">.</span>prototype<span class=\"k\">.</span>initComponent<span class=\"k\">.</span>call <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">)</span> <span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>init <span class=\"k\">();</span>","    ","    <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_owner<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      console<span class=\"k\">.</span>error <span class=\"k\">(</span><span class=\"s\">\"Invalid vs.fx.Controller, owner is null vs.fx.Controller.id = '\"</span> <span class=\"k\">+</span> <span class=\"k\">this</span><span class=\"k\">.</span>_id <span class=\"k\">+</span> <span class=\"s\">\"'\"</span><span class=\"k\">);</span>","      <span class=\"k\">return</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_owner<span class=\"k\">.</span>__controller__<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      console<span class=\"k\">.</span>error <span class=\"k\">(</span><span class=\"s\">\"The owner already use a controller\"</span><span class=\"k\">);</span>","      <span class=\"k\">return</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>_owner<span class=\"k\">.</span>__controller__ <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","    ","    <span class=\"k\">this</span><span class=\"k\">.</span>_owner<span class=\"k\">.</span>_ab_controller_remove <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_owner<span class=\"k\">.</span>remove<span class=\"k\">;</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>_owner<span class=\"k\">.</span>remove <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>ab_controller_remove<span class=\"k\">;</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","","<span class=\"c\">/*********************************************************</span>","<span class=\"c\"> *                 behavior update</span>","<span class=\"c\"> *********************************************************/</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  ab_controller_remove <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>child<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>child<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    ","    state <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>__controller__<span class=\"k\">.</span>_fsm<span class=\"k\">.</span>_list_of_state <span class=\"k\">[</span>child<span class=\"k\">.</span>id<span class=\"k\">];</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>state<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>__controller__<span class=\"k\">.</span>remove <span class=\"k\">(</span>child<span class=\"k\">);</span>","    <span class=\"k\">}</span>","    <span class=\"k\">else</span>","    <span class=\"k\">{</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_ab_controller_remove <span class=\"k\">(</span>child<span class=\"k\">);</span>","    <span class=\"k\">}</span>","    <span class=\"c\">// XXX should remove the component from the FSM etc...</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","<span class=\"c\">/*********************************************************</span>","<span class=\"c\"> *                  State Management</span>","<span class=\"c\"> *********************************************************/</span>"," ","  <span class=\"c\">/**</span>","<span class=\"c\">   *  Return true if the state already exists</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.fx.Controller#isStateExit</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   * </span>","<span class=\"c\">   * @return boolean</span>","<span class=\"c\">   */</span>","  isStateExit <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>id<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">)</span> <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","    ","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>_list_of_state <span class=\"k\">[</span>id<span class=\"k\">])</span>","    <span class=\"k\">{</span> <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    ","    <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>"," ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @private</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   * @deprecated</span>","<span class=\"c\">   */</span>","  add <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>comp<span class=\"k\">,</span> data<span class=\"k\">,</span> extension<span class=\"k\">,</span> bindings<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    console<span class=\"k\">.</span>warn <span class=\"k\">(</span><span class=\"s\">'vs.fx.Controller.add is deprecated. Use vs.fx.Controller.push'</span><span class=\"k\">);</span> ","    <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>push <span class=\"k\">(</span>comp<span class=\"k\">,</span> data<span class=\"k\">,</span> extension<span class=\"k\">,</span> bindings<span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   *  Add the a child component to the Controller Manager</span>","<span class=\"c\">   *  &lt;p&gt;</span>","<span class=\"c\">   *  The component must be a graphic component (vs.ui.View).</span>","<span class=\"c\">   *  It will be instantiated, init and added automaticaly</span>","<span class=\"c\">   *  &lt;p&gt;</span>","<span class=\"c\">   *  The component instantiation is a lazy algorithm. The component will</span>","<span class=\"c\">   *  be instantiated and add into the DOM tree only when it has to be show</span>","<span class=\"c\">   *  to the user.</span>","<span class=\"c\">   *  &lt;p&gt;</span>","<span class=\"c\">   *  @example</span>","<span class=\"c\">   *  var myComp = new MyComp (conf);</span>","<span class=\"c\">   *  myComp.layer = new vs.fx.Controller (myComp);</span>","<span class=\"c\">   *  myComp.layer.push ('AComponent1', data1);</span>","<span class=\"c\">   *  myComp.layer.push ('AComponent1', data2);</span>","<span class=\"c\">   *  myComp.layer.push ('AComponent2', data3);</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.fx.Controller#push</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @param {String | vs.ui.View} comp The GUI component name to instanciate or </span>","<span class=\"c\">   *    the instance of the component  </span>","<span class=\"c\">   * @param {Object} config Configuration structure need to build the </span>","<span class=\"c\">   *     component [optional]</span>","<span class=\"c\">   * @param {Array} bindings Bindings configuration [[spec, observer, method], ...]</span>","<span class=\"c\">   */</span>","  push <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>comp<span class=\"k\">,</span> data<span class=\"k\">,</span> extension<span class=\"k\">,</span> bindings<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>comp <span class=\"k\">||</span> <span class=\"k\">!</span><span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>data<span class=\"k\">)</span> <span class=\"k\">{</span> data <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    ","    <span class=\"k\">var</span> state_id <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">,</span> binding<span class=\"k\">,</span> i<span class=\"k\">,</span> state<span class=\"k\">;</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>util<span class=\"k\">.</span>isString <span class=\"k\">(</span>comp<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> data<span class=\"k\">.</span>id<span class=\"k\">)</span>","    <span class=\"k\">{</span> state_id <span class=\"k\">=</span> data<span class=\"k\">.</span>id<span class=\"k\">;</span> <span class=\"k\">}</span>","    <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(!</span>util<span class=\"k\">.</span>isString <span class=\"k\">(</span>comp<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> comp<span class=\"k\">.</span>id<span class=\"k\">)</span>","    <span class=\"k\">{</span> state_id <span class=\"k\">=</span> comp<span class=\"k\">.</span>id<span class=\"k\">;</span> <span class=\"k\">}</span>","    <span class=\"k\">else</span> <span class=\"k\">{</span> state_id <span class=\"k\">=</span> core<span class=\"k\">.</span>createId <span class=\"k\">();</span> <span class=\"k\">}</span>","    ","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>isStateExit <span class=\"k\">(</span>state_id<span class=\"k\">))</span>","    <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    ","    <span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>addState <span class=\"k\">(</span>state_id<span class=\"k\">);</span>","    state <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>_list_of_state <span class=\"k\">[</span>state_id<span class=\"k\">];</span>","    state<span class=\"k\">.</span>bindings <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","    ","    <span class=\"k\">if</span> <span class=\"k\">(</span>bindings <span class=\"k\">&amp;&amp;</span> bindings<span class=\"k\">.</span>length<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">for</span> <span class=\"k\">(</span>i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> bindings<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++)</span>","      <span class=\"k\">{</span>","        binding <span class=\"k\">=</span> bindings <span class=\"k\">[</span>i<span class=\"k\">];</span>","        <span class=\"k\">if</span> <span class=\"k\">(!</span>binding <span class=\"k\">||</span> binding<span class=\"k\">.</span>length <span class=\"k\">!==</span> <span class=\"s\">3</span><span class=\"k\">)</span>","        <span class=\"k\">{</span>","          console<span class=\"k\">.</span>warn <span class=\"k\">(</span><span class=\"s\">'vs.fx.Controller.push: invalid binding information'</span><span class=\"k\">);</span>","          <span class=\"k\">continue</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>componentBind <span class=\"k\">(</span>state_id<span class=\"k\">,</span> binding<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">],</span> binding<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">],</span> binding<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">]);</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">this</span><span class=\"k\">.</span>setStateComponentInformation <span class=\"k\">(</span>state_id<span class=\"k\">,</span> comp<span class=\"k\">,</span> extension<span class=\"k\">,</span> data<span class=\"k\">);</span>","    ","    <span class=\"k\">return</span> state_id<span class=\"k\">;</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   *  Remove a child component to the Slider Manager</span>","<span class=\"c\">   *  &lt;p&gt;</span>","<span class=\"c\">   *  The component can be specified as an Object or an id.</span>","<span class=\"c\">   *  &lt;p&gt;</span>","<span class=\"c\">   *  @example</span>","<span class=\"c\">   *  layer.remove (myComp);</span>","<span class=\"c\">   *  layer.remove (myComp.id);</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.fx.Controller#remove</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @param {vs.ui.View | String} comp The GUI component or the component id</span>","<span class=\"c\">   */</span>","  remove <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>comp<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>comp <span class=\"k\">||</span> <span class=\"k\">!</span><span class=\"k\">this</span><span class=\"k\">.</span>_owner <span class=\"k\">||</span> <span class=\"k\">!</span><span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    ","    <span class=\"k\">var</span> state_id <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>util<span class=\"k\">.</span>isString <span class=\"k\">(</span>comp<span class=\"k\">))</span>","    <span class=\"k\">{</span> state_id <span class=\"k\">=</span> comp<span class=\"k\">;</span> <span class=\"k\">}</span>","    <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(!</span>util<span class=\"k\">.</span>isString <span class=\"k\">(</span>comp<span class=\"k\">))</span>","    <span class=\"k\">{</span> state_id <span class=\"k\">=</span> comp<span class=\"k\">.</span>id<span class=\"k\">;</span> <span class=\"k\">}</span>","    ","    <span class=\"k\">var</span> state <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>_list_of_state <span class=\"k\">[</span>state_id<span class=\"k\">];</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>state <span class=\"k\">&amp;&amp;</span> state<span class=\"k\">.</span>comp<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_owner<span class=\"k\">.</span>_ab_controller_remove <span class=\"k\">(</span>state<span class=\"k\">.</span>comp<span class=\"k\">);</span>","    <span class=\"k\">}</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>removeState <span class=\"k\">(</span>state_id<span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   *  @private</span>","<span class=\"c\">   *</span>","<span class=\"c\">   *   set the component associated to a state</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.fx.Controller#setStateComponentInformation</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @param {String} state_id the state's name </span>","<span class=\"c\">   * @param {String | vs.ui.View} comp The GUI component name to instanciate or </span>","<span class=\"c\">   *    the instance of the component  </span>","<span class=\"c\">   * @param {Object} init_data Optional data for the component </span>","<span class=\"c\">   *                   constructor [optional]</span>","<span class=\"c\">   */</span>","  setStateComponentInformation <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>state_id<span class=\"k\">,</span> comp<span class=\"k\">,</span> extension<span class=\"k\">,</span> init_data<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>state_id <span class=\"k\">||</span> <span class=\"k\">!</span><span class=\"k\">this</span><span class=\"k\">.</span>_fsm <span class=\"k\">||</span> <span class=\"k\">!</span><span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>existState <span class=\"k\">(</span>state_id<span class=\"k\">))</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>comp <span class=\"k\">||</span> <span class=\"k\">!</span><span class=\"k\">this</span><span class=\"k\">.</span>_owner<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    ","    <span class=\"k\">if</span> <span class=\"k\">(!</span>init_data<span class=\"k\">)</span> <span class=\"k\">{</span> init_data <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    <span class=\"k\">else</span> <span class=\"k\">{</span> init_data <span class=\"k\">=</span> util<span class=\"k\">.</span>clone <span class=\"k\">(</span>init_data<span class=\"k\">);</span> <span class=\"k\">}</span>","    ","    <span class=\"k\">var</span> state <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>_list_of_state <span class=\"k\">[</span>state_id<span class=\"k\">];</span>","    state<span class=\"k\">.</span>init_data <span class=\"k\">=</span> init_data<span class=\"k\">;</span>","    ","    <span class=\"k\">if</span> <span class=\"k\">(</span>util<span class=\"k\">.</span>isString <span class=\"k\">(</span>comp<span class=\"k\">))</span>","    <span class=\"k\">{</span>","      state<span class=\"k\">.</span>comp_name <span class=\"k\">=</span> comp<span class=\"k\">;</span>","      state<span class=\"k\">.</span>comp <span class=\"k\">=</span> undefined<span class=\"k\">;</span>","    <span class=\"k\">}</span>","    <span class=\"k\">else</span>","    <span class=\"k\">{</span>","      state<span class=\"k\">.</span>comp_name <span class=\"k\">=</span> <span class=\"s\">\"\"</span><span class=\"k\">;</span>","      state<span class=\"k\">.</span>comp <span class=\"k\">=</span> comp<span class=\"k\">;</span>","      <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_owner<span class=\"k\">.</span>isChild <span class=\"k\">(</span>comp<span class=\"k\">))</span>","      <span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>_owner<span class=\"k\">.</span>add <span class=\"k\">(</span>comp<span class=\"k\">,</span> extension<span class=\"k\">);</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","<span class=\"c\">/*********************************************************</span>","<span class=\"c\"> *                  Animation setting</span>","<span class=\"c\"> *********************************************************/</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   *   Add a new transition from the view \"from\" to the view \"to\".</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.fx.Controller#addTransition</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @param {String} from State from (component id)</span>","<span class=\"c\">   * @param {String} to State to (component id)</span>","<span class=\"c\">   * @param {String} on the input event name which cause the crossing of </span>","<span class=\"c\">   *      transition</span>","<span class=\"c\">   * @param {vs.fx.Animation} animation_out the animation when exit from the</span>","<span class=\"c\">   *         state from. [optional]</span>","<span class=\"c\">   * @param {vs.fx.Animation} animation_in the animation when enter in the</span>","<span class=\"c\">   *         state to. [optional]</span>","<span class=\"c\">   */</span>","  addTransition <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>from<span class=\"k\">,</span> to<span class=\"k\">,</span> on<span class=\"k\">,</span> animation_out<span class=\"k\">,</span> animation_in<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">var</span> key<span class=\"k\">,</span> t<span class=\"k\">;</span>","        ","    <span class=\"k\">if</span> <span class=\"k\">(!</span>from <span class=\"k\">||</span> <span class=\"k\">!</span><span class=\"k\">this</span><span class=\"k\">.</span>_fsm <span class=\"k\">||</span> <span class=\"k\">!</span><span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>existState <span class=\"k\">(</span>from<span class=\"k\">))</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>to <span class=\"k\">||</span> <span class=\"k\">!</span><span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>existState <span class=\"k\">(</span>to<span class=\"k\">))</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>on<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    ","    <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>existInput <span class=\"k\">(</span>on<span class=\"k\">))</span>","    <span class=\"k\">{</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>addInput <span class=\"k\">(</span>on<span class=\"k\">);</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>addTransition <span class=\"k\">(</span>from<span class=\"k\">,</span> to<span class=\"k\">,</span> on<span class=\"k\">);</span>","","    <span class=\"k\">for</span> <span class=\"k\">(</span>key <span class=\"k\">in</span> <span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>_list_of_state <span class=\"k\">[</span>from<span class=\"k\">].</span>transitionEvents<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      t <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>_list_of_state <span class=\"k\">[</span>from<span class=\"k\">].</span>transitionEvents <span class=\"k\">[</span>key<span class=\"k\">];</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>t<span class=\"k\">.</span>to <span class=\"k\">!==</span> to<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">continue</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      ","      t<span class=\"k\">.</span>animation_out <span class=\"k\">=</span> animation_out<span class=\"k\">;</span>","      t<span class=\"k\">.</span>animation_in <span class=\"k\">=</span> animation_in<span class=\"k\">;</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   *  @private</span>","<span class=\"c\">   */</span>","  _animateComponents <span class=\"k\">:</span>","    <span class=\"k\">function</span> <span class=\"k\">(</span>fromComp<span class=\"k\">,</span> toComp<span class=\"k\">,</span> animationOut<span class=\"k\">,</span> animationIn<span class=\"k\">,</span> animation_clb<span class=\"k\">,</span> instant<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">var</span> self <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">,</span> callback <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","    <span class=\"k\">{</span>","      <span class=\"k\">try</span>","      <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>animation_clb<span class=\"k\">)</span>","        <span class=\"k\">{</span>","          animation_clb<span class=\"k\">.</span>call <span class=\"k\">(</span>self<span class=\"k\">.</span>_owner<span class=\"k\">);</span>","        <span class=\"k\">}</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>self<span class=\"k\">.</span>_delegate <span class=\"k\">&amp;&amp;</span> self<span class=\"k\">.</span>_delegate<span class=\"k\">.</span>animationDidEnd<span class=\"k\">)</span>","        <span class=\"k\">{</span>","          console<span class=\"k\">.</span>warn <span class=\"k\">(</span><span class=\"s\">\"animationDidEnd is deprecated. Please use 'controllerAnimationDidEnd'.\"</span><span class=\"k\">);</span>","          self<span class=\"k\">.</span>_delegate<span class=\"k\">.</span>animationDidEnd <span class=\"k\">(</span>self<span class=\"k\">);</span>","        <span class=\"k\">}</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>self<span class=\"k\">.</span>_delegate <span class=\"k\">&amp;&amp;</span> self<span class=\"k\">.</span>_delegate<span class=\"k\">.</span>controllerAnimationDidEnd<span class=\"k\">)</span>","        <span class=\"k\">{</span>","          self<span class=\"k\">.</span>_delegate<span class=\"k\">.</span>controllerAnimationDidEnd <span class=\"k\">(</span>fromComp<span class=\"k\">,</span> toComp<span class=\"k\">,</span> self<span class=\"k\">);</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span> console<span class=\"k\">.</span>error <span class=\"k\">(</span>e<span class=\"k\">);</span> <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","    runAnimation <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","    <span class=\"k\">{</span>","      <span class=\"k\">try</span>","      <span class=\"k\">{</span>","        toComp<span class=\"k\">.</span>show <span class=\"k\">();</span>","        <span class=\"k\">if</span> <span class=\"k\">(!</span>animationIn <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>animationOut<span class=\"k\">)</span>","        <span class=\"k\">{</span>","          callback<span class=\"k\">.</span>call <span class=\"k\">(</span>self<span class=\"k\">);</span>","          <span class=\"k\">return</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>instant<span class=\"k\">)</span>","        <span class=\"k\">{</span>","          <span class=\"k\">if</span> <span class=\"k\">(</span>animationIn<span class=\"k\">)</span>","          <span class=\"k\">{</span>","            <span class=\"k\">var</span> inDurations <span class=\"k\">=</span> animationIn<span class=\"k\">.</span>durations<span class=\"k\">;</span>","            animationIn<span class=\"k\">.</span>durations <span class=\"k\">=</span> <span class=\"s\">'0s'</span><span class=\"k\">;</span>","          <span class=\"k\">}</span>","          <span class=\"k\">if</span> <span class=\"k\">(</span>animationOut<span class=\"k\">)</span>","          <span class=\"k\">{</span>","            <span class=\"k\">var</span> outDurations <span class=\"k\">=</span> animationOut<span class=\"k\">.</span>durations<span class=\"k\">;</span>","            animationOut<span class=\"k\">.</span>durations <span class=\"k\">=</span> <span class=\"s\">'0s'</span><span class=\"k\">;</span>","          <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>animationIn <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>animationOut<span class=\"k\">)</span>","        <span class=\"k\">{</span>","          animationIn<span class=\"k\">.</span>process <span class=\"k\">(</span>toComp<span class=\"k\">,</span> callback<span class=\"k\">,</span> self<span class=\"k\">);</span>","        <span class=\"k\">}</span>","        <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(!</span>animationIn <span class=\"k\">&amp;&amp;</span> animationOut<span class=\"k\">)</span>","        <span class=\"k\">{</span>","          animationOut<span class=\"k\">.</span>process <span class=\"k\">(</span>fromComp<span class=\"k\">,</span> callback<span class=\"k\">,</span> self<span class=\"k\">);</span>","        <span class=\"k\">}</span>","        <span class=\"k\">else</span>","        <span class=\"k\">{</span>","          <span class=\"k\">if</span> <span class=\"k\">(</span>animationIn<span class=\"k\">)</span> animationIn<span class=\"k\">.</span>process <span class=\"k\">(</span>toComp<span class=\"k\">,</span> callback<span class=\"k\">,</span> self<span class=\"k\">);</span>","          <span class=\"k\">if</span> <span class=\"k\">(</span>animationOut<span class=\"k\">)</span> animationOut<span class=\"k\">.</span>process <span class=\"k\">(</span>fromComp<span class=\"k\">);</span> ","        <span class=\"k\">}</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>instant<span class=\"k\">)</span>","        <span class=\"k\">{</span>","          <span class=\"k\">if</span> <span class=\"k\">(</span>animationIn<span class=\"k\">)</span> animationIn<span class=\"k\">.</span>durations <span class=\"k\">=</span> inDurations<span class=\"k\">;</span>","          <span class=\"k\">if</span> <span class=\"k\">(</span>animationOut<span class=\"k\">)</span> animationOut<span class=\"k\">.</span>durations <span class=\"k\">=</span> outDurations<span class=\"k\">;</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span>","      <span class=\"k\">catch</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span> console<span class=\"k\">.</span>error <span class=\"k\">(</span>e<span class=\"k\">);</span> <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","    window<span class=\"k\">.</span>setTimeout <span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>runAnimation <span class=\"k\">();</span><span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","","<span class=\"c\">/*********************************************************</span>","<span class=\"c\"> *                 Component Event management</span>","<span class=\"c\"> *********************************************************/</span>"," ","  <span class=\"c\">/**</span>","<span class=\"c\">   *  The event bind method to listen events</span>","<span class=\"c\">   *  &lt;p&gt;</span>","<span class=\"c\">   *  When you want listen an event generated by a component, you can</span>","<span class=\"c\">   *  bind your object (the observer) to this object using 'componentBind' </span>","<span class=\"c\">   *  method.</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.fx.Controller#componentBind</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @param {string} comp_id the component id [mandatory]</span>","<span class=\"c\">   * @param {string} spec the event specification [mandatory]</span>","<span class=\"c\">   * @param {vs.core.Object} obj the object interested to catch the event [mandatory]</span>","<span class=\"c\">   * @param {string} func the name of a callback. If its not defined</span>","<span class=\"c\">   *        notify method will be called [optional]</span>","<span class=\"c\">   */</span>","  componentBind<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>comp_id<span class=\"k\">,</span> event<span class=\"k\">,</span> obj<span class=\"k\">,</span> func<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">)</span> <span class=\"k\">return</span><span class=\"k\">;</span>","    ","    <span class=\"k\">var</span> state <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>_list_of_state <span class=\"k\">[</span>comp_id<span class=\"k\">],</span> a<span class=\"k\">;</span>","    ","    <span class=\"k\">if</span> <span class=\"k\">(!</span>state<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    ","    a <span class=\"k\">=</span> state<span class=\"k\">.</span>bindings <span class=\"k\">[</span>event<span class=\"k\">];</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>a<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      a <span class=\"k\">=</span> <span class=\"k\">[];</span>","      state<span class=\"k\">.</span>bindings <span class=\"k\">[</span>event<span class=\"k\">]</span> <span class=\"k\">=</span> a<span class=\"k\">;</span>","    <span class=\"k\">}</span>","    ","    a<span class=\"k\">.</span>push <span class=\"k\">([</span>obj<span class=\"k\">,</span> func<span class=\"k\">]);</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>comp_id <span class=\"k\">===</span> <span class=\"k\">this</span><span class=\"k\">.</span>_current_state<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      state<span class=\"k\">.</span>comp<span class=\"k\">.</span>bind <span class=\"k\">(</span>event<span class=\"k\">,</span> obj<span class=\"k\">,</span> func<span class=\"k\">);</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  refresh<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{}</span><span class=\"k\">,</span>","","<span class=\"c\">/*********************************************************</span>","<span class=\"c\"> *                 FSM management</span>","<span class=\"c\"> *********************************************************/</span>"," ","  <span class=\"c\">/**</span>","<span class=\"c\">   * returns the currents state_id which is the current visible</span>","<span class=\"c\">   * component id.</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.fx.Controller#getCurrentState</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @return {string} the current state id</span>","<span class=\"c\">   */</span>","  getCurrentState <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">)</span> <span class=\"k\">return</span><span class=\"k\">;</span>","    ","    <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>_current_state<span class=\"k\">;</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>"," ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  configureNewComponent <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>comp<span class=\"k\">)</span>","  <span class=\"k\">{</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  _beforeStateEnter <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>state<span class=\"k\">,</span> data<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>state <span class=\"k\">||</span> <span class=\"k\">!(</span>state<span class=\"k\">.</span>comp_name <span class=\"k\">||</span> state<span class=\"k\">.</span>comp<span class=\"k\">))</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    ","    <span class=\"k\">var</span> spec<span class=\"k\">,</span> events<span class=\"k\">,</span> i<span class=\"k\">,</span> key<span class=\"k\">,</span> e<span class=\"k\">,</span> new_data<span class=\"k\">;</span>","  ","    <span class=\"c\">////////////////////////////////////////////////////</span>","    <span class=\"c\">// 1) build the component if its need</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>state<span class=\"k\">.</span>comp<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      state<span class=\"k\">.</span>comp <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_owner<span class=\"k\">.</span>createAndAddComponent","        <span class=\"k\">(</span>state<span class=\"k\">.</span>comp_name<span class=\"k\">,</span> state<span class=\"k\">.</span>init_data<span class=\"k\">,</span> state<span class=\"k\">.</span>extension<span class=\"k\">);</span>","        ","      state<span class=\"k\">.</span>comp<span class=\"k\">.</span>configure <span class=\"k\">(</span>state<span class=\"k\">.</span>init_data<span class=\"k\">);</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>state<span class=\"k\">.</span>comp <span class=\"k\">&amp;&amp;</span> state<span class=\"k\">.</span>comp<span class=\"k\">.</span>propertiesDidChange<span class=\"k\">)</span> ","      <span class=\"k\">{</span> ","        state<span class=\"k\">.</span>comp<span class=\"k\">.</span>propertiesDidChange <span class=\"k\">();</span>","      <span class=\"k\">}</span>","      state<span class=\"k\">.</span>comp<span class=\"k\">.</span>propertyChange <span class=\"k\">();</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>configureNewComponent <span class=\"k\">(</span>state<span class=\"k\">.</span>comp<span class=\"k\">);</span>","    <span class=\"k\">}</span>","    ","    <span class=\"c\">////////////////////////////////////////////////////</span>","    <span class=\"c\">// 2) data adaptation and init</span>","    new_data <span class=\"k\">=</span> data<span class=\"k\">;</span>","    <span class=\"c\">// 2.1) data adaptation</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>state<span class=\"k\">.</span>data_adaptation_func<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      new_data <span class=\"k\">=</span> state<span class=\"k\">.</span>data_adaptation_func <span class=\"k\">(</span>data<span class=\"k\">);</span>","    <span class=\"k\">}</span>","    <span class=\"c\">// 2.2) component data init</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>new_data<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"c\">// 2.2.1) set data</span>","      <span class=\"k\">for</span> <span class=\"k\">(</span>key <span class=\"k\">in</span> new_data<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(!</span>state<span class=\"k\">.</span>comp<span class=\"k\">.</span>__lookupSetter__ <span class=\"k\">(</span>key<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span>","            <span class=\"k\">!</span>state<span class=\"k\">.</span>comp<span class=\"k\">.</span>hasOwnProperty <span class=\"k\">(</span>key<span class=\"k\">))</span>","        <span class=\"k\">{</span>","          <span class=\"k\">continue</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","        state<span class=\"k\">.</span>comp <span class=\"k\">[</span>key<span class=\"k\">]</span> <span class=\"k\">=</span> new_data <span class=\"k\">[</span>key<span class=\"k\">];</span>","      <span class=\"k\">}</span>","      ","      <span class=\"c\">// 2.2.1) dataflow propagation</span>","      state<span class=\"k\">.</span>comp<span class=\"k\">.</span>propertyChange <span class=\"k\">();</span>","    <span class=\"k\">}</span>","    ","    <span class=\"c\">////////////////////////////////////////////////////</span>","    <span class=\"c\">// 3) events binding</span>","    <span class=\"k\">for</span> <span class=\"k\">(</span>spec <span class=\"k\">in</span> state<span class=\"k\">.</span>bindings<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      events <span class=\"k\">=</span> state<span class=\"k\">.</span>bindings <span class=\"k\">[</span>spec<span class=\"k\">];</span>","      <span class=\"k\">if</span> <span class=\"k\">(!</span>events<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">continue</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      ","      <span class=\"k\">for</span> <span class=\"k\">(</span>i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> events<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">++)</span>","      <span class=\"k\">{</span>","        e <span class=\"k\">=</span> events <span class=\"k\">[</span>i<span class=\"k\">];</span>","        <span class=\"k\">if</span> <span class=\"k\">(!</span>e<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">continue</span><span class=\"k\">;</span> <span class=\"k\">}</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>e<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">])</span> <span class=\"k\">{</span> state<span class=\"k\">.</span>comp<span class=\"k\">.</span>bind <span class=\"k\">(</span>spec<span class=\"k\">,</span> e<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">],</span> e<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]);</span> <span class=\"k\">}</span>","        <span class=\"k\">else</span> <span class=\"k\">{</span> state<span class=\"k\">.</span>comp<span class=\"k\">.</span>bind <span class=\"k\">(</span>spec<span class=\"k\">,</span> e<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]);</span> <span class=\"k\">}</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  _beforeStateExit <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>state<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>state <span class=\"k\">||</span> <span class=\"k\">!</span>state<span class=\"k\">.</span>comp<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    ","    <span class=\"k\">var</span> spec<span class=\"k\">,</span> events<span class=\"k\">,</span> i<span class=\"k\">,</span> e<span class=\"k\">;</span>","      ","    <span class=\"c\">////////////////////////////////////////////////////</span>","    <span class=\"c\">// 1) events unbinding</span>","    <span class=\"k\">for</span> <span class=\"k\">(</span>spec <span class=\"k\">in</span> state<span class=\"k\">.</span>bindings<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      events <span class=\"k\">=</span> state<span class=\"k\">.</span>bindings <span class=\"k\">[</span>spec<span class=\"k\">];</span>","      <span class=\"k\">if</span> <span class=\"k\">(!</span>events<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">continue</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      ","      <span class=\"k\">for</span> <span class=\"k\">(</span>i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> events<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">++)</span>","      <span class=\"k\">{</span>","        e <span class=\"k\">=</span> events <span class=\"k\">[</span>i<span class=\"k\">];</span>","        <span class=\"k\">if</span> <span class=\"k\">(!</span>e<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">continue</span><span class=\"k\">;</span> <span class=\"k\">}</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>e<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">])</span> <span class=\"k\">{</span> state<span class=\"k\">.</span>comp<span class=\"k\">.</span>unbind <span class=\"k\">(</span>spec<span class=\"k\">,</span> e<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">],</span> e<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]);</span> <span class=\"k\">}</span>","        <span class=\"k\">else</span> <span class=\"k\">{</span> state<span class=\"k\">.</span>comp<span class=\"k\">.</span>bind <span class=\"k\">(</span>spec<span class=\"k\">,</span> e<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]);</span> <span class=\"k\">}</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   *  Private method use by the fsm to cross a transition.</span>","<span class=\"c\">   *  @note for the moment only one ouput lexem can be generation when</span>","<span class=\"c\">   *  crossing a transition</span>","<span class=\"c\">   *  @private</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.fx.Controller#goTo</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @param {String} id_sate the id of target state.</span>","<span class=\"c\">   * @param {String} output</span>","<span class=\"c\">   * @param {Object} event the event</span>","<span class=\"c\">   * @param {Boolean} instant make the transition visualy instantly [Optional]</span>","<span class=\"c\">   * @return {Boolean} is the transition was reached or not</span>","<span class=\"c\">   */</span>","  goTo <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>state_id<span class=\"k\">,</span> output<span class=\"k\">,</span> event<span class=\"k\">,</span> instant<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"c\">// manage output</span>","    <span class=\"c\">// TODO WARNING</span>","    <span class=\"k\">var</span> state_from<span class=\"k\">,</span> state_to<span class=\"k\">,</span> transition <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","    ","    <span class=\"k\">if</span> <span class=\"k\">(!</span>state_id <span class=\"k\">||</span> <span class=\"k\">!</span><span class=\"k\">this</span><span class=\"k\">.</span>_list_of_state <span class=\"k\">[</span>state_id<span class=\"k\">])</span>","    <span class=\"k\">{</span>","      console<span class=\"k\">.</span>warn <span class=\"k\">(</span><span class=\"s\">\"vs.fx.Controller.goTo unknown State id:\"</span> <span class=\"k\">+</span> state_id<span class=\"k\">);</span>","      <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"c\">// hide old states view</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_current_state<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>event<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        transition <span class=\"k\">=</span>","          <span class=\"k\">this</span><span class=\"k\">.</span>_list_of_state <span class=\"k\">[</span><span class=\"k\">this</span><span class=\"k\">.</span>_current_state<span class=\"k\">].</span>transitionEvents <span class=\"k\">[</span>event<span class=\"k\">.</span>on<span class=\"k\">];</span>","      <span class=\"k\">}</span>","      state_from <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_list_of_state <span class=\"k\">[</span><span class=\"k\">this</span><span class=\"k\">.</span>_current_state<span class=\"k\">];</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>owner<span class=\"k\">.</span>_beforeStateExit <span class=\"k\">(</span>state_from<span class=\"k\">);</span>","    <span class=\"k\">}</span>","    ","    <span class=\"c\">///</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>_current_state <span class=\"k\">=</span> state_id<span class=\"k\">;</span>","    ","    <span class=\"c\">// show new states view</span>","    state_to <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_list_of_state <span class=\"k\">[</span><span class=\"k\">this</span><span class=\"k\">.</span>_current_state<span class=\"k\">];</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>owner<span class=\"k\">.</span>_beforeStateEnter <span class=\"k\">(</span>state_to<span class=\"k\">,</span> event<span class=\"k\">?</span>event<span class=\"k\">.</span>data<span class=\"k\">:</span><span class=\"k\">null</span><span class=\"k\">);</span>","    ","    <span class=\"k\">if</span> <span class=\"k\">(</span>state_from <span class=\"k\">&amp;&amp;</span> state_from<span class=\"k\">.</span>comp <span class=\"k\">&amp;&amp;</span> state_from<span class=\"k\">.</span>comp<span class=\"k\">.</span>viewWillDisappear<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      state_from<span class=\"k\">.</span>comp<span class=\"k\">.</span>viewWillDisappear <span class=\"k\">();</span>","    <span class=\"k\">}</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>state_to<span class=\"k\">.</span>comp<span class=\"k\">.</span>viewWillAppear<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      state_to<span class=\"k\">.</span>comp<span class=\"k\">.</span>viewWillAppear <span class=\"k\">();</span>","    <span class=\"k\">}</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>owner<span class=\"k\">.</span>_delegate <span class=\"k\">&amp;&amp;</span> <span class=\"k\">this</span><span class=\"k\">.</span>owner<span class=\"k\">.</span>_delegate<span class=\"k\">.</span>controllerViewWillChange<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>state_from<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>owner<span class=\"k\">.</span>_delegate<span class=\"k\">.</span>controllerViewWillChange","          <span class=\"k\">(</span>state_from<span class=\"k\">.</span>comp<span class=\"k\">,</span> state_to<span class=\"k\">.</span>comp<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>owner<span class=\"k\">);</span>","      <span class=\"k\">}</span>","      <span class=\"k\">else</span>","      <span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>owner<span class=\"k\">.</span>_delegate<span class=\"k\">.</span>controllerViewWillChange","          <span class=\"k\">(</span><span class=\"k\">null</span><span class=\"k\">,</span> state_to<span class=\"k\">.</span>comp<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>owner<span class=\"k\">);</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">if</span> <span class=\"k\">(</span>transition<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>owner<span class=\"k\">.</span>_animateComponents <span class=\"k\">(</span>","        state_from<span class=\"k\">.</span>comp<span class=\"k\">,</span> state_to<span class=\"k\">.</span>comp<span class=\"k\">,</span>","        transition<span class=\"k\">.</span>animation_out<span class=\"k\">,</span> transition<span class=\"k\">.</span>animation_in<span class=\"k\">,</span>","        <span class=\"k\">null</span><span class=\"k\">,</span> instant<span class=\"k\">);</span>","    <span class=\"k\">}</span>","    <span class=\"k\">else</span>","    <span class=\"k\">{</span>","      state_to<span class=\"k\">.</span>comp<span class=\"k\">.</span>show <span class=\"k\">();</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">if</span> <span class=\"k\">(</span>output <span class=\"k\">&amp;&amp;</span> <span class=\"k\">this</span><span class=\"k\">.</span>_output_action <span class=\"k\">[</span>output<span class=\"k\">])</span>","    <span class=\"k\">{</span>","      <span class=\"k\">var</span> clb <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_output_action <span class=\"k\">[</span>output<span class=\"k\">];</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>clb <span class=\"k\">instanceof</span> Function<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        clb<span class=\"k\">.</span>call <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_owner<span class=\"k\">,</span> event<span class=\"k\">);</span>","      <span class=\"k\">}</span>","      <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>util<span class=\"k\">.</span>isString <span class=\"k\">(</span>clb<span class=\"k\">))</span>","      <span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>_owner <span class=\"k\">[</span><span class=\"k\">this</span><span class=\"k\">.</span>_output_action <span class=\"k\">[</span>output<span class=\"k\">]]</span> <span class=\"k\">(</span>event<span class=\"k\">);</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  notify <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>event<span class=\"k\">,</span> instant<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_fsm <span class=\"k\">||</span> <span class=\"k\">!</span>event <span class=\"k\">||</span> <span class=\"k\">!</span>event<span class=\"k\">.</span>type<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>fsmNotify <span class=\"k\">(</span>event<span class=\"k\">.</span>type<span class=\"k\">,</span> event<span class=\"k\">.</span>data<span class=\"k\">,</span> instant<span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","<span class=\"c\">/*********************************************************</span>","<span class=\"c\"> *                  Controller clear</span>","<span class=\"c\"> *********************************************************/</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * Clear the vs.fx.Controller.</span>","<span class=\"c\">   * All state, event and binding are deleted</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.fx.Controller#clear</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  clear <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">)</span> <span class=\"k\">return</span><span class=\"k\">;</span>","    ","    <span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>clear <span class=\"k\">();</span>","  <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","util<span class=\"k\">.</span>extendClass <span class=\"k\">(</span>Controller<span class=\"k\">,</span> core<span class=\"k\">.</span>EventSource<span class=\"k\">);</span>","","<span class=\"c\">/********************************************************************</span>","<span class=\"c\">                  Define class properties</span>","<span class=\"c\">********************************************************************/</span>","","util<span class=\"k\">.</span>defineClassProperties <span class=\"k\">(</span>Controller<span class=\"k\">,</span> <span class=\"k\">{</span>","  <span class=\"s\">'initialComponent'</span><span class=\"k\">:</span> <span class=\"k\">{</span>","    <span class=\"c\">/*****************************************************************</span>","<span class=\"c\">     *     Properties declaration</span>","<span class=\"c\">     ****************************************************************/</span>","  ","    <span class=\"c\">/**</span>","<span class=\"c\">     * Define the initiale component</span>","<span class=\"c\">     * Generate a exception if the component was not already registered</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * @name vs.fx.Controller#initialComponent </span>","<span class=\"c\">     * @param {string} state_id the state</span>","<span class=\"c\">     */</span>","    set <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>comp_id<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_fsm <span class=\"k\">||</span> <span class=\"k\">!</span>comp_id<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>_initial_component <span class=\"k\">=</span> undefined<span class=\"k\">;</span>","        <span class=\"k\">return</span><span class=\"k\">;</span>","      <span class=\"k\">}</span>","     ","      <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>existState <span class=\"k\">(</span>comp_id<span class=\"k\">))</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","  ","      <span class=\"c\">// set initial state and go to it   </span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_initial_component <span class=\"k\">=</span> comp_id<span class=\"k\">;</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>initialState <span class=\"k\">=</span> comp_id<span class=\"k\">;</span>","      ","      <span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>goTo <span class=\"k\">(</span>comp_id<span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","    ","    <span class=\"c\">/**</span>","<span class=\"c\">     * @ignore</span>","<span class=\"c\">     */</span>","    get <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","    <span class=\"k\">{</span>","      <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_initial_component<span class=\"k\">;</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  <span class=\"s\">'delegate'</span><span class=\"k\">:</span> <span class=\"k\">{</span>","  ","    <span class=\"c\">/** </span>","<span class=\"c\">     * Set the delegate.</span>","<span class=\"c\">     * It should implements following methods</span>","<span class=\"c\">     * &lt;ul&gt;</span>","<span class=\"c\">     *   &lt;li/&gt;controllerViewWillChange :function</span>","<span class=\"c\">     *           (from vs.ui.View, to vs.ui.View, controller),</span>","<span class=\"c\">     *           Called when the view changed</span>","<span class=\"c\">     *   &lt;li/&gt;controllerAnimationDidEnd : function</span>","<span class=\"c\">     *           (from vs.ui.View, to vs.ui.View, controller), Called just after </span>","<span class=\"c\">     *         the animation ended</span>","<span class=\"c\">     * &lt;/ul&gt;</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * @name vs.fx.Controller#delegate </span>","<span class=\"c\">     * @type {Object}</span>","<span class=\"c\">     */</span> ","    set <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>v<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_delegate <span class=\"k\">=</span> v<span class=\"k\">;</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">);</span>","<span class=\"c\">/********************************************************************</span>","<span class=\"c\">                      Export</span>","<span class=\"c\">*********************************************************************/</span>","<span class=\"c\">/** @private */</span>","fx<span class=\"k\">.</span>Controller <span class=\"k\">=</span> Controller<span class=\"k\">;</span>","<span class=\"c\">/**</span>","<span class=\"c\">  Copyright (C) 2009-2012. David Thevenin, ViniSketch SARL (c), and </span>","<span class=\"c\">  contributors. All rights reserved</span>","<span class=\"c\">  </span>","<span class=\"c\">  This program is free software: you can redistribute it and/or modify</span>","<span class=\"c\">  it under the terms of the GNU Lesser General Public License as published</span>","<span class=\"c\">  by the Free Software Foundation, either version 3 of the License, or</span>","<span class=\"c\">  (at your option) any later version.</span>","<span class=\"c\">  </span>","<span class=\"c\">  This program is distributed in the hope that it will be useful,</span>","<span class=\"c\">  but WITHOUT ANY WARRANTY; without even the implied warranty of</span>","<span class=\"c\">  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the</span>","<span class=\"c\">  GNU Lesser General Public License for more details.</span>","<span class=\"c\">  </span>","<span class=\"c\">  You should have received a copy of the GNU Lesser General Public License</span>","<span class=\"c\">  along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.</span>","<span class=\"c\">*/</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> *  The vs.fx.StackController class &lt;br /&gt;</span>","<span class=\"c\"> * </span>","<span class=\"c\"> *  @see vs.fx.SlideController</span>","<span class=\"c\"> *  @see vs.fx.CardController</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  @extends vs.fx.Controller</span>","<span class=\"c\"> *  @class</span>","<span class=\"c\"> *  The vs.fx.StackController class &lt;br /&gt;</span>","<span class=\"c\"> *  This an abstract layer controller and it should no be instanciated.</span>","<span class=\"c\"> *  Use {@link vs.fx.SliderController} or {@link vs.fx.CardController} layers.</span>","<span class=\"c\"> *  @abstract</span>","<span class=\"c\"> * </span>","<span class=\"c\"> *  @author David Thevenin</span>","<span class=\"c\"> * @name vs.fx.StackController</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  @constructor</span>","<span class=\"c\"> *   Creates a new vs.fx.StackController.</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @param {vs.ui.View} owner the View using this Layer [mandatory]</span>","<span class=\"c\"> * @param {String} extension The hole into the vs.fx.View will be inserted. </span>","<span class=\"c\"> *     ['children' by default]</span>","<span class=\"c\"> */</span>","<span class=\"k\">function</span> StackController <span class=\"k\">(</span>owner<span class=\"k\">)</span>","<span class=\"k\">{</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>parent <span class=\"k\">=</span> Controller<span class=\"k\">;</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>parent <span class=\"k\">(</span>owner<span class=\"k\">);</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>constructor <span class=\"k\">=</span> StackController<span class=\"k\">;</span>","  ","  <span class=\"k\">if</span> <span class=\"k\">(!</span>arguments<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">return</span><span class=\"k\">;</span>","","  <span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>addInput <span class=\"k\">(</span>StackController<span class=\"k\">.</span>NEXT<span class=\"k\">);</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>addInput <span class=\"k\">(</span>StackController<span class=\"k\">.</span>PRED<span class=\"k\">);</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>addInput <span class=\"k\">(</span>StackController<span class=\"k\">.</span>FIRST<span class=\"k\">);</span>","","  <span class=\"k\">this</span><span class=\"k\">.</span>_states_array <span class=\"k\">=</span> <span class=\"k\">new</span> Array <span class=\"k\">();</span>","<span class=\"k\">}</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * The duration of the animation between two views</span>","<span class=\"c\"> * @name vs.fx.StackController.ANIMATION_DURATION</span>","<span class=\"c\"> */</span>","StackController<span class=\"k\">.</span>ANIMATION_DURATION <span class=\"k\">=</span> <span class=\"s\">350</span><span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * @private</span>","<span class=\"c\"> * @name vs.fx.StackController.NEXT</span>","<span class=\"c\"> * @const</span>","<span class=\"c\"> */</span>","StackController<span class=\"k\">.</span>NEXT <span class=\"k\">=</span> <span class=\"s\">'next'</span><span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * @private</span>","<span class=\"c\"> * @name vs.fx.StackController.PRED</span>","<span class=\"c\"> * @const</span>","<span class=\"c\"> */</span>","StackController<span class=\"k\">.</span>PRED <span class=\"k\">=</span> <span class=\"s\">'pred'</span><span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * @private</span>","<span class=\"c\"> * @name vs.fx.StackController.FIRST</span>","<span class=\"c\"> * @const</span>","<span class=\"c\"> */</span>","StackController<span class=\"k\">.</span>FIRST <span class=\"k\">=</span> <span class=\"s\">'first'</span><span class=\"k\">;</span>","","StackController<span class=\"k\">.</span>prototype <span class=\"k\">=</span> <span class=\"k\">{</span>","","<span class=\"c\">/********************************************************************</span>","<span class=\"c\">                  protected members declarations</span>","<span class=\"c\">********************************************************************/</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  _is_tactile <span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  _owner_handler_event_extended <span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  _owner_handler_event <span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  _animation_duration<span class=\"k\">:</span> StackController<span class=\"k\">.</span>ANIMATION_DURATION<span class=\"k\">,</span> ","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  _last_comp_id <span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  _states_array <span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @type {number}</span>","<span class=\"c\">   */</span>","  __nb_panels <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @type {Array}</span>","<span class=\"c\">   */</span>","  _view_size<span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">,</span>","  ","<span class=\"c\">/********************************************************************</span>","","<span class=\"c\">********************************************************************/</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  destructor <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    <span class=\"k\">delete</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_states_array<span class=\"k\">);</span>","    ","    Controller<span class=\"k\">.</span>prototype<span class=\"k\">.</span>destructor<span class=\"k\">.</span>call <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  initComponent <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    Controller<span class=\"k\">.</span>prototype<span class=\"k\">.</span>initComponent<span class=\"k\">.</span>call <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","    ","    <span class=\"k\">this</span><span class=\"k\">.</span>isTactile <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_is_tactile<span class=\"k\">;</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>_updateViewSize <span class=\"k\">();</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","","<span class=\"c\">/********************************************************************</span>","","<span class=\"c\">********************************************************************/</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   *  Add a child component to the Slider Manager</span>","<span class=\"c\">   *  &lt;p&gt;</span>","<span class=\"c\">   *  The component must be a graphic component (vs.ui.View).</span>","<span class=\"c\">   *  It will be instantiated, init and added automaticaly</span>","<span class=\"c\">   *  &lt;p&gt;</span>","<span class=\"c\">   *  The component instantiation is a lazy algorithm. The component will</span>","<span class=\"c\">   *  be instantiated and add into the DOM tree only when it has to be show</span>","<span class=\"c\">   *  to the user.</span>","<span class=\"c\">   *  &lt;p&gt;</span>","<span class=\"c\">   *  @example</span>","<span class=\"c\">   *  var myController = new vs.fx.StackController (this | myView);</span>","<span class=\"c\">   *  myController.init ();</span>","<span class=\"c\">   *  myController.push ('AComponent1', data1);</span>","<span class=\"c\">   *  myController.push ('AComponent1', data2);</span>","<span class=\"c\">   *  myController.push ('AComponent2', data3);</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.fx.StackController#push</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @param {vs.ui.View | String} comp The GUI component or the component</span>","<span class=\"c\">   *     name to instanciate   </span>","<span class=\"c\">   * @param {Object} config Configuration structure need to build the component.</span>","<span class=\"c\">   * @param {Array} bindings Bindings configuration [[spec, observer, method], ...]</span>","<span class=\"c\">   */</span>","  push <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>comp<span class=\"k\">,</span> data<span class=\"k\">,</span> extension<span class=\"k\">,</span> bindings<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>comp<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>data<span class=\"k\">)</span> <span class=\"k\">{</span> data <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    ","    <span class=\"k\">var</span> state_id <span class=\"k\">=</span> Controller<span class=\"k\">.</span>prototype<span class=\"k\">.</span>push<span class=\"k\">.</span>call","      <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> comp<span class=\"k\">,</span> data<span class=\"k\">,</span> extension<span class=\"k\">,</span> bindings<span class=\"k\">);</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>state_id<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    ","    <span class=\"k\">this</span><span class=\"k\">.</span>_states_array<span class=\"k\">.</span>push <span class=\"k\">(</span>state_id<span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>__nb_panels <span class=\"k\">++;</span> ","","    <span class=\"c\">// first item</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__nb_panels <span class=\"k\">===</span> <span class=\"s\">1</span><span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>initialComponent <span class=\"k\">=</span> state_id<span class=\"k\">;</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_last_comp_id <span class=\"k\">=</span> state_id<span class=\"k\">;</span>","","      <span class=\"k\">return</span> state_id<span class=\"k\">;</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">this</span><span class=\"k\">.</span>addTransition <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_last_comp_id<span class=\"k\">,</span> state_id<span class=\"k\">,</span> StackController<span class=\"k\">.</span>NEXT<span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>addTransition <span class=\"k\">(</span>state_id<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>_last_comp_id<span class=\"k\">,</span> StackController<span class=\"k\">.</span>PRED<span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>addTransition ","      <span class=\"k\">(</span>state_id<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>_initial_component<span class=\"k\">,</span> StackController<span class=\"k\">.</span>FIRST<span class=\"k\">);</span>","    ","    <span class=\"c\">// create the second view </span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_last_comp_id <span class=\"k\">===</span> <span class=\"k\">this</span><span class=\"k\">.</span>_initial_state<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      state <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>_list_of_state <span class=\"k\">[</span>state_id<span class=\"k\">];</span>","      <span class=\"k\">if</span> <span class=\"k\">(!</span>state<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        console<span class=\"k\">.</span>error <span class=\"k\">(</span><span class=\"s\">\"Unknown error in vs.fx.StackController.push\"</span><span class=\"k\">);</span>","        <span class=\"k\">return</span><span class=\"k\">;</span>","      <span class=\"k\">}</span>","      <span class=\"k\">if</span> <span class=\"k\">(!</span>state<span class=\"k\">.</span>comp<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        state<span class=\"k\">.</span>comp <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_owner<span class=\"k\">.</span>createAndAddComponent","          <span class=\"k\">(</span>state<span class=\"k\">.</span>comp_name<span class=\"k\">,</span> state<span class=\"k\">.</span>init_data<span class=\"k\">,</span> extension<span class=\"k\">);</span>","          ","        state<span class=\"k\">.</span>comp<span class=\"k\">.</span>configure <span class=\"k\">(</span>state<span class=\"k\">.</span>init_data<span class=\"k\">);</span>","        state<span class=\"k\">.</span>comp<span class=\"k\">.</span>setStyle <span class=\"k\">(</span><span class=\"s\">'position'</span><span class=\"k\">,</span> <span class=\"s\">'absolute'</span><span class=\"k\">);</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>state<span class=\"k\">.</span>comp <span class=\"k\">&amp;&amp;</span> state<span class=\"k\">.</span>comp<span class=\"k\">.</span>propertiesDidChange<span class=\"k\">)</span> ","        <span class=\"k\">{</span> ","          state<span class=\"k\">.</span>comp<span class=\"k\">.</span>propertiesDidChange <span class=\"k\">();</span>","        <span class=\"k\">}</span>","        state<span class=\"k\">.</span>comp<span class=\"k\">.</span>propertyChange <span class=\"k\">();</span>","      <span class=\"k\">}</span>","      ","      state<span class=\"k\">.</span>comp<span class=\"k\">.</span>show <span class=\"k\">();</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">this</span><span class=\"k\">.</span>_last_comp_id <span class=\"k\">=</span> state_id<span class=\"k\">;</span>","    <span class=\"k\">return</span> state_id<span class=\"k\">;</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  _updateViewSize <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{}</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   *  Remove a child component to the Slider Manager</span>","<span class=\"c\">   *  &lt;p&gt;</span>","<span class=\"c\">   *  The component can be specified as an Object or an id.</span>","<span class=\"c\">   *  &lt;p&gt;</span>","<span class=\"c\">   *  @example</span>","<span class=\"c\">   *  myComp.layer.remove (myComp);</span>","<span class=\"c\">   *  myComp.layer.remove (myComp.id);</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.fx.StackController#remove</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @param {vs.ui.View | String} comp The GUI component or the component id</span>","<span class=\"c\">   */</span>","  remove <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>comp<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>comp<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    ","    <span class=\"k\">var</span> state_id <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>util<span class=\"k\">.</span>isString <span class=\"k\">(</span>comp<span class=\"k\">))</span>","    <span class=\"k\">{</span> state_id <span class=\"k\">=</span> comp<span class=\"k\">;</span> <span class=\"k\">}</span>","    <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(!</span>util<span class=\"k\">.</span>isString <span class=\"k\">(</span>comp<span class=\"k\">))</span>","    <span class=\"k\">{</span> state_id <span class=\"k\">=</span> comp<span class=\"k\">.</span>id<span class=\"k\">;</span> <span class=\"k\">}</span>","    ","    <span class=\"k\">var</span> pos <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_states_array<span class=\"k\">.</span>findItem <span class=\"k\">(</span>state_id<span class=\"k\">);</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>pos <span class=\"k\">===</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    ","    <span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>removeTransitionTo <span class=\"k\">(</span>state_id<span class=\"k\">,</span> StackController<span class=\"k\">.</span>NEXT<span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>removeTransitionFrom <span class=\"k\">(</span>state_id<span class=\"k\">,</span> StackController<span class=\"k\">.</span>PRED<span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>removeTransitionFrom <span class=\"k\">(</span>state_id<span class=\"k\">,</span> StackController<span class=\"k\">.</span>FIRST<span class=\"k\">);</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>_states_array<span class=\"k\">.</span>remove <span class=\"k\">(</span>pos<span class=\"k\">);</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>__nb_panels <span class=\"k\">--;</span> ","    <span class=\"k\">var</span> state <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>_list_of_state <span class=\"k\">[</span>state_id<span class=\"k\">];</span>","    ","    <span class=\"k\">if</span> <span class=\"k\">(</span>pos <span class=\"k\">===</span> <span class=\"s\">0</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">this</span><span class=\"k\">.</span>__nb_panels <span class=\"k\">&gt;</span> <span class=\"s\">0</span><span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_initial_component <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_states_array <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","      ","      <span class=\"c\">// re configure all to FIRST transition</span>","      <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> state_id_temp <span class=\"k\">in</span> <span class=\"k\">this</span><span class=\"k\">.</span>_states_array<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>state_id_temp <span class=\"k\">===</span> state_id<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">continue</span><span class=\"k\">;</span> <span class=\"k\">}</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>state_id_temp <span class=\"k\">===</span> <span class=\"k\">this</span><span class=\"k\">.</span>_initial_component<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">continue</span><span class=\"k\">;</span> <span class=\"k\">}</span>","","        <span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>removeTransitionFrom <span class=\"k\">(</span>state_id_temp<span class=\"k\">,</span> StackController<span class=\"k\">.</span>FIRST<span class=\"k\">);</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>addTransition","          <span class=\"k\">(</span>state_id_temp<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>_initial_component<span class=\"k\">,</span> StackController<span class=\"k\">.</span>FIRST<span class=\"k\">);</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__nb_panels <span class=\"k\">===</span> <span class=\"s\">0</span><span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_initial_component <span class=\"k\">=</span> undefined<span class=\"k\">;</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>_current_state <span class=\"k\">=</span> undefined<span class=\"k\">;</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_initial_component<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>_current_state <span class=\"k\">===</span> state_id<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>pos <span class=\"k\">===</span> <span class=\"s\">0</span><span class=\"k\">)</span>","        <span class=\"k\">{</span>","          <span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>goTo <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_initial_component<span class=\"k\">);</span>","        <span class=\"k\">}</span>","        <span class=\"k\">else</span>","        <span class=\"k\">{</span>","          <span class=\"k\">if</span> <span class=\"k\">(</span>pos <span class=\"k\">===</span> <span class=\"k\">this</span><span class=\"k\">.</span>_states_array<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">{</span> pos <span class=\"k\">--;</span> <span class=\"k\">}</span>","          <span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>goTo <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_states_array <span class=\"k\">[</span>pos<span class=\"k\">]);</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span>","      <span class=\"k\">else</span>","      <span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>goTo <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>_current_state<span class=\"k\">);</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    Controller<span class=\"k\">.</span>prototype<span class=\"k\">.</span>remove<span class=\"k\">.</span>call <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> comp<span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @param {number} orientation = {0, 180, -90, 90}</span>","<span class=\"c\">   */</span>","  orientationDidChange<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>orientation<span class=\"k\">)</span>","  <span class=\"k\">{</span> ","    <span class=\"k\">this</span><span class=\"k\">.</span>_updateViewSize <span class=\"k\">();</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","<span class=\"c\">/*********************************************************</span>","<span class=\"c\"> *                  Event management</span>","<span class=\"c\"> *********************************************************/</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * Go to the view specified by its id if it exist.</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.fx.StackController#goToViewId</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   * </span>","<span class=\"c\">   * @return true if the transition is possible, false if not (no view exists)</span>","<span class=\"c\">   */</span>","  goToViewId <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>id<span class=\"k\">,</span> instant<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">var</span> pos <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_states_array<span class=\"k\">.</span>findItem <span class=\"k\">(</span>id<span class=\"k\">);</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>pos <span class=\"k\">===</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    ","    <span class=\"k\">this</span><span class=\"k\">.</span>goToViewAt <span class=\"k\">(</span>pos<span class=\"k\">,</span> instant<span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   *  Go to the view specified by its position (index start at 0)</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.fx.StackController#goToViewAt</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @param {number} index The component index</span>","<span class=\"c\">   */</span>","  goToViewAt <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>pos<span class=\"k\">,</span> instant<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>pos <span class=\"k\">&lt;</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>pos <span class=\"k\">&gt;</span> <span class=\"k\">this</span><span class=\"k\">.</span>_states_array<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    ","    <span class=\"k\">var</span> current_pos <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_states_array<span class=\"k\">.</span>findItem <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>_current_state<span class=\"k\">);</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>current_pos <span class=\"k\">===</span> pos<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    ","    <span class=\"k\">if</span> <span class=\"k\">(</span>pos <span class=\"k\">&gt;</span> current_pos<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">while</span> <span class=\"k\">(</span>current_pos <span class=\"k\">&lt;</span> pos <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">)</span>","      <span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>fsmNotify <span class=\"k\">(</span>StackController<span class=\"k\">.</span>NEXT<span class=\"k\">,</span> <span class=\"k\">null</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","        current_pos <span class=\"k\">++;</span>","      <span class=\"k\">}</span>","      <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>fsmNotify <span class=\"k\">(</span>StackController<span class=\"k\">.</span>NEXT<span class=\"k\">,</span> instant<span class=\"k\">);</span>","    <span class=\"k\">}</span>","    <span class=\"k\">else</span>","    <span class=\"k\">{</span>","      <span class=\"k\">while</span> <span class=\"k\">(</span>pos <span class=\"k\">+</span> <span class=\"s\">1</span> <span class=\"k\">&lt;</span> current_pos <span class=\"k\">)</span>","      <span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>fsmNotify <span class=\"k\">(</span>StackController<span class=\"k\">.</span>PRED<span class=\"k\">,</span> <span class=\"k\">null</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","        current_pos <span class=\"k\">--;</span>","      <span class=\"k\">}</span>","      <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>fsmNotify <span class=\"k\">(</span>StackController<span class=\"k\">.</span>PRED<span class=\"k\">,</span> instant<span class=\"k\">);</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * Go to the next view if it exist.</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.fx.StackController#goToNextView</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   * </span>","<span class=\"c\">   * @return true if the transition is possible, false if not (no view exists)</span>","<span class=\"c\">   */</span>","  goToNextView <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>instant<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>fsmNotify <span class=\"k\">(</span>StackController<span class=\"k\">.</span>NEXT<span class=\"k\">,</span> <span class=\"k\">null</span><span class=\"k\">,</span> instant<span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * Go to the previous view if it exist.</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.fx.StackController#goToPreviousView</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   * </span>","<span class=\"c\">   * @return true if the transition is possible, false if not (no view exists)</span>","<span class=\"c\">   */</span>","  goToPreviousView <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>instant<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>fsmNotify <span class=\"k\">(</span>StackController<span class=\"k\">.</span>PRED<span class=\"k\">,</span> <span class=\"k\">null</span><span class=\"k\">,</span> instant<span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * Go to the first view</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.fx.StackController#goToFirstView</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   * </span>","<span class=\"c\">   * @return true if the transition is possible</span>","<span class=\"c\">   */</span>","  goToFirstView <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>instant<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>fsmNotify <span class=\"k\">(</span>StackController<span class=\"k\">.</span>FIRST<span class=\"k\">,</span> instant<span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  handleEvent <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>event<span class=\"k\">)</span>","  <span class=\"k\">{}</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","util<span class=\"k\">.</span>extendClass <span class=\"k\">(</span>StackController<span class=\"k\">,</span> Controller<span class=\"k\">);</span>","","<span class=\"c\">/********************************************************************</span>","<span class=\"c\">                  Define class properties</span>","<span class=\"c\">********************************************************************/</span>","","util<span class=\"k\">.</span>defineClassProperties <span class=\"k\">(</span>StackController<span class=\"k\">,</span> <span class=\"k\">{</span>","","  <span class=\"s\">'viewSize'</span><span class=\"k\">:</span> <span class=\"k\">{</span>","   <span class=\"c\">/** </span>","<span class=\"c\">     * Getter|Setter for view size.</span>","<span class=\"c\">     * @name vs.fx.StackController#viewSize </span>","<span class=\"c\">     *</span>","<span class=\"c\">     * @type {Array.&lt;number&gt;}</span>","<span class=\"c\">     */</span> ","    set <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>v<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(!</span>v<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span> ","      <span class=\"k\">if</span> <span class=\"k\">(!</span>util<span class=\"k\">.</span>isArray <span class=\"k\">(</span>v<span class=\"k\">)</span> <span class=\"k\">||</span> v<span class=\"k\">.</span>length <span class=\"k\">!==</span> <span class=\"s\">2</span><span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      <span class=\"k\">if</span> <span class=\"k\">(!</span>util<span class=\"k\">.</span>isNumber <span class=\"k\">(</span>v<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">])</span> <span class=\"k\">||</span> <span class=\"k\">!</span>util<span class=\"k\">.</span>isNumber<span class=\"k\">(</span>v<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]))</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      ","      <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_view_size<span class=\"k\">)</span>","      <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>_view_size <span class=\"k\">=</span> <span class=\"k\">[];</span> <span class=\"k\">}</span>","      ","      <span class=\"k\">this</span><span class=\"k\">.</span>_view_size <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">=</span> v <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_view_size <span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]</span> <span class=\"k\">=</span> v <span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">];</span>","      ","      <span class=\"k\">this</span><span class=\"k\">.</span>_updateViewSize <span class=\"k\">();</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","  ","    <span class=\"c\">/**</span>","<span class=\"c\">     * @ignore</span>","<span class=\"c\">     * @type {Array.&lt;number&gt;}</span>","<span class=\"c\">     */</span>","    get <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_view_size<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_owner<span class=\"k\">.</span>size<span class=\"k\">;</span>","      <span class=\"k\">}</span>","      <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_view_size<span class=\"k\">.</span>slice <span class=\"k\">();</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  <span class=\"s\">'isTactile'</span><span class=\"k\">:</span> <span class=\"k\">{</span>","    <span class=\"c\">/** </span>","<span class=\"c\">     * Getter|Setter for the tab bar style</span>","<span class=\"c\">     * @name vs.fx.StackController#isTactile </span>","<span class=\"c\">     * @type {boolean}</span>","<span class=\"c\">     */</span> ","    set <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>v<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>v<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>_is_tactile <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","        <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_owner <span class=\"k\">||</span> <span class=\"k\">!</span><span class=\"k\">this</span><span class=\"k\">.</span>_owner<span class=\"k\">.</span>view<span class=\"k\">)</span> <span class=\"k\">return</span><span class=\"k\">;</span>","  ","        <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_owner_handler_event_extended<span class=\"k\">)</span>","        <span class=\"k\">{</span>","          <span class=\"k\">this</span><span class=\"k\">.</span>_owner<span class=\"k\">.</span>view<span class=\"k\">.</span>addEventListener <span class=\"k\">(</span>core<span class=\"k\">.</span>POINTER_START<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>_owner<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">);</span>","          <span class=\"k\">this</span><span class=\"k\">.</span>_owner_handler_event <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_owner<span class=\"k\">.</span>handleEvent<span class=\"k\">;</span>","          <span class=\"k\">this</span><span class=\"k\">.</span>_owner<span class=\"k\">.</span>handleEvent <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>handleEvent<span class=\"k\">;</span>","        <span class=\"k\">}</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>_owner_handler_event_extended <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","      <span class=\"k\">}</span>","      <span class=\"k\">else</span>","      <span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>_is_tactile <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","        <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_owner <span class=\"k\">||</span> <span class=\"k\">!</span><span class=\"k\">this</span><span class=\"k\">.</span>_owner<span class=\"k\">.</span>view<span class=\"k\">)</span> <span class=\"k\">return</span><span class=\"k\">;</span>","        ","        <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_owner_handler_event_extended<span class=\"k\">)</span>","        <span class=\"k\">{</span>","          <span class=\"k\">this</span><span class=\"k\">.</span>_owner<span class=\"k\">.</span>view<span class=\"k\">.</span>removeEventListener <span class=\"k\">(</span>core<span class=\"k\">.</span>POINTER_START<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>_owner<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">);</span>","          <span class=\"k\">this</span><span class=\"k\">.</span>_owner<span class=\"k\">.</span>handleEvent <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_owner_handler_event<span class=\"k\">;</span>","          ","          <span class=\"k\">this</span><span class=\"k\">.</span>_owner_handler_event_extended <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","  ","    <span class=\"c\">/** </span>","<span class=\"c\">     * @ignore</span>","<span class=\"c\">     * @return {boolean}</span>","<span class=\"c\">     */</span> ","    get <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","    <span class=\"k\">{</span>","      <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_is_tactile<span class=\"k\">;</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  <span class=\"s\">'animationDuration'</span><span class=\"k\">:</span> <span class=\"k\">{</span>","    <span class=\"c\">/** </span>","<span class=\"c\">     * Set the animation/transition temporisation (in millisecond)</span>","<span class=\"c\">     * @name vs.fx.StackController#animationDuration </span>","<span class=\"c\">     * @type {number}</span>","<span class=\"c\">     */</span> ","    set <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>time<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(!</span>time<span class=\"k\">)</span> <span class=\"k\">{</span> time <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      <span class=\"k\">if</span> <span class=\"k\">(!</span>util<span class=\"k\">.</span>isNumber <span class=\"k\">(</span>time<span class=\"k\">))</span> <span class=\"k\">{</span> <span class=\"k\">return</span> <span class=\"k\">}</span><span class=\"k\">;</span>","      ","      <span class=\"k\">this</span><span class=\"k\">.</span>_animation_duration <span class=\"k\">=</span> time<span class=\"k\">;</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">);</span>","<span class=\"c\">/********************************************************************</span>","<span class=\"c\">                      Export</span>","<span class=\"c\">*********************************************************************/</span>","<span class=\"c\">/** @private */</span>","fx<span class=\"k\">.</span>StackController <span class=\"k\">=</span> StackController<span class=\"k\">;</span>","<span class=\"c\">/**</span>","<span class=\"c\">  Copyright (C) 2009-2012. David Thevenin, ViniSketch SARL (c), and </span>","<span class=\"c\">  contributors. All rights reserved</span>","<span class=\"c\">  </span>","<span class=\"c\">  This program is free software: you can redistribute it and/or modify</span>","<span class=\"c\">  it under the terms of the GNU Lesser General Public License as published</span>","<span class=\"c\">  by the Free Software Foundation, either version 3 of the License, or</span>","<span class=\"c\">  (at your option) any later version.</span>","<span class=\"c\">  </span>","<span class=\"c\">  This program is distributed in the hope that it will be useful,</span>","<span class=\"c\">  but WITHOUT ANY WARRANTY; without even the implied warranty of</span>","<span class=\"c\">  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the</span>","<span class=\"c\">  GNU Lesser General Public License for more details.</span>","<span class=\"c\">  </span>","<span class=\"c\">  You should have received a copy of the GNU Lesser General Public License</span>","<span class=\"c\">  along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.</span>","<span class=\"c\">*/</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> *  The vs.fx.SlideController class &lt;br /&gt;</span>","<span class=\"c\"> *  This layer manage a list of children using a horizontal layout.</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  Children can be slided horizontally (right &lt;-&gt; left) or vertically </span>","<span class=\"c\"> *  (top &lt;-&gt; bottom) using a pointing device (mouse, touch screen, ...),</span>","<span class=\"c\"> *  or using methods goToNextView and goToPreviousView.</span>","<span class=\"c\"> *  &lt;p /&gt;</span>","<span class=\"c\"> *  By default the slider is horizontal, but you can change it using the </span>","<span class=\"c\"> *  property \"orientation\".</span>","<span class=\"c\"> *  &lt;p /&gt;</span>","<span class=\"c\"> *  The following example shows a typical example with panels</span>","<span class=\"c\"> *  (components 1 to 4) that are shows sequentially according user touch slide.</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  &lt;pre&gt;</span>","<span class=\"c\"> *                   (*)</span>","<span class=\"c\"> *                &#226;&#142;&#161;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#226;&#142;&#164;</span>","<span class=\"c\"> *   &#226;&#142;&#161;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#226;&#142;&#164;    &#226;&#142;&#162; &#226;&#142;&#161;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#226;&#142;&#164; &#226;&#142;&#162;   &#226;&#142;&#161;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#226;&#142;&#164;   &#226;&#142;&#161;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#226;&#142;&#164;</span>","<span class=\"c\"> *   &#226;&#142;&#159;      &#226;&#142;&#162;    &#226;&#142;&#162; &#226;&#142;&#162;      &#226;&#142;&#162; &#226;&#142;&#162;   &#226;&#142;&#159;      &#226;&#142;&#162;   &#226;&#142;&#159;      &#226;&#142;&#162;</span>","<span class=\"c\"> *   &#226;&#142;&#159;  (1) &#226;&#142;&#162;    &#226;&#142;&#162; &#226;&#142;&#162;  (2) &#226;&#142;&#162; &#226;&#142;&#162;   &#226;&#142;&#159;  (3) &#226;&#142;&#162;   &#226;&#142;&#159;  (4) &#226;&#142;&#162;</span>","<span class=\"c\"> *   &#226;&#142;&#159;      &#226;&#142;&#162;    &#226;&#142;&#162; &#226;&#142;&#162;      &#226;&#142;&#162; &#226;&#142;&#162;   &#226;&#142;&#159;      &#226;&#142;&#162;   &#226;&#142;&#159;      &#226;&#142;&#162;</span>","<span class=\"c\"> *   &#226;&#142;&#163;______&#226;&#142;&#166;    &#226;&#142;&#162; &#226;&#142;&#163;______&#226;&#142;&#166; &#226;&#142;&#162;   &#226;&#142;&#163;______&#226;&#142;&#166;   &#226;&#142;&#163;______&#226;&#142;&#166;</span>","<span class=\"c\"> *                &#226;&#142;&#163;____________&#226;&#142;&#166;</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  (*) : device screen</span>","<span class=\"c\"> *  (1, ... ,4) : components managed by the SliderLayer</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *   &lt;/pre&gt;</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  &lt;p&gt;</span>","<span class=\"c\"> *  Delegate:</span>","<span class=\"c\"> *  &lt;ul&gt;</span>","<span class=\"c\"> *    &lt;li/&gt;controllerViewWillChange : function (from vs.ui.View, to vs.ui.View, controller),</span>","<span class=\"c\"> *         Called when the view changed</span>","<span class=\"c\"> *    &lt;li/&gt;controllerAnimationDidEnd : function (from vs.ui.View, to vs.ui.View, controller), Called just after </span>","<span class=\"c\"> *         the animation ended</span>","<span class=\"c\"> *  &lt;/ul&gt;</span>","<span class=\"c\"> *  &lt;p&gt;</span>","<span class=\"c\"> *  @example</span>","<span class=\"c\"> *  var layer = new vs.fx.SlideController (myComp);</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  layer.push ('APanel', {id: '1', data: {...}});</span>","<span class=\"c\"> *  layer.push ('APanel', {id: '2', data: {...}});</span>","<span class=\"c\"> *  layer.push ('APanel', {id: '3', data: {...}});</span>","<span class=\"c\"> *  layer.push ('APanel', {id: '4', data: {...}});</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  @extends vs.fx.StackController</span>","<span class=\"c\"> * @name vs.fx.SlideController</span>","<span class=\"c\"> *  @class</span>","<span class=\"c\"> * </span>","<span class=\"c\"> *  @author David Thevenin</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  @constructor</span>","<span class=\"c\"> *   Creates a new vs.fx.SlideController.</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @param {vs.ui.View} owner the View using this Layer [mandatory]</span>","<span class=\"c\"> */</span>","<span class=\"k\">function</span> SlideController <span class=\"k\">(</span>owner<span class=\"k\">)</span>","<span class=\"k\">{</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>parent <span class=\"k\">=</span> StackController<span class=\"k\">;</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>parent <span class=\"k\">(</span>owner<span class=\"k\">);</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>constructor <span class=\"k\">=</span> SlideController<span class=\"k\">;</span>","  ","  <span class=\"k\">if</span> <span class=\"k\">(!</span>arguments<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">return</span><span class=\"k\">;</span>","  ","  <span class=\"k\">this</span><span class=\"k\">.</span>_transition_out_1 <span class=\"k\">=</span> <span class=\"k\">new</span> TranslateAnimation <span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span><span class=\"s\">0</span><span class=\"k\">,</span><span class=\"s\">0</span><span class=\"k\">);</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>_transition_out_2 <span class=\"k\">=</span> <span class=\"k\">new</span> TranslateAnimation <span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span><span class=\"s\">0</span><span class=\"k\">,</span><span class=\"s\">0</span><span class=\"k\">);</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>_transition_clear <span class=\"k\">=</span> <span class=\"k\">new</span> TranslateAnimation <span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span><span class=\"s\">0</span><span class=\"k\">,</span><span class=\"s\">0</span><span class=\"k\">);</span>","","  <span class=\"k\">this</span><span class=\"k\">.</span>animationDuration <span class=\"k\">=</span> SlideController<span class=\"k\">.</span>ANIMATION_DURATION<span class=\"k\">;</span>","<span class=\"k\">}</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * The duration of the animation between two views</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @name vs.fx.SlideController.ANIMATION_DURATION</span>","<span class=\"c\"> */</span>","SlideController<span class=\"k\">.</span>ANIMATION_DURATION <span class=\"k\">=</span> <span class=\"s\">500</span><span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * Horizontal slide (defaut)</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @name vs.fx.SlideController.HORIZONTAL</span>","<span class=\"c\"> * @const</span>","<span class=\"c\"> */</span>","SlideController<span class=\"k\">.</span>HORIZONTAL <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * Vertical slide</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @name vs.fx.SlideController.VERTICAL</span>","<span class=\"c\"> * @const</span>","<span class=\"c\"> */</span>","SlideController<span class=\"k\">.</span>VERTICAL <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">;</span>","","SlideController<span class=\"k\">.</span>prototype <span class=\"k\">=</span> <span class=\"k\">{</span>","","<span class=\"c\">/********************************************************************</span>","<span class=\"c\">                  protected members declarations</span>","<span class=\"c\">********************************************************************/</span>","  <span class=\"c\">/**</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @type {number}</span>","<span class=\"c\">   */</span>","  _delta <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @type {number}</span>","<span class=\"c\">   */</span>","  _orientation <span class=\"k\">:</span> SlideController<span class=\"k\">.</span>HORIZONTAL<span class=\"k\">,</span>","    ","  <span class=\"c\">/**</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @type {vs.fx.TranslateAnimation}</span>","<span class=\"c\">   */</span>","  _transition_out_1 <span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @type {vs.fx.TranslateAnimation}</span>","<span class=\"c\">   */</span>","  _transition_out_2 <span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">,</span>","    ","  <span class=\"c\">/**</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @type {vs.fx.TranslateAnimation}</span>","<span class=\"c\">   */</span>","  _transition_clear <span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">,</span>  ","","<span class=\"c\">/*********************************************************</span>","<span class=\"c\"> *                 behavior update</span>","<span class=\"c\"> *********************************************************/</span>","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  _updateViewSize <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    <span class=\"k\">var</span> size <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>viewSize<span class=\"k\">,</span> i<span class=\"k\">,</span> state_id<span class=\"k\">,</span> state<span class=\"k\">,</span> transform<span class=\"k\">;</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_orientation <span class=\"k\">===</span> SlideController<span class=\"k\">.</span>HORIZONTAL<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_transition_out_1<span class=\"k\">.</span>x <span class=\"k\">=</span> <span class=\"k\">-</span>size <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_transition_out_1<span class=\"k\">.</span>y <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_transition_out_2<span class=\"k\">.</span>x <span class=\"k\">=</span> size <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_transition_out_2<span class=\"k\">.</span>y <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","    <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_orientation <span class=\"k\">===</span> SlideController<span class=\"k\">.</span>VERTICAL<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_transition_out_1<span class=\"k\">.</span>x <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_transition_out_1<span class=\"k\">.</span>y <span class=\"k\">=</span> <span class=\"k\">-</span>size <span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">];</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_transition_out_2<span class=\"k\">.</span>x <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_transition_out_2<span class=\"k\">.</span>y <span class=\"k\">=</span> size <span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">];</span>","    <span class=\"k\">}</span>","    ","    <span class=\"c\">// define transformation for view before current one</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_orientation <span class=\"k\">===</span> SlideController<span class=\"k\">.</span>HORIZONTAL<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      transform <span class=\"k\">=</span> <span class=\"s\">\"translate3D(-\"</span> <span class=\"k\">+</span> size <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">+</span> <span class=\"s\">\"px,0,0)\"</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","    <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_orientation <span class=\"k\">===</span> SlideController<span class=\"k\">.</span>VERTICAL<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      transform <span class=\"k\">=</span> <span class=\"s\">\"translate3D(0,-\"</span> <span class=\"k\">+</span> size <span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]</span> <span class=\"k\">+</span> <span class=\"s\">\"px,0)\"</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">for</span> <span class=\"k\">(</span>i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> <span class=\"k\">this</span><span class=\"k\">.</span>_states_array<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++)</span>","    <span class=\"k\">{</span>","      state_id <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_states_array <span class=\"k\">[</span>i<span class=\"k\">];</span>","      state <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>_list_of_state <span class=\"k\">[</span>state_id<span class=\"k\">];</span>","      ","      <span class=\"k\">if</span> <span class=\"k\">(!</span>state <span class=\"k\">||</span> <span class=\"k\">!</span>state<span class=\"k\">.</span>comp<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">continue</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      ","      <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>_current_state <span class=\"k\">===</span> state_id<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        <span class=\"c\">// define transformation for view after current one</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_orientation <span class=\"k\">===</span> SlideController<span class=\"k\">.</span>HORIZONTAL<span class=\"k\">)</span>","        <span class=\"k\">{</span>","          transform <span class=\"k\">=</span> <span class=\"s\">\"translate3D(\"</span> <span class=\"k\">+</span> size <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">+</span> <span class=\"s\">\"px,0,0)\"</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","        <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_orientation <span class=\"k\">===</span> SlideController<span class=\"k\">.</span>VERTICAL<span class=\"k\">)</span>","        <span class=\"k\">{</span>","          transform <span class=\"k\">=</span> <span class=\"s\">\"translate3D(0,\"</span> <span class=\"k\">+</span> size <span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]</span> <span class=\"k\">+</span> <span class=\"s\">\"px,0)\"</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","        ","        <span class=\"c\">// set no transformation for the current one</span>","        state<span class=\"k\">.</span>comp<span class=\"k\">.</span>view<span class=\"k\">.</span>style<span class=\"k\">.</span>webkitTransitionDuration <span class=\"k\">=</span> <span class=\"s\">'0'</span><span class=\"k\">;</span>","        setElementTransform <span class=\"k\">(</span>state<span class=\"k\">.</span>comp<span class=\"k\">.</span>view<span class=\"k\">,</span> <span class=\"s\">\"translate3D(0,0,0)\"</span><span class=\"k\">);</span>","        <span class=\"k\">continue</span><span class=\"k\">;</span>","      <span class=\"k\">}</span>","      ","      state<span class=\"k\">.</span>comp<span class=\"k\">.</span>view<span class=\"k\">.</span>style<span class=\"k\">.</span>webkitTransitionDuration <span class=\"k\">=</span> <span class=\"s\">'0'</span><span class=\"k\">;</span>","      setElementTransform <span class=\"k\">(</span>state<span class=\"k\">.</span>comp<span class=\"k\">.</span>view<span class=\"k\">,</span> transform<span class=\"k\">);</span>","    <span class=\"k\">}</span> ","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   *  Add a child component to the Slider Manager</span>","<span class=\"c\">   *  &lt;p&gt;</span>","<span class=\"c\">   *  The component must be a graphic component (vs.ui.View).</span>","<span class=\"c\">   *  It will be instantiated, init and added automaticaly</span>","<span class=\"c\">   *  &lt;p&gt;</span>","<span class=\"c\">   *  The component instantiation is a lazy algorithm. The component will</span>","<span class=\"c\">   *  be instantiated and add into the DOM tree only when it has to be show</span>","<span class=\"c\">   *  to the user.</span>","<span class=\"c\">   *  &lt;p&gt;</span>","<span class=\"c\">   *  @example</span>","<span class=\"c\">   *  var myController = new vs.fx.SlideController (this | myView);</span>","<span class=\"c\">   *  myController.init ();</span>","<span class=\"c\">   *  myController.push ('AComponent1', data1);</span>","<span class=\"c\">   *  myController.push ('AComponent1', data2);</span>","<span class=\"c\">   *  myController.push ('AComponent2', data3);</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.fx.SlideController#push</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @param {vs.ui.View | String} comp The GUI component or the component</span>","<span class=\"c\">   *     name to instanciate   </span>","<span class=\"c\">   * @param {Object} config Configuration structure need to build the component.</span>","<span class=\"c\">   * @param {Array} bindings Bindings configuration [[spec, observer, method], ...]</span>","<span class=\"c\">   */</span>","  push <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>comp<span class=\"k\">,</span> data<span class=\"k\">,</span> extension<span class=\"k\">,</span> bindings<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>comp<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>data<span class=\"k\">)</span> <span class=\"k\">{</span> data <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    ","    <span class=\"k\">var</span> state_id <span class=\"k\">=</span> Controller<span class=\"k\">.</span>prototype<span class=\"k\">.</span>push<span class=\"k\">.</span>call","      <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> comp<span class=\"k\">,</span> data<span class=\"k\">,</span> extension<span class=\"k\">,</span> bindings<span class=\"k\">);</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>state_id<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    ","    <span class=\"k\">this</span><span class=\"k\">.</span>_states_array<span class=\"k\">.</span>push <span class=\"k\">(</span>state_id<span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>__nb_panels <span class=\"k\">++;</span> ","","    <span class=\"c\">// first item</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__nb_panels <span class=\"k\">===</span> <span class=\"s\">1</span><span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>initialComponent <span class=\"k\">=</span> state_id<span class=\"k\">;</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_last_comp_id <span class=\"k\">=</span> state_id<span class=\"k\">;</span>","","      <span class=\"k\">return</span> state_id<span class=\"k\">;</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">this</span><span class=\"k\">.</span>addTransition <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_last_comp_id<span class=\"k\">,</span> state_id<span class=\"k\">,</span> StackController<span class=\"k\">.</span>NEXT<span class=\"k\">,</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_transition_out_1<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>_transition_clear<span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>addTransition <span class=\"k\">(</span>state_id<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>_last_comp_id<span class=\"k\">,</span> StackController<span class=\"k\">.</span>PRED<span class=\"k\">,</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_transition_out_2<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>_transition_clear<span class=\"k\">);</span>","<span class=\"c\">//    this.addTransition </span>","<span class=\"c\">//      (state_id, this._initial_component, StackController.FIRST);</span>","    ","    <span class=\"c\">// create the second view </span>","    state <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>_list_of_state <span class=\"k\">[</span>state_id<span class=\"k\">];</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>state<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      console<span class=\"k\">.</span>error <span class=\"k\">(</span><span class=\"s\">\"Unknown error in vs.fx.StackController.push\"</span><span class=\"k\">);</span>","      <span class=\"k\">return</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_last_comp_id <span class=\"k\">===</span> <span class=\"k\">this</span><span class=\"k\">.</span>_initial_component<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(!</span>state<span class=\"k\">.</span>comp<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        state<span class=\"k\">.</span>comp <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_owner<span class=\"k\">.</span>createAndAddComponent","          <span class=\"k\">(</span>state<span class=\"k\">.</span>comp_name<span class=\"k\">,</span> state<span class=\"k\">.</span>init_data<span class=\"k\">,</span> extension<span class=\"k\">);</span>","          ","        state<span class=\"k\">.</span>comp<span class=\"k\">.</span>configure <span class=\"k\">(</span>state<span class=\"k\">.</span>init_data<span class=\"k\">);</span>","        state<span class=\"k\">.</span>comp<span class=\"k\">.</span>setStyle <span class=\"k\">(</span><span class=\"s\">'position'</span><span class=\"k\">,</span> <span class=\"s\">'absolute'</span><span class=\"k\">);</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>state<span class=\"k\">.</span>comp <span class=\"k\">&amp;&amp;</span> state<span class=\"k\">.</span>comp<span class=\"k\">.</span>propertiesDidChange<span class=\"k\">)</span> ","        <span class=\"k\">{</span> ","          state<span class=\"k\">.</span>comp<span class=\"k\">.</span>propertiesDidChange <span class=\"k\">();</span>","        <span class=\"k\">}</span>","        state<span class=\"k\">.</span>comp<span class=\"k\">.</span>propertyChange <span class=\"k\">();</span>","      <span class=\"k\">}</span>","      ","      state<span class=\"k\">.</span>comp<span class=\"k\">.</span>show <span class=\"k\">();</span>","      state<span class=\"k\">.</span>comp<span class=\"k\">.</span>setStyle <span class=\"k\">(</span><span class=\"s\">'z-index'</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>__nb_panels<span class=\"k\">);</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>configureNewComponent <span class=\"k\">(</span>state<span class=\"k\">.</span>comp<span class=\"k\">);</span>","    <span class=\"k\">}</span>","    <span class=\"k\">else</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>state<span class=\"k\">.</span>comp<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        state<span class=\"k\">.</span>comp<span class=\"k\">.</span>setStyle <span class=\"k\">(</span><span class=\"s\">'z-index'</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>__nb_panels<span class=\"k\">);</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>configureNewComponent <span class=\"k\">(</span>state<span class=\"k\">.</span>comp<span class=\"k\">);</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">this</span><span class=\"k\">.</span>_last_comp_id <span class=\"k\">=</span> state_id<span class=\"k\">;</span>","    <span class=\"k\">return</span> state_id<span class=\"k\">;</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  configureNewComponent <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>comp<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">var</span> transform<span class=\"k\">,</span> size<span class=\"k\">;</span>","    size <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>viewSize<span class=\"k\">;</span>      ","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_orientation <span class=\"k\">===</span> SlideController<span class=\"k\">.</span>HORIZONTAL<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      transform <span class=\"k\">=</span> <span class=\"s\">\"translate3D(\"</span> <span class=\"k\">+</span> size <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">+</span> <span class=\"s\">\"px,0,0)\"</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","    <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_orientation <span class=\"k\">===</span> SlideController<span class=\"k\">.</span>VERTICAL<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      transform <span class=\"k\">=</span> <span class=\"s\">\"translate3D(0,\"</span> <span class=\"k\">+</span> size <span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]</span> <span class=\"k\">+</span> <span class=\"s\">\"px,0)\"</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    comp<span class=\"k\">.</span>view<span class=\"k\">.</span>style<span class=\"k\">.</span>webkitTransitionDuration <span class=\"k\">=</span> <span class=\"s\">'0'</span><span class=\"k\">;</span>","    setElementTransform <span class=\"k\">(</span>comp<span class=\"k\">.</span>view<span class=\"k\">,</span> transform<span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","<span class=\"c\">/*********************************************************</span>","<span class=\"c\"> *                  Event management</span>","<span class=\"c\"> *********************************************************/</span>","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  handleEvent <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>event<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">var</span> t_ok <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">,</span> size <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>size<span class=\"k\">,</span>","      duration <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>__controller__<span class=\"k\">.</span>_animation_duration<span class=\"k\">;</span>","          ","    <span class=\"k\">if</span> <span class=\"k\">(</span>event<span class=\"k\">.</span>type <span class=\"k\">===</span> core<span class=\"k\">.</span>POINTER_START<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__controller__<span class=\"k\">.</span>_orientation <span class=\"k\">===</span> SlideController<span class=\"k\">.</span>HORIZONTAL<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>event<span class=\"k\">.</span>changedTouches<span class=\"k\">)</span>","        <span class=\"k\">{</span>  <span class=\"k\">this</span><span class=\"k\">.</span>__pos <span class=\"k\">=</span> event<span class=\"k\">.</span>changedTouches<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>clientX<span class=\"k\">;</span> <span class=\"k\">}</span>","        <span class=\"k\">else</span>","        <span class=\"k\">{</span>  <span class=\"k\">this</span><span class=\"k\">.</span>__pos <span class=\"k\">=</span> event<span class=\"k\">.</span>clientX<span class=\"k\">;</span> <span class=\"k\">}</span>","      <span class=\"k\">}</span>","      <span class=\"k\">else</span>","      <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>event<span class=\"k\">.</span>changedTouches<span class=\"k\">)</span>","        <span class=\"k\">{</span>  <span class=\"k\">this</span><span class=\"k\">.</span>__pos <span class=\"k\">=</span> event<span class=\"k\">.</span>changedTouches<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>clientY<span class=\"k\">;</span> <span class=\"k\">}</span>","        <span class=\"k\">else</span>","        <span class=\"k\">{</span>  <span class=\"k\">this</span><span class=\"k\">.</span>__pos <span class=\"k\">=</span> event<span class=\"k\">.</span>clientY<span class=\"k\">;</span> <span class=\"k\">}</span>","      <span class=\"k\">}</span>","","      document<span class=\"k\">.</span>addEventListener <span class=\"k\">(</span>core<span class=\"k\">.</span>POINTER_END<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","      document<span class=\"k\">.</span>addEventListener <span class=\"k\">(</span>core<span class=\"k\">.</span>POINTER_MOVE<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","      ","      <span class=\"k\">this</span><span class=\"k\">.</span>animationDuration <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>__delta <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","    <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>event<span class=\"k\">.</span>type <span class=\"k\">===</span> core<span class=\"k\">.</span>POINTER_MOVE<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      event<span class=\"k\">.</span>preventDefault <span class=\"k\">();</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__controller__<span class=\"k\">.</span>_orientation <span class=\"k\">===</span> SlideController<span class=\"k\">.</span>HORIZONTAL<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>event<span class=\"k\">.</span>changedTouches<span class=\"k\">)</span>","        <span class=\"k\">{</span>  <span class=\"k\">this</span><span class=\"k\">.</span>__delta <span class=\"k\">=</span>  event<span class=\"k\">.</span>changedTouches<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>clientX <span class=\"k\">-</span> <span class=\"k\">this</span><span class=\"k\">.</span>__pos<span class=\"k\">;</span> <span class=\"k\">}</span>","        <span class=\"k\">else</span>","        <span class=\"k\">{</span>  <span class=\"k\">this</span><span class=\"k\">.</span>__delta <span class=\"k\">=</span> event<span class=\"k\">.</span>clientX <span class=\"k\">-</span> <span class=\"k\">this</span><span class=\"k\">.</span>__pos<span class=\"k\">;</span> <span class=\"k\">}</span>","      <span class=\"k\">}</span>","      <span class=\"k\">else</span>","      <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>event<span class=\"k\">.</span>changedTouches<span class=\"k\">)</span>","        <span class=\"k\">{</span>  <span class=\"k\">this</span><span class=\"k\">.</span>__delta <span class=\"k\">=</span>  event<span class=\"k\">.</span>changedTouches<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>clientY <span class=\"k\">-</span> <span class=\"k\">this</span><span class=\"k\">.</span>__pos<span class=\"k\">;</span> <span class=\"k\">}</span>","        <span class=\"k\">else</span>","        <span class=\"k\">{</span>  <span class=\"k\">this</span><span class=\"k\">.</span>__delta <span class=\"k\">=</span> event<span class=\"k\">.</span>clientY <span class=\"k\">-</span> <span class=\"k\">this</span><span class=\"k\">.</span>__pos<span class=\"k\">;</span> <span class=\"k\">}</span>","      <span class=\"k\">}</span>  ","    <span class=\"k\">}</span>","    <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>event<span class=\"k\">.</span>type <span class=\"k\">===</span> core<span class=\"k\">.</span>POINTER_END<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__delta <span class=\"k\">&gt;</span> <span class=\"s\">50</span><span class=\"k\">)</span>","      <span class=\"k\">{</span>","        t_ok <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>__controller__<span class=\"k\">.</span>goToPreviousView <span class=\"k\">();</span>","      <span class=\"k\">}</span>","      <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__delta <span class=\"k\">&lt;</span> <span class=\"k\">-</span><span class=\"s\">50</span><span class=\"k\">)</span>","      <span class=\"k\">{</span>","        t_ok <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>__controller__<span class=\"k\">.</span>goToNextView <span class=\"k\">();</span>","      <span class=\"k\">}</span>","      <span class=\"k\">if</span> <span class=\"k\">(!</span>t_ok<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__controller__<span class=\"k\">.</span>_orientation <span class=\"k\">===</span> SlideController<span class=\"k\">.</span>HORIZONTAL<span class=\"k\">)</span>","        <span class=\"k\">{</span>","          duration <span class=\"k\">=</span> Math<span class=\"k\">.</span>floor <span class=\"k\">(</span>duration <span class=\"k\">*</span> <span class=\"k\">this</span><span class=\"k\">.</span>__delta <span class=\"k\">/</span> size <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]);</span>","          <span class=\"k\">this</span><span class=\"k\">.</span>animationDuration <span class=\"k\">=</span> duration<span class=\"k\">;</span>","        <span class=\"k\">}</span>","        <span class=\"k\">else</span>","        <span class=\"k\">{</span>","          duration <span class=\"k\">=</span> Math<span class=\"k\">.</span>floor <span class=\"k\">(</span>duration <span class=\"k\">*</span> <span class=\"k\">this</span><span class=\"k\">.</span>__delta <span class=\"k\">/</span> size <span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]);</span>","          <span class=\"k\">this</span><span class=\"k\">.</span>animationDuration <span class=\"k\">=</span> duration<span class=\"k\">;</span>","        <span class=\"k\">}</span>","<span class=\"c\">//        this.__curent_comp.translate (0, 0);</span>","      <span class=\"k\">}</span>","      document<span class=\"k\">.</span>removeEventListener <span class=\"k\">(</span>core<span class=\"k\">.</span>POINTER_END<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","      document<span class=\"k\">.</span>removeEventListener <span class=\"k\">(</span>core<span class=\"k\">.</span>POINTER_MOVE<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  refresh<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    StackController<span class=\"k\">.</span>prototype<span class=\"k\">.</span>refresh<span class=\"k\">.</span>call <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>_updateViewSize <span class=\"k\">();</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","<span class=\"c\">//   /**</span>","<span class=\"c\">//    * @protected</span>","<span class=\"c\">//    *</span>","<span class=\"c\">//    * @param {number} orientation = {0, 180, -90, 90}</span>","<span class=\"c\">//    */</span>","<span class=\"c\">//   orientationDidChange: function (orientation)</span>","<span class=\"c\">//   { </span>","<span class=\"c\">//     this.refresh ();</span>","<span class=\"c\">//   },</span>","","<span class=\"c\">//   /**</span>","<span class=\"c\">//    *  Private method use by the fsm to cross a transition.</span>","<span class=\"c\">//    *  @note for the moment only one ouput lexem can be generation when</span>","<span class=\"c\">//    *  crossing a transition</span>","<span class=\"c\">//    *  @private</span>","<span class=\"c\">//    *</span>","<span class=\"c\">//    * @param {String} id_sate the id of target state.</span>","<span class=\"c\">//    * @param {String} output</span>","<span class=\"c\">//    * @param {Object} event the event</span>","<span class=\"c\">//    */</span>","<span class=\"c\">//   goTo : function (state_id, output, event)</span>","<span class=\"c\">//   {</span>","<span class=\"c\">//     var state_to, index = this._states_array.indexOf (state_id),</span>","<span class=\"c\">//       size = this.owner.size, callback, self = this,</span>","<span class=\"c\">//       duration = self._animation_duration, __delta = this.owner.__delta;</span>","<span class=\"c\">//     // manage output</span>","<span class=\"c\">//     // TODO WARNING</span>","<span class=\"c\">//     StackController.prototype.goTo.call (self, state_id, output, event);</span>","<span class=\"c\">//     if (!state_id) { return; }</span>","<span class=\"c\">// </span>","<span class=\"c\">//     state_to = self._list_of_state [self._current_state];</span>","<span class=\"c\">//     if (self._orientation === SlideController.HORIZONTAL)</span>","<span class=\"c\">//     {</span>","<span class=\"c\">//       self._delta = index * size [0];</span>","<span class=\"c\">//       self.owner._sub_view.style.width = (index + 1) * size [0] + 'px';</span>","<span class=\"c\">//       self.owner._sub_view.style.height = size [1] + 'px';</span>","<span class=\"c\">//     }</span>","<span class=\"c\">//     else</span>","<span class=\"c\">//     {</span>","<span class=\"c\">//       self._delta = index * size [1];</span>","<span class=\"c\">//       self.owner._sub_view.style.width = size [0] + 'px';</span>","<span class=\"c\">//       self.owner._sub_view.style.height = (index + 1) * size [1] + 'px';</span>","<span class=\"c\">//     }</span>","<span class=\"c\">//         </span>","<span class=\"c\">//     function initState (index)</span>","<span class=\"c\">//     {</span>","<span class=\"c\">//       var state_id = self._states_array [index],</span>","<span class=\"c\">//           state = self._list_of_state [state_id];</span>","<span class=\"c\">//       </span>","<span class=\"c\">//       if (!state) { return; }</span>","<span class=\"c\">// </span>","<span class=\"c\">//       if (!state.comp)</span>","<span class=\"c\">//       {</span>","<span class=\"c\">//         state.comp = self.owner.createAndAddComponent</span>","<span class=\"c\">//           (state.comp_name, state.init_data, state.extension);</span>","<span class=\"c\">//           </span>","<span class=\"c\">//         state.comp.configure (state.init_data);</span>","<span class=\"c\">//         if (state.comp &amp;&amp; state.comp.propertiesDidChange) </span>","<span class=\"c\">//         { </span>","<span class=\"c\">//           state.comp.propertiesDidChange ();</span>","<span class=\"c\">//         }</span>","<span class=\"c\">//         state.comp.propertyChange ();</span>","<span class=\"c\">//       }</span>","<span class=\"c\">//       state.comp.show ();  </span>","<span class=\"c\">//     }</span>","<span class=\"c\">//     </span>","<span class=\"c\">//     /// left/top component </span>","<span class=\"c\">//     if (index &gt; 0) { initState.call (self, index - 1); }</span>","<span class=\"c\">// </span>","<span class=\"c\">//     /// right/bottom component </span>","<span class=\"c\">//     if (index &lt; self._states_array.length - 1)</span>","<span class=\"c\">//     { initState.call (self, index + 1); }</span>","<span class=\"c\">//      </span>","<span class=\"c\">//     callback = function () </span>","<span class=\"c\">//     {</span>","<span class=\"c\">//       if (self._delegate &amp;&amp; self._delegate.animationDidEnd)</span>","<span class=\"c\">//       { self._delegate.animationDidEnd (self); }</span>","<span class=\"c\">//     }</span>","<span class=\"c\">// </span>","<span class=\"c\">//     if (!util.isNumber (__delta)) { __delta = 0; }</span>","<span class=\"c\">//     else { __delta = Math.abs (__delta); }</span>","<span class=\"c\">//     if (self._orientation === SlideController.HORIZONTAL)</span>","<span class=\"c\">//     {</span>","<span class=\"c\">//       duration = Math.floor (duration * (size[0] - __delta) / size [0]);</span>","<span class=\"c\">//       self.owner.animationDuration = duration;</span>","<span class=\"c\">//       self.owner.insideTranslate (-self._delta, 0, callback);</span>","<span class=\"c\">//     }</span>","<span class=\"c\">//     else</span>","<span class=\"c\">//     {</span>","<span class=\"c\">//       duration = Math.floor (duration * (size[1] - __delta) / size [1]);</span>","<span class=\"c\">//       self.owner.animationDuration = duration;</span>","<span class=\"c\">//       self.owner.insideTranslate (0, -self._delta, callback);</span>","<span class=\"c\">//     }</span>","<span class=\"c\">// </span>","<span class=\"c\">//     if (output &amp;&amp; self._output_action [output])</span>","<span class=\"c\">//     {</span>","<span class=\"c\">//       var clb = self._output_action [output];</span>","<span class=\"c\">//       if (clb instanceof Function)</span>","<span class=\"c\">//       {</span>","<span class=\"c\">//         clb.call (self.owner, event);</span>","<span class=\"c\">//       }</span>","<span class=\"c\">//       else if (util.isString (clb))</span>","<span class=\"c\">//       {</span>","<span class=\"c\">//         self.owner [self._output_action [output]] (event);</span>","<span class=\"c\">//       }</span>","<span class=\"c\">//     }</span>","<span class=\"c\">//   }</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","util<span class=\"k\">.</span>extendClass <span class=\"k\">(</span>SlideController<span class=\"k\">,</span> StackController<span class=\"k\">);</span>","","<span class=\"c\">/********************************************************************</span>","<span class=\"c\">                  Define class properties</span>","<span class=\"c\">********************************************************************/</span>","","util<span class=\"k\">.</span>defineClassProperties <span class=\"k\">(</span>SlideController<span class=\"k\">,</span> <span class=\"k\">{</span>","  <span class=\"s\">'orientation'</span><span class=\"k\">:</span> <span class=\"k\">{</span>","    <span class=\"c\">/** </span>","<span class=\"c\">     * Getter|Setter for page slide orientation. It can take the value</span>","<span class=\"c\">     * vs.fx.SlideController.HORIZONTAL or vs.fx.SlideController.VERTICAL.</span>","<span class=\"c\">     * By default the slider is horizontal.</span>","<span class=\"c\">     * @name vs.fx.SlideController#orientation </span>","<span class=\"c\">     * @type String</span>","<span class=\"c\">     */</span> ","    set <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>v<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">var</span> state<span class=\"k\">,</span> state_id<span class=\"k\">,</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> pos <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","      ","      <span class=\"k\">if</span> <span class=\"k\">(</span>v <span class=\"k\">!==</span> SlideController<span class=\"k\">.</span>HORIZONTAL <span class=\"k\">&amp;&amp;</span>","          v <span class=\"k\">!==</span> SlideController<span class=\"k\">.</span>VERTICAL<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      ","      <span class=\"k\">this</span><span class=\"k\">.</span>_orientation <span class=\"k\">=</span> v<span class=\"k\">;</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_updateViewSize <span class=\"k\">();</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","  ","    <span class=\"c\">/** </span>","<span class=\"c\">     * @ignore</span>","<span class=\"c\">     * @return {String}</span>","<span class=\"c\">     */</span> ","    get <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","    <span class=\"k\">{</span>","      <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_orientation<span class=\"k\">;</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  <span class=\"s\">'animationDuration'</span><span class=\"k\">:</span> <span class=\"k\">{</span>","    <span class=\"c\">/** </span>","<span class=\"c\">     * Set the animation/transition temporisation (in millisecond)</span>","<span class=\"c\">     * @name vs.fx.SlideController#animationDuration </span>","<span class=\"c\">     * @type {number}</span>","<span class=\"c\">     */</span> ","    set <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>v<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(!</span>v<span class=\"k\">)</span> <span class=\"k\">{</span> v <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      <span class=\"k\">if</span> <span class=\"k\">(!</span>util<span class=\"k\">.</span>isNumber <span class=\"k\">(</span>v<span class=\"k\">))</span> <span class=\"k\">{</span> <span class=\"k\">return</span> <span class=\"k\">}</span><span class=\"k\">;</span>","      ","      <span class=\"k\">this</span><span class=\"k\">.</span>_animation_duration <span class=\"k\">=</span> v<span class=\"k\">;</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_transition_out_1<span class=\"k\">.</span>duration <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_animation_duration <span class=\"k\">+</span> <span class=\"s\">'ms'</span><span class=\"k\">;</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_transition_out_2<span class=\"k\">.</span>duration <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_animation_duration <span class=\"k\">+</span> <span class=\"s\">'ms'</span><span class=\"k\">;</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_transition_clear<span class=\"k\">.</span>duration <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_animation_duration <span class=\"k\">+</span> <span class=\"s\">'ms'</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">);</span>","<span class=\"c\">/********************************************************************</span>","<span class=\"c\">                      Export</span>","<span class=\"c\">*********************************************************************/</span>","<span class=\"c\">/** @private */</span>","fx<span class=\"k\">.</span>SlideController <span class=\"k\">=</span> SlideController<span class=\"k\">;</span>","<span class=\"c\">/**</span>","<span class=\"c\">  Copyright (C) 2009-2012. David Thevenin, ViniSketch SARL (c), and </span>","<span class=\"c\">  contributors. All rights reserved</span>","<span class=\"c\">  </span>","<span class=\"c\">  This program is free software: you can redistribute it and/or modify</span>","<span class=\"c\">  it under the terms of the GNU Lesser General Public License as published</span>","<span class=\"c\">  by the Free Software Foundation, either version 3 of the License, or</span>","<span class=\"c\">  (at your option) any later version.</span>","<span class=\"c\">  </span>","<span class=\"c\">  This program is distributed in the hope that it will be useful,</span>","<span class=\"c\">  but WITHOUT ANY WARRANTY; without even the implied warranty of</span>","<span class=\"c\">  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the</span>","<span class=\"c\">  GNU Lesser General Public License for more details.</span>","<span class=\"c\">  </span>","<span class=\"c\">  You should have received a copy of the GNU Lesser General Public License</span>","<span class=\"c\">  along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.</span>","<span class=\"c\">*/</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> *  The vs.fx.NavigationController class implements a controller for navigating</span>","<span class=\"c\"> *  on hierarchical contents.</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  @extends vs.fx.Controller</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  @class</span>","<span class=\"c\"> *  The vs.fx.NavigationController class implements a controller for navigating</span>","<span class=\"c\"> *  on hierarchical contents.</span>","<span class=\"c\"> *  &lt;p/&gt;</span>","<span class=\"c\"> *  The controller shows a first view (the initialComponent) and allows to</span>","<span class=\"c\"> *  navigate from this first view to a second view and a third ... and back</span>","<span class=\"c\"> *  to the previous one til the first view.</span>","<span class=\"c\"> *  &lt;p/&gt;</span>","<span class=\"c\"> *  The next picture shows a example of hierarchical contents navigation.</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  &lt;pre&gt;                 </span>","<span class=\"c\"> *                </span>","<span class=\"c\"> *   &#226;&#142;&#161;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#226;&#142;&#164;    &#226;&#142;&#161;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#226;&#142;&#164;   &#226;&#142;&#161;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#226;&#142;&#164;</span>","<span class=\"c\"> *   &#226;&#142;&#159;      &#226;&#142;&#162;__&gt; &#226;&#142;&#162;      &#226;&#142;&#162;__&gt;&#226;&#142;&#159;      &#226;&#142;&#162; </span>","<span class=\"c\"> *   &#226;&#142;&#159;  (1) &#226;&#142;&#162;    &#226;&#142;&#162;  (2) &#226;&#142;&#162;   &#226;&#142;&#159;  (3) &#226;&#142;&#162;</span>","<span class=\"c\"> *   &#226;&#142;&#159;      &#226;&#142;&#162;&lt;__ &#226;&#142;&#162;      &#226;&#142;&#162;&lt;__&#226;&#142;&#159;      &#226;&#142;&#162;</span>","<span class=\"c\"> *   &#226;&#142;&#163;______&#226;&#142;&#166;    &#226;&#142;&#163;______&#226;&#142;&#166;   &#226;&#142;&#163;______&#226;&#142;&#166;</span>","<span class=\"c\"> *        | |   </span>","<span class=\"c\"> *        | |    &#226;&#142;&#161;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#226;&#142;&#164;   &#226;&#142;&#161;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#226;&#142;&#164;</span>","<span class=\"c\"> *        | &#226;&#142;&#163;__&gt;&#226;&#142;&#162;      &#226;&#142;&#162;--&gt;&#226;&#142;&#159;      &#226;&#142;&#162;</span>","<span class=\"c\"> *        | |    &#226;&#142;&#162;  (4) &#226;&#142;&#162;   &#226;&#142;&#159;  (5) &#226;&#142;&#162; </span>","<span class=\"c\"> *        | |&lt;___&#226;&#142;&#162;      &#226;&#142;&#162;&lt;__&#226;&#142;&#159;      &#226;&#142;&#162;</span>","<span class=\"c\"> *        |      &#226;&#142;&#163;______&#226;&#142;&#166;   &#226;&#142;&#163;______</span>","<span class=\"c\"> *        |            |   </span>","<span class=\"c\"> *        |            |    &#226;&#142;&#161;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#226;&#142;&#164;</span>","<span class=\"c\"> *        |            &#226;&#142;&#163;__&gt;&#226;&#142;&#162;      &#226;&#142;&#162;</span>","<span class=\"c\"> *        |            |    &#226;&#142;&#162;  (6) &#226;&#142;&#162;</span>","<span class=\"c\"> *        |            |&lt;___&#226;&#142;&#162;      &#226;&#142;&#162;</span>","<span class=\"c\"> *        |                 &#226;&#142;&#163;______&#226;&#142;&#166;</span>","<span class=\"c\"> *        |   </span>","<span class=\"c\"> *        |    &#226;&#142;&#161;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#226;&#142;&#164;</span>","<span class=\"c\"> *        &#226;&#142;&#163;__&gt;&#226;&#142;&#162;      &#226;&#142;&#162;</span>","<span class=\"c\"> *        |    &#226;&#142;&#162;  (7) &#226;&#142;&#162;</span>","<span class=\"c\"> *        |&lt;___&#226;&#142;&#162;      &#226;&#142;&#162;</span>","<span class=\"c\"> *             &#226;&#142;&#163;______&#226;&#142;&#166;</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * </span>","<span class=\"c\"> *  (1, ... ,7) : component's views managed by the SliderLayer</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  &lt;/pre&gt;</span>","<span class=\"c\"> *  The controller can manage a navigation bar during the user navigates.</span>","<span class=\"c\"> *  For instance it can hides or shows components (button, label, ...) and/or</span>","<span class=\"c\"> *  reconfigurate them. (for instance change the text value of a label.</span>","<span class=\"c\"> *  &lt;p/&gt;</span>","<span class=\"c\"> *  Example:</span>","<span class=\"c\"> *  &lt;pre class='code'&gt;</span>","<span class=\"c\"> *  this.controller = new vs.fx.NavigationController (this, this.navBar);</span>","<span class=\"c\"> *  this.controller.init ();</span>","<span class=\"c\"> *  </span>","<span class=\"c\"> *  // 1.1 put the first view into the controller</span>","<span class=\"c\"> *  this.controller.push (this.firstView);</span>","<span class=\"c\"> *  // 1.2 configure the navigation bar for the first view (nothing)</span>","<span class=\"c\"> *  this.controller.configureNavigationBarState (this.firstView.id, []);</span>","<span class=\"c\"> *  // 1.3 finally configure the first view as the initial component</span>","<span class=\"c\"> *  this.controller.initialComponent = this.firstView.id;</span>","<span class=\"c\"> *  </span>","<span class=\"c\"> *  var backId = this.navBar.backButton.id;</span>","<span class=\"c\"> *  var titleId = this.navBar.title.id;</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  // 2.1 set the second view, with parameters</span>","<span class=\"c\"> *  var id = this.controller.push ('PanelOne', {position: [0, 44]});</span>","<span class=\"c\"> *  // 2.2 configure the navigation bar to show the back button, the title</span>","<span class=\"c\"> *  //  and set the text title</span>","<span class=\"c\"> *  this.controller.configureNavigationBarState</span>","<span class=\"c\"> *    (id, [{comp: backId}, </span>","<span class=\"c\"> *          {comp: titleId, properties: {text: 'Panel One'}}]);    </span>","<span class=\"c\"> *  // 2.3 configure the transition between the first and second view</span>","<span class=\"c\"> *  this.controller.configureTransition (this.firstView.id, id, 'goToOne');</span>","<span class=\"c\"> *  </span>","<span class=\"c\"> *  // 3 set the third view</span>","<span class=\"c\"> *  id = this.controller.push ('PanelTwo', {position: [0, 44]});</span>","<span class=\"c\"> *  this.controller.configureNavigationBarState</span>","<span class=\"c\"> *    (id, [{comp: backId}, </span>","<span class=\"c\"> *          {comp: titleId, properties: {text: 'Panel Two'}}]);    </span>","<span class=\"c\"> *  this.controller.configureTransition (this.firstView.id, id, 'goToTwo');</span>","<span class=\"c\"> *  </span>","<span class=\"c\"> *  // 3 set the last view</span>","<span class=\"c\"> *  id = this.controller.push ('PanelThree', {position: [0, 44]});</span>","<span class=\"c\"> *  this.controller.configureNavigationBarState</span>","<span class=\"c\"> *    (id, [{comp: backId}, </span>","<span class=\"c\"> *          {comp: titleId, properties: {text: 'Panel Three'}}]);    </span>","<span class=\"c\"> *  this.controller.configureTransition (this.firstView.id, id, 'goToThree');</span>","<span class=\"c\"> * </span>","<span class=\"c\"> *  &lt;/pre&gt;</span>","<span class=\"c\"> * </span>","<span class=\"c\"> *  @author David Thevenin</span>","<span class=\"c\"> * @name vs.fx.NavigationController</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  @constructor</span>","<span class=\"c\"> *   Creates a new vs.fx.NavigationController.</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @param {vs.ui.View} owner the View using this Layer [mandatory]</span>","<span class=\"c\"> * @param {String} extension The hole into the vs.ui.View will be inserted. </span>","<span class=\"c\"> *     ['children' by default]</span>","<span class=\"c\"> * @param {number} animationType Select the animation use during transition. </span>","<span class=\"c\"> *     [optional]</span>","<span class=\"c\"> */</span>","<span class=\"k\">function</span> NavigationController <span class=\"k\">(</span>owner<span class=\"k\">,</span> navBar<span class=\"k\">,</span> type<span class=\"k\">)</span>","<span class=\"k\">{</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>parent <span class=\"k\">=</span> Controller<span class=\"k\">;</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>parent <span class=\"k\">(</span>owner<span class=\"k\">);</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>constructor <span class=\"k\">=</span> NavigationController<span class=\"k\">;</span>","  ","  <span class=\"k\">if</span> <span class=\"k\">(!</span>arguments<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">return</span><span class=\"k\">;</span>","  ","  <span class=\"k\">if</span> <span class=\"k\">(</span>type <span class=\"k\">==</span> NavigationController<span class=\"k\">.</span>NO_ANIMATION <span class=\"k\">||</span>","      type <span class=\"k\">==</span> NavigationController<span class=\"k\">.</span>CARD_ANIMATION <span class=\"k\">||</span>","      type <span class=\"k\">==</span> NavigationController<span class=\"k\">.</span>SLIDE_ANIMATION<span class=\"k\">)</span>","  <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>_animation_type <span class=\"k\">=</span> type<span class=\"k\">;</span> <span class=\"k\">}</span>","  ","  <span class=\"k\">else</span>","  <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>_animation_type <span class=\"k\">=</span> NavigationController<span class=\"k\">.</span>DEFAULT_ANIMATION<span class=\"k\">;</span> <span class=\"k\">}</span>","     ","  <span class=\"k\">this</span><span class=\"k\">.</span>setNavigationBar <span class=\"k\">(</span>navBar<span class=\"k\">);</span>","  ","  <span class=\"k\">this</span><span class=\"k\">.</span>__nav_bar_states <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","<span class=\"k\">}</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> *  There is no animation during transition between two views.</span>","<span class=\"c\"> *  &lt;br /&gt;</span>","<span class=\"c\"> *  If the platform you are targeting does not support animations or</span>","<span class=\"c\"> *  does not support accelerated animations, you should use this</span>","<span class=\"c\"> *  configuration.</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @name vs.fx.NavigationController.NO_ANIMATION</span>","<span class=\"c\"> */</span>","NavigationController<span class=\"k\">.</span>NO_ANIMATION <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * There is card animation during transition between two views.</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @name vs.fx.NavigationController.CARD_ANIMATION</span>","<span class=\"c\"> */</span>","NavigationController<span class=\"k\">.</span>CARD_ANIMATION <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * There is slide animation during transition between two views.</span>","<span class=\"c\"> *  &lt;br /&gt;</span>","<span class=\"c\"> *  This is the default configuration</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @name vs.fx.NavigationController.SLIDE_ANIMATION</span>","<span class=\"c\"> */</span>","NavigationController<span class=\"k\">.</span>SLIDE_ANIMATION <span class=\"k\">=</span> <span class=\"s\">2</span><span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * Select the default animation configuration (Slide animations)</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @name vs.fx.NavigationController.DEFAULT_ANIMATION</span>","<span class=\"c\"> */</span>","NavigationController<span class=\"k\">.</span>DEFAULT_ANIMATION <span class=\"k\">=</span> ","  NavigationController<span class=\"k\">.</span>SLIDE_ANIMATION<span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * @private</span>","<span class=\"c\"> */</span>","NavigationController<span class=\"k\">.</span>BACK <span class=\"k\">=</span> <span class=\"s\">'back'</span><span class=\"k\">;</span>","","NavigationController<span class=\"k\">.</span>prototype <span class=\"k\">=</span> <span class=\"k\">{</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  _nav_bar <span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  __nav_bar_states <span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  _animation_type <span class=\"k\">:</span> NavigationController<span class=\"k\">.</span>DEFAULT_ANIMATION<span class=\"k\">,</span>",""," <span class=\"c\">/**********************************************************************</span>","","<span class=\"c\">  *********************************************************************/</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  destructor<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    Controller<span class=\"k\">.</span>prototype<span class=\"k\">.</span>destructor<span class=\"k\">.</span>call <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  initComponent <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    Controller<span class=\"k\">.</span>prototype<span class=\"k\">.</span>initComponent<span class=\"k\">.</span>call <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","   ","    <span class=\"k\">var</span> size <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_owner<span class=\"k\">.</span>size<span class=\"k\">;</span>","    ","    <span class=\"k\">this</span><span class=\"k\">.</span>__translate_in_right <span class=\"k\">=</span> <span class=\"k\">new</span> TranslateAnimation <span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>__translate_out_right <span class=\"k\">=</span> <span class=\"k\">new</span> TranslateAnimation <span class=\"k\">(</span>size <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>__translate_out_left <span class=\"k\">=</span> <span class=\"k\">new</span> TranslateAnimation <span class=\"k\">(-</span>size <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>__translate_in_left <span class=\"k\">=</span> <span class=\"k\">new</span> TranslateAnimation <span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   *  Defines the Navigation Bar</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.fx.NavigationController#setNavigationBar</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @param {vs.ui.NavigationBar} navBar the ab bar</span>","<span class=\"c\">   */</span>","  setNavigationBar <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>navBar<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>navBar <span class=\"k\">||</span> <span class=\"k\">!</span>navBar <span class=\"k\">instanceof</span> ui<span class=\"k\">.</span>NavigationBar<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    ","    <span class=\"k\">this</span><span class=\"k\">.</span>_nav_bar <span class=\"k\">=</span> navBar<span class=\"k\">;</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  refresh<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    Controller<span class=\"k\">.</span>prototype<span class=\"k\">.</span>refresh<span class=\"k\">.</span>call <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>_updateViewSize <span class=\"k\">();</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  _updateViewSize <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    <span class=\"k\">var</span> size <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>viewSize<span class=\"k\">,</span> i<span class=\"k\">,</span> state_id<span class=\"k\">,</span> state<span class=\"k\">,</span> transform<span class=\"k\">;</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>__translate_out_left<span class=\"k\">.</span>x <span class=\"k\">=</span> <span class=\"k\">-</span>size <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>__translate_out_right<span class=\"k\">.</span>x <span class=\"k\">=</span> size <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   *  Add the a child component to the Navigation Controller</span>","<span class=\"c\">   *  &lt;p&gt;</span>","<span class=\"c\">   *  The component must be a graphic component (vs.ui.View).</span>","<span class=\"c\">   *  It will be instantiated, init and added automaticaly</span>","<span class=\"c\">   *  &lt;p&gt;</span>","<span class=\"c\">   *  The component instantiation is a lazy algorithm. The component will</span>","<span class=\"c\">   *  be instantiated and add into the DOM tree only when it has to be show</span>","<span class=\"c\">   *  to the user.</span>","<span class=\"c\">   *  &lt;p&gt;</span>","<span class=\"c\">   *  @example</span>","<span class=\"c\">   *  var myComp = new MyComp (conf);</span>","<span class=\"c\">   *  myComp.controller = new vs.fx.NavigationController (myComp);</span>","<span class=\"c\">   *</span>","<span class=\"c\">   *  // push a component name (the component will be instanciated when needs)</span>","<span class=\"c\">   *  myComp.controller.push ('AComponent1', {id: 'comp1'});</span>","<span class=\"c\">   *</span>","<span class=\"c\">   *  // instanciate a component and push it </span>","<span class=\"c\">   *  var comp2 = myComp.createAndAddComponent ('AComponent1', {id: 'comp2'});</span>","<span class=\"c\">   *  myComp.controller.push (comp2);</span>","<span class=\"c\">   *</span>","<span class=\"c\">   *  // create a button object and push it</span>","<span class=\"c\">   *  var comp3 = new vs.ui.Button ({id: 'comp3', text: 'hello'});</span>","<span class=\"c\">   *  myComp.controller.push (comp3);</span>","<span class=\"c\">   *  myComp.controller.initComponent = comp2.id;</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.fx.NavigationController#push</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @param {String | vs.ui.View} comp The GUI component name to instanciate or </span>","<span class=\"c\">   *    the instance of the component  </span>","<span class=\"c\">   * @param {Object} config Configuration structure need to build the </span>","<span class=\"c\">   *     component [optional]</span>","<span class=\"c\">   * @param {Array} bindings Bindings configuration [[spec, observer, method], ...]</span>","<span class=\"c\">   */</span>","  push <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>comp<span class=\"k\">,</span> data<span class=\"k\">,</span> bindings<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>comp<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>data<span class=\"k\">)</span> <span class=\"k\">{</span> data <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    ","    <span class=\"k\">var</span> size<span class=\"k\">,</span> state_id <span class=\"k\">=</span>","      Controller<span class=\"k\">.</span>prototype<span class=\"k\">.</span>push<span class=\"k\">.</span>call <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> comp<span class=\"k\">,</span> data<span class=\"k\">,</span> <span class=\"k\">null</span><span class=\"k\">,</span> bindings<span class=\"k\">);</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>state_id<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","","    <span class=\"k\">var</span> state <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>_list_of_state <span class=\"k\">[</span>state_id<span class=\"k\">];</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>state <span class=\"k\">&amp;&amp;</span> state<span class=\"k\">.</span>comp<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>configureNewComponent <span class=\"k\">(</span>state<span class=\"k\">.</span>comp<span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">return</span> state_id<span class=\"k\">;</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @param {String} state The state (component id)  </span>","<span class=\"c\">   * @param {Array} configurations configuration parameters </span>","<span class=\"c\">   *     Structure have to follow : [{comp: vs.core.Object|String, properties:{prop_name: value}}</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.fx.NavigationController#configureNavigationBarState</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  configureNavigationBarState <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>state_id<span class=\"k\">,</span> configurations<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">var</span> state <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>_list_of_state <span class=\"k\">[</span>state_id<span class=\"k\">],</span> comp<span class=\"k\">,</span> i<span class=\"k\">,</span> l<span class=\"k\">,</span> conf<span class=\"k\">,</span>","      components <span class=\"k\">=</span> <span class=\"k\">[],</span> state_conf <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>state <span class=\"k\">||</span> <span class=\"k\">!</span>configurations<span class=\"k\">)</span>","    <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    ","    <span class=\"k\">for</span> <span class=\"k\">(</span>i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> l <span class=\"k\">=</span> configurations<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> l<span class=\"k\">;</span> i<span class=\"k\">++)</span>","    <span class=\"k\">{</span>","      conf <span class=\"k\">=</span> configurations <span class=\"k\">[</span>i<span class=\"k\">];</span>","      <span class=\"k\">if</span> <span class=\"k\">(!</span>conf<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">continue</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      ","      comp <span class=\"k\">=</span> conf<span class=\"k\">.</span>comp<span class=\"k\">;</span>","      <span class=\"k\">if</span> <span class=\"k\">(!</span>comp<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">continue</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      ","      <span class=\"c\">// component is specified by an id</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>util<span class=\"k\">.</span>isString <span class=\"k\">(</span>comp<span class=\"k\">))</span>","      <span class=\"k\">{</span> comp <span class=\"k\">=</span> core<span class=\"k\">.</span>Object<span class=\"k\">.</span>_obs <span class=\"k\">[</span>comp<span class=\"k\">];</span> <span class=\"k\">}</span>","      ","      <span class=\"k\">if</span> <span class=\"k\">(!</span>comp <span class=\"k\">instanceof</span> vs<span class=\"k\">.</span>ui<span class=\"k\">.</span>View<span class=\"k\">)</span>","      <span class=\"k\">{</span> <span class=\"k\">continue</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      ","      components<span class=\"k\">.</span>push <span class=\"k\">(</span>comp<span class=\"k\">);</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>conf<span class=\"k\">.</span>properties<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        state_conf <span class=\"k\">[</span>comp<span class=\"k\">.</span>id<span class=\"k\">]</span> <span class=\"k\">=</span> conf<span class=\"k\">.</span>properties<span class=\"k\">;</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">this</span><span class=\"k\">.</span>__nav_bar_states <span class=\"k\">[</span>state_id<span class=\"k\">]</span> <span class=\"k\">=</span> state_conf<span class=\"k\">;</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_nav_bar<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_nav_bar<span class=\"k\">.</span>setStateItems <span class=\"k\">(</span>state_id<span class=\"k\">,</span> components<span class=\"k\">);</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   *   Add a new transition from the state \"from\" to the state \"to\".</span>","<span class=\"c\">   *   The states have to be already specified.</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.fx.NavigationController#configureTransition</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @param {string} from State from</span>","<span class=\"c\">   * @param {string} to State to</span>","<span class=\"c\">   * @param {string} on input lexem which cause the crossing of transition</span>","<span class=\"c\">   * @param {string} output optional ouput lexem that will be produce by the </span>","<span class=\"c\">   *                  transition</span>","<span class=\"c\">   * @param {string} anim optional animation name</span>","<span class=\"c\">   */</span>","  configureTransition <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>from<span class=\"k\">,</span> to<span class=\"k\">,</span> on<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>from <span class=\"k\">||</span> <span class=\"k\">!</span><span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>existState <span class=\"k\">(</span>from<span class=\"k\">))</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>to <span class=\"k\">||</span> <span class=\"k\">!</span><span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>existState <span class=\"k\">(</span>to<span class=\"k\">))</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>on<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    ","    <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>existInput <span class=\"k\">(</span>on<span class=\"k\">))</span> <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>addInput <span class=\"k\">(</span>on<span class=\"k\">);</span> <span class=\"k\">}</span>","    ","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_animation_type <span class=\"k\">===</span> NavigationController<span class=\"k\">.</span>SLIDE_ANIMATION<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>addTransition <span class=\"k\">(</span>from<span class=\"k\">,</span> to<span class=\"k\">,</span> on<span class=\"k\">,</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>__translate_out_left<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>__translate_in_right<span class=\"k\">);</span>","        ","      <span class=\"k\">this</span><span class=\"k\">.</span>addTransition <span class=\"k\">(</span>to<span class=\"k\">,</span> from<span class=\"k\">,</span> NavigationController<span class=\"k\">.</span>BACK<span class=\"k\">,</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>__translate_out_right<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>__translate_in_left<span class=\"k\">);</span>","","      <span class=\"k\">this</span><span class=\"k\">.</span>__translate_in_left<span class=\"k\">.</span>duration <span class=\"k\">=</span> <span class=\"s\">\"300ms\"</span> ","      <span class=\"k\">this</span><span class=\"k\">.</span>__translate_out_left<span class=\"k\">.</span>duration <span class=\"k\">=</span> <span class=\"s\">\"300ms\"</span> ","      <span class=\"k\">this</span><span class=\"k\">.</span>__translate_in_right<span class=\"k\">.</span>duration <span class=\"k\">=</span> <span class=\"s\">\"300ms\"</span> ","      <span class=\"k\">this</span><span class=\"k\">.</span>__translate_out_right<span class=\"k\">.</span>duration <span class=\"k\">=</span> <span class=\"s\">\"300ms\"</span> ","    <span class=\"k\">}</span>","    <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_animation_type <span class=\"k\">===</span> NavigationController<span class=\"k\">.</span>CARD_ANIMATION<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>addTransition <span class=\"k\">(</span>from<span class=\"k\">,</span> to<span class=\"k\">,</span> on<span class=\"k\">,</span>","        <span class=\"k\">null</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>__translate_in_right<span class=\"k\">);</span>","                ","      <span class=\"k\">this</span><span class=\"k\">.</span>addTransition <span class=\"k\">(</span>to<span class=\"k\">,</span> from<span class=\"k\">,</span> NavigationController<span class=\"k\">.</span>BACK<span class=\"k\">,</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>__translate_out_right<span class=\"k\">,</span> <span class=\"k\">null</span><span class=\"k\">);</span>","","      <span class=\"k\">this</span><span class=\"k\">.</span>__translate_in_right<span class=\"k\">.</span>duration <span class=\"k\">=</span> <span class=\"s\">\"300ms\"</span> ","      <span class=\"k\">this</span><span class=\"k\">.</span>__translate_out_right<span class=\"k\">.</span>duration <span class=\"k\">=</span> <span class=\"s\">\"300ms\"</span> ","    <span class=\"k\">}</span>","    <span class=\"k\">else</span> <span class=\"c\">// no animation</span>","    <span class=\"k\">{</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>addTransition <span class=\"k\">(</span>from<span class=\"k\">,</span> to<span class=\"k\">,</span> on<span class=\"k\">,</span>","        <span class=\"k\">null</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>__translate_in_right<span class=\"k\">);</span>","                ","      <span class=\"k\">this</span><span class=\"k\">.</span>addTransition <span class=\"k\">(</span>to<span class=\"k\">,</span> from<span class=\"k\">,</span> NavigationController<span class=\"k\">.</span>BACK<span class=\"k\">,</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>__translate_out_right<span class=\"k\">,</span> <span class=\"k\">null</span><span class=\"k\">);</span>","","      <span class=\"k\">this</span><span class=\"k\">.</span>__translate_in_right<span class=\"k\">.</span>duration <span class=\"k\">=</span> <span class=\"s\">\"0\"</span> ","      <span class=\"k\">this</span><span class=\"k\">.</span>__translate_out_right<span class=\"k\">.</span>duration <span class=\"k\">=</span> <span class=\"s\">\"0\"</span> ","    <span class=\"k\">}</span>"," <span class=\"k\">}</span><span class=\"k\">,</span>","  ","","<span class=\"c\">/*********************************************************</span>","<span class=\"c\"> *                 FSM management</span>","<span class=\"c\"> *********************************************************/</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  configureNewComponent <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>comp<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">var</span> size <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>viewSize<span class=\"k\">;</span>","    ","    comp<span class=\"k\">.</span>translation <span class=\"k\">=</span> <span class=\"k\">[</span>size<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">],</span> <span class=\"s\">0</span><span class=\"k\">];</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   *  Private method use by the fsm to cross a transition.</span>","<span class=\"c\">   *  @note for the moment only one ouput lexem can be generation when</span>","<span class=\"c\">   *  crossing a transition</span>","<span class=\"c\">   *  @private</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.fx.NavigationController#goTo</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @param {String} id_sate the id of target state.</span>","<span class=\"c\">   * @param {String} output</span>","<span class=\"c\">   * @param {Object} event the event</span>","<span class=\"c\">   */</span>","  goTo <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>state_id<span class=\"k\">,</span> output<span class=\"k\">,</span> event<span class=\"k\">,</span> instant<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">var</span> ok <span class=\"k\">=</span> ","      Controller<span class=\"k\">.</span>prototype<span class=\"k\">.</span>goTo<span class=\"k\">.</span>call <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> state_id<span class=\"k\">,</span> output<span class=\"k\">,</span> event<span class=\"k\">,</span> instant<span class=\"k\">);</span>"," ","    <span class=\"k\">if</span> <span class=\"k\">(</span>ok <span class=\"k\">&amp;&amp;</span> <span class=\"k\">this</span><span class=\"k\">.</span>owner<span class=\"k\">.</span>_nav_bar<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>owner<span class=\"k\">.</span>_nav_bar<span class=\"k\">.</span>changeState","        <span class=\"k\">(</span>state_id<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>owner<span class=\"k\">.</span>__nav_bar_states <span class=\"k\">[</span>state_id<span class=\"k\">]);</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","util<span class=\"k\">.</span>extendClass <span class=\"k\">(</span>NavigationController<span class=\"k\">,</span> StackController<span class=\"k\">);</span>","","<span class=\"c\">/********************************************************************</span>","<span class=\"c\">                  Define class properties</span>","<span class=\"c\">********************************************************************/</span>","","util<span class=\"k\">.</span>defineClassProperties <span class=\"k\">(</span>NavigationController<span class=\"k\">,</span> <span class=\"k\">{</span>","  <span class=\"s\">'viewSize'</span><span class=\"k\">:</span> <span class=\"k\">{</span>","   <span class=\"c\">/** </span>","<span class=\"c\">     * Getter|Setter for view size.</span>","<span class=\"c\">     * @name vs.fx.NavigationController#viewSize </span>","<span class=\"c\">     *</span>","<span class=\"c\">     * @type {Array.&lt;number&gt;}</span>","<span class=\"c\">     */</span> ","    set <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>v<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(!</span>v<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span> ","      <span class=\"k\">if</span> <span class=\"k\">(!</span>util<span class=\"k\">.</span>isArray <span class=\"k\">(</span>v<span class=\"k\">)</span> <span class=\"k\">||</span> v<span class=\"k\">.</span>length <span class=\"k\">!==</span> <span class=\"s\">2</span><span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      <span class=\"k\">if</span> <span class=\"k\">(!</span>util<span class=\"k\">.</span>isNumber <span class=\"k\">(</span>v<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">])</span> <span class=\"k\">||</span> <span class=\"k\">!</span>util<span class=\"k\">.</span>isNumber<span class=\"k\">(</span>v<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]))</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      ","      <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_view_size<span class=\"k\">)</span>","      <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>_view_size <span class=\"k\">=</span> <span class=\"k\">[];</span> <span class=\"k\">}</span>","      ","      <span class=\"k\">this</span><span class=\"k\">.</span>_view_size <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">=</span> v <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_view_size <span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]</span> <span class=\"k\">=</span> v <span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">];</span>","      ","      <span class=\"k\">this</span><span class=\"k\">.</span>_updateViewSize <span class=\"k\">();</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","  ","    <span class=\"c\">/**</span>","<span class=\"c\">     * @ignore</span>","<span class=\"c\">     * @type {Array.&lt;number&gt;}</span>","<span class=\"c\">     */</span>","    get <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_view_size<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_owner<span class=\"k\">.</span>size<span class=\"k\">;</span>","      <span class=\"k\">}</span>","      <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_view_size<span class=\"k\">.</span>slice <span class=\"k\">();</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  <span class=\"s\">'initialComponent'</span><span class=\"k\">:</span> <span class=\"k\">{</span>","    <span class=\"c\">/**</span>","<span class=\"c\">     *  Define the initiale component</span>","<span class=\"c\">     *  Generate a exception if the component was not already registered</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * @name vs.fx.NavigationController#initialComponent </span>","<span class=\"c\">     * @param {string} state_id the state</span>","<span class=\"c\">     */</span>","    set <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>comp_id<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(!</span>comp_id<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>_initial_component <span class=\"k\">=</span> undefined<span class=\"k\">;</span>","        <span class=\"k\">return</span><span class=\"k\">;</span>","      <span class=\"k\">}</span>","      ","      <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>existState <span class=\"k\">(</span>comp_id<span class=\"k\">))</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","  ","      <span class=\"c\">// set initial state and go to it   </span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_initial_component <span class=\"k\">=</span> comp_id<span class=\"k\">;</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>initialState <span class=\"k\">=</span> comp_id<span class=\"k\">;</span>","      ","      <span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>goTo <span class=\"k\">(</span>comp_id<span class=\"k\">);</span>","      <span class=\"k\">var</span> state <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>_list_of_state <span class=\"k\">[</span>comp_id<span class=\"k\">];</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>state <span class=\"k\">&amp;&amp;</span> state<span class=\"k\">.</span>comp<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        state<span class=\"k\">.</span>comp<span class=\"k\">.</span>translation <span class=\"k\">=</span> <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">];</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","    ","    <span class=\"c\">/**</span>","<span class=\"c\">     * @ignore</span>","<span class=\"c\">     */</span>","    get <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","    <span class=\"k\">{</span>","      <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_initial_component<span class=\"k\">;</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">);</span>","<span class=\"c\">/********************************************************************</span>","<span class=\"c\">                      Export</span>","<span class=\"c\">*********************************************************************/</span>","<span class=\"c\">/** @private */</span>","fx<span class=\"k\">.</span>NavigationController <span class=\"k\">=</span> NavigationController<span class=\"k\">;</span>","<span class=\"c\">/**</span>","<span class=\"c\">  Copyright (C) 2009-2012. David Thevenin, ViniSketch SARL (c), and </span>","<span class=\"c\">  contributors. All rights reserved</span>","<span class=\"c\">  </span>","<span class=\"c\">  This program is free software: you can redistribute it and/or modify</span>","<span class=\"c\">  it under the terms of the GNU Lesser General Public License as published</span>","<span class=\"c\">  by the Free Software Foundation, either version 3 of the License, or</span>","<span class=\"c\">  (at your option) any later version.</span>","<span class=\"c\">  </span>","<span class=\"c\">  This program is distributed in the hope that it will be useful,</span>","<span class=\"c\">  but WITHOUT ANY WARRANTY; without even the implied warranty of</span>","<span class=\"c\">  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the</span>","<span class=\"c\">  GNU Lesser General Public License for more details.</span>","<span class=\"c\">  </span>","<span class=\"c\">  You should have received a copy of the GNU Lesser General Public License</span>","<span class=\"c\">  along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.</span>","<span class=\"c\">*/</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> *  The vs.fx.CardController class &lt;br /&gt;</span>","<span class=\"c\"> *  @class</span>","<span class=\"c\"> *  This layer manage a list of children using a card style animation.</span>","<span class=\"c\"> *  &lt;p /&gt;</span>","<span class=\"c\"> *  Children can be slided horizontally (right &lt;-&gt; left) or vertically </span>","<span class=\"c\"> *  (top &lt;-&gt; bottom) using a pointing device (mouse, touch screen, ...),</span>","<span class=\"c\"> *  or using methods goToNextView and goToPreviousView.</span>","<span class=\"c\"> *  &lt;p /&gt;</span>","<span class=\"c\"> *  By default the card slide to left out. You can change it using the </span>","<span class=\"c\"> *  property \"direction\". You can configure it with four directions:</span>","<span class=\"c\"> *  &lt;ul&gt;</span>","<span class=\"c\"> *    &lt;li&gt;vs.fx.CardController.LEFT_OUT</span>","<span class=\"c\"> *    &lt;li&gt;vs.fx.CardController.RIGHT_OUT</span>","<span class=\"c\"> *    &lt;li&gt;vs.fx.CardController.TOP_OUT</span>","<span class=\"c\"> *    &lt;li&gt;vs.fx.CardController.BOTTOM_OUT</span>","<span class=\"c\"> *  &lt;/ul&gt;</span>","<span class=\"c\"> *  &lt;p /&gt;</span>","<span class=\"c\"> *  The following example shows a typical example with panels</span>","<span class=\"c\"> *  (components 1 to 3).</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  &lt;pre style=\"font-family:courier\"&gt;</span>","<span class=\"c\"> *                   (*)</span>","<span class=\"c\"> *                &#226;&#142;&#161;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#226;&#142;&#164;</span>","<span class=\"c\"> *   &#226;&#142;&#161;(1)&#203;&#137;&#203;&#137;&#203;&#137;&#226;&#142;&#164;    &#226;&#142;&#162; &#226;&#142;&#161;(2)&#203;&#137;&#203;&#137;&#203;&#137;&#226;&#142;&#164;  &#226;&#142;&#162;</span>","<span class=\"c\"> *   &#226;&#142;&#159;      &#226;&#142;&#162;    &#226;&#142;&#162; &#226;&#142;&#162;&#226;&#142;&#161;(3)&#203;&#137;&#226;&#142;&#162;&#203;&#137;&#226;&#142;&#164;&#226;&#142;&#162;</span>","<span class=\"c\"> *   &#226;&#142;&#159;      &#226;&#142;&#162;    &#226;&#142;&#162; &#226;&#142;&#162;&#226;&#142;&#162;    &#226;&#142;&#162; &#226;&#142;&#162;&#226;&#142;&#162;</span>","<span class=\"c\"> *   &#226;&#142;&#159;      &#226;&#142;&#162;    &#226;&#142;&#162; &#226;&#142;&#162;&#226;&#142;&#162;    &#226;&#142;&#162; &#226;&#142;&#162;&#226;&#142;&#162;</span>","<span class=\"c\"> *   &#226;&#142;&#163;______&#226;&#142;&#166;    &#226;&#142;&#162; &#226;&#142;&#163;______&#226;&#142;&#166; &#226;&#142;&#162;&#226;&#142;&#162;</span>","<span class=\"c\"> *                &#226;&#142;&#162;   &#226;&#142;&#163;_______&#226;&#142;&#166;&#226;&#142;&#162;</span>","<span class=\"c\"> *                &#226;&#142;&#163;_____________&#226;&#142;&#166;</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *                   (*)</span>","<span class=\"c\"> *                &#226;&#142;&#161;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#226;&#142;&#164;</span>","<span class=\"c\"> *   &#226;&#142;&#161;(2)&#203;&#137;&#203;&#137;&#203;&#137;&#226;&#142;&#164;    &#226;&#142;&#162; &#226;&#142;&#161;(3)&#203;&#137;&#203;&#137;&#203;&#137;&#226;&#142;&#164;  &#226;&#142;&#162;</span>","<span class=\"c\"> *   &#226;&#142;&#162;&#226;&#142;&#161;(1)&#203;&#137;&#226;&#142;&#162;&#203;&#137;&#226;&#142;&#164; &#226;&#142;&#162; &#226;&#142;&#162;       &#226;&#142;&#162;  &#226;&#142;&#162;</span>","<span class=\"c\"> *   &#226;&#142;&#162;&#226;&#142;&#162;    &#226;&#142;&#162; &#226;&#142;&#162; &#226;&#142;&#162; &#226;&#142;&#162;       &#226;&#142;&#162;  &#226;&#142;&#162;</span>","<span class=\"c\"> *   &#226;&#142;&#162;&#226;&#142;&#162;    &#226;&#142;&#162; &#226;&#142;&#162; &#226;&#142;&#162; &#226;&#142;&#162;       &#226;&#142;&#162;  &#226;&#142;&#162;</span>","<span class=\"c\"> *   &#226;&#142;&#163;______&#226;&#142;&#166; &#226;&#142;&#162; &#226;&#142;&#162; &#226;&#142;&#163;______&#226;&#142;&#166;   &#226;&#142;&#162;</span>","<span class=\"c\"> *     &#226;&#142;&#163;______&#226;&#142;&#166;  &#226;&#142;&#162;             &#226;&#142;&#162;</span>","<span class=\"c\"> *                &#226;&#142;&#163;_____________&#226;&#142;&#166;</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  (*) : device screen</span>","<span class=\"c\"> *  (1, ...,3) : components managed by the CardLayer</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *   &lt;/pre&gt;</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  &lt;p&gt;</span>","<span class=\"c\"> *  Delegate:</span>","<span class=\"c\"> *  &lt;ul&gt;</span>","<span class=\"c\"> *    &lt;li/&gt;controllerViewWillChange : function (from vs.ui.View, to vs.ui.View, controller),</span>","<span class=\"c\"> *         Called when the view changed</span>","<span class=\"c\"> *    &lt;li/&gt;controllerAnimationDidEnd : function (from vs.ui.View, to vs.ui.View, controller), Called just after </span>","<span class=\"c\"> *         the animation ended</span>","<span class=\"c\"> *  &lt;/ul&gt;</span>","<span class=\"c\"> *  &lt;p&gt;</span>","<span class=\"c\"> *  @example</span>","<span class=\"c\"> *  var myController = new vs.fx.CardController (myComp);</span>","<span class=\"c\"> *  myLayer.init ();</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  myController.push ('APanel', {id: '1', data: {...}});</span>","<span class=\"c\"> *  myController.push ('APanel', {id: '2', data: {...}});</span>","<span class=\"c\"> *  myController.push ('APanel', {id: '3', data: {...}});</span>","<span class=\"c\"> *  myController.push ('APanel', {id: '4', data: {...}});</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  @extends vs.fx.StackController</span>","<span class=\"c\"> * @name vs.fx.CardController</span>","<span class=\"c\"> * </span>","<span class=\"c\"> *  @author David Thevenin</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  @constructor</span>","<span class=\"c\"> *   Creates a new vs.fx.CardController.</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @param {vs.ui.View} owner the View using this Layer [mandatory]</span>","<span class=\"c\"> * @param {String} extension The hole into the vs.ui.View will be inserted. </span>","<span class=\"c\"> *     ['children' by default]</span>","<span class=\"c\"> */</span>","<span class=\"k\">function</span> CardController <span class=\"k\">(</span>owner<span class=\"k\">)</span>","<span class=\"k\">{</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>parent <span class=\"k\">=</span> StackController<span class=\"k\">;</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>parent <span class=\"k\">(</span>owner<span class=\"k\">);</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>constructor <span class=\"k\">=</span> CardController<span class=\"k\">;</span>","  ","  <span class=\"k\">if</span> <span class=\"k\">(</span>owner<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>_transition_out <span class=\"k\">=</span> <span class=\"k\">new</span> TranslateAnimation <span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span><span class=\"s\">0</span><span class=\"k\">,</span><span class=\"s\">0</span><span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>_transition_clear <span class=\"k\">=</span> <span class=\"k\">new</span> TranslateAnimation <span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span><span class=\"s\">0</span><span class=\"k\">,</span><span class=\"s\">0</span><span class=\"k\">);</span>","  ","    <span class=\"k\">this</span><span class=\"k\">.</span>animationDuration <span class=\"k\">=</span> CardController<span class=\"k\">.</span>ANIMATION_DURATION<span class=\"k\">;</span>","  <span class=\"k\">}</span>","<span class=\"k\">}</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * The duration of the animation between two views</span>","<span class=\"c\"> * @name vs.fx.CardController.ANIMATION_DURATION</span>","<span class=\"c\"> */</span>","CardController<span class=\"k\">.</span>ANIMATION_DURATION <span class=\"k\">=</span> <span class=\"s\">500</span><span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * Left out card slide (defaut)</span>","<span class=\"c\"> * @name vs.fx.CardController.LEFT_OUT</span>","<span class=\"c\"> * @const</span>","<span class=\"c\"> */</span>","CardController<span class=\"k\">.</span>LEFT_OUT <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * Right out card slide</span>","<span class=\"c\"> * @name vs.fx.CardController.RIGHT_OUT</span>","<span class=\"c\"> * @const</span>","<span class=\"c\"> */</span>","CardController<span class=\"k\">.</span>RIGHT_OUT <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * Top out card slide</span>","<span class=\"c\"> * @name vs.fx.CardController.TOP_OUT</span>","<span class=\"c\"> * @const</span>","<span class=\"c\"> */</span>","CardController<span class=\"k\">.</span>TOP_OUT <span class=\"k\">=</span> <span class=\"s\">2</span><span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * Bottom out card slide</span>","<span class=\"c\"> * @name vs.fx.CardController.BOTTOM_OUT</span>","<span class=\"c\"> * @const</span>","<span class=\"c\"> */</span>","CardController<span class=\"k\">.</span>BOTTOM_OUT <span class=\"k\">=</span> <span class=\"s\">3</span><span class=\"k\">;</span>","","CardController<span class=\"k\">.</span>prototype <span class=\"k\">=</span> <span class=\"k\">{</span>","","<span class=\"c\">/********************************************************************</span>","<span class=\"c\">                  protected members declarations</span>","<span class=\"c\">********************************************************************/</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @type {number}</span>","<span class=\"c\">   */</span>","  _direction <span class=\"k\">:</span> CardController<span class=\"k\">.</span>LEFT_OUT<span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @type {vs.fx.TranslateAnimation}</span>","<span class=\"c\">   */</span>","  _transition_out <span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @type {vs.fx.TranslateAnimation}</span>","<span class=\"c\">   */</span>","  _transition_clear <span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">,</span>  ","","<span class=\"c\">/*********************************************************</span>","<span class=\"c\"> *                behavior update</span>","<span class=\"c\"> *********************************************************/</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  _updateViewSize <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    <span class=\"k\">var</span> size <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>viewSize<span class=\"k\">;</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_transition_out<span class=\"k\">)</span> <span class=\"k\">return</span><span class=\"k\">;</span>","    ","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_direction <span class=\"k\">===</span> CardController<span class=\"k\">.</span>LEFT_OUT<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_transition_out<span class=\"k\">.</span>x <span class=\"k\">=</span> <span class=\"k\">-</span>size <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_transition_out<span class=\"k\">.</span>y <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","    <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_direction <span class=\"k\">===</span> CardController<span class=\"k\">.</span>RIGHT_OUT<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_transition_out<span class=\"k\">.</span>x <span class=\"k\">=</span> size <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_transition_out<span class=\"k\">.</span>y <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","    <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_direction <span class=\"k\">===</span> CardController<span class=\"k\">.</span>BOTTOM_OUT<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_transition_out<span class=\"k\">.</span>x <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_transition_out<span class=\"k\">.</span>y <span class=\"k\">=</span>  size <span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">];</span>","    <span class=\"k\">}</span>","    <span class=\"k\">else</span>","    <span class=\"k\">{</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_transition_out<span class=\"k\">.</span>x <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_transition_out<span class=\"k\">.</span>y <span class=\"k\">=</span> <span class=\"k\">-</span>size <span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">];</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","<span class=\"c\">/*********************************************************</span>","<span class=\"c\"> *                  Event management</span>","<span class=\"c\"> *********************************************************/</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   *  Add a child component to the Slider Manager</span>","<span class=\"c\">   *  &lt;p&gt;</span>","<span class=\"c\">   *  The component must be a graphic component (vs.ui.View).</span>","<span class=\"c\">   *  It will be instantiated, init and added automaticaly</span>","<span class=\"c\">   *  &lt;p&gt;</span>","<span class=\"c\">   *  The component instantiation is a lazy algorithm. The component will</span>","<span class=\"c\">   *  be instantiated and add into the DOM tree only when it has to be show</span>","<span class=\"c\">   *  to the user.</span>","<span class=\"c\">   *  &lt;p&gt;</span>","<span class=\"c\">   *  @example</span>","<span class=\"c\">   *  var myController = new vs.fx.CardController (this | myView);</span>","<span class=\"c\">   *  myController.init ();</span>","<span class=\"c\">   *  myController.push ('AComponent1', data1);</span>","<span class=\"c\">   *  myController.push ('AComponent1', data2);</span>","<span class=\"c\">   *  myController.push ('AComponent2', data3);</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.fx.CardController#push</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @param {vs.ui.View | String} comp The GUI component or the component</span>","<span class=\"c\">   *     name to instanciate   </span>","<span class=\"c\">   * @param {Object} config Configuration structure need to build the component.</span>","<span class=\"c\">   * @param {Array} bindings Bindings configuration [[spec, observer, method], ...]</span>","<span class=\"c\">   */</span>","  push <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>comp<span class=\"k\">,</span> data<span class=\"k\">,</span> extension<span class=\"k\">,</span> bindings<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>comp<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>data<span class=\"k\">)</span> <span class=\"k\">{</span> data <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    ","    <span class=\"k\">var</span> state_id <span class=\"k\">=</span> Controller<span class=\"k\">.</span>prototype<span class=\"k\">.</span>push<span class=\"k\">.</span>call","      <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> comp<span class=\"k\">,</span> data<span class=\"k\">,</span> extension<span class=\"k\">,</span> bindings<span class=\"k\">);</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>state_id<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    ","    <span class=\"k\">this</span><span class=\"k\">.</span>_states_array<span class=\"k\">.</span>push <span class=\"k\">(</span>state_id<span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>__nb_panels <span class=\"k\">++;</span> ","","    <span class=\"c\">// first item</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__nb_panels <span class=\"k\">===</span> <span class=\"s\">1</span><span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>initialComponent <span class=\"k\">=</span> state_id<span class=\"k\">;</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_last_comp_id <span class=\"k\">=</span> state_id<span class=\"k\">;</span>","","      <span class=\"k\">return</span> state_id<span class=\"k\">;</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">this</span><span class=\"k\">.</span>addTransition <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_last_comp_id<span class=\"k\">,</span> state_id<span class=\"k\">,</span> StackController<span class=\"k\">.</span>NEXT<span class=\"k\">,</span>","      <span class=\"k\">null</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>_transition_clear<span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>addTransition <span class=\"k\">(</span>state_id<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>_last_comp_id<span class=\"k\">,</span> StackController<span class=\"k\">.</span>PRED<span class=\"k\">,</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_transition_out<span class=\"k\">,</span> <span class=\"k\">null</span><span class=\"k\">);</span>","<span class=\"c\">//    this.addTransition </span>","<span class=\"c\">//      (state_id, this._initial_component, StackController.FIRST);</span>","    ","    <span class=\"c\">// create the second view </span>","    state <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_fsm<span class=\"k\">.</span>_list_of_state <span class=\"k\">[</span>state_id<span class=\"k\">];</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>state<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      console<span class=\"k\">.</span>error <span class=\"k\">(</span><span class=\"s\">\"Unknown error in vs.fx.StackController.push\"</span><span class=\"k\">);</span>","      <span class=\"k\">return</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_last_comp_id <span class=\"k\">===</span> <span class=\"k\">this</span><span class=\"k\">.</span>_initial_component<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(!</span>state<span class=\"k\">.</span>comp<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        state<span class=\"k\">.</span>comp <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_owner<span class=\"k\">.</span>createAndAddComponent","          <span class=\"k\">(</span>state<span class=\"k\">.</span>comp_name<span class=\"k\">,</span> state<span class=\"k\">.</span>init_data<span class=\"k\">,</span> extension<span class=\"k\">);</span>","          ","        state<span class=\"k\">.</span>comp<span class=\"k\">.</span>configure <span class=\"k\">(</span>state<span class=\"k\">.</span>init_data<span class=\"k\">);</span>","        state<span class=\"k\">.</span>comp<span class=\"k\">.</span>setStyle <span class=\"k\">(</span><span class=\"s\">'position'</span><span class=\"k\">,</span> <span class=\"s\">'absolute'</span><span class=\"k\">);</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>state<span class=\"k\">.</span>comp <span class=\"k\">&amp;&amp;</span> state<span class=\"k\">.</span>comp<span class=\"k\">.</span>propertiesDidChange<span class=\"k\">)</span> ","        <span class=\"k\">{</span> ","          state<span class=\"k\">.</span>comp<span class=\"k\">.</span>propertiesDidChange <span class=\"k\">();</span>","        <span class=\"k\">}</span>","        state<span class=\"k\">.</span>comp<span class=\"k\">.</span>propertyChange <span class=\"k\">();</span>","      <span class=\"k\">}</span>","      ","      state<span class=\"k\">.</span>comp<span class=\"k\">.</span>show <span class=\"k\">();</span>","      state<span class=\"k\">.</span>comp<span class=\"k\">.</span>setStyle <span class=\"k\">(</span><span class=\"s\">'z-index'</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>__nb_panels<span class=\"k\">);</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>configureNewComponent <span class=\"k\">(</span>state<span class=\"k\">.</span>comp<span class=\"k\">);</span>","    <span class=\"k\">}</span>","    <span class=\"k\">else</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>state<span class=\"k\">.</span>comp<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        state<span class=\"k\">.</span>comp<span class=\"k\">.</span>setStyle <span class=\"k\">(</span><span class=\"s\">'z-index'</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>__nb_panels<span class=\"k\">);</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>configureNewComponent <span class=\"k\">(</span>state<span class=\"k\">.</span>comp<span class=\"k\">);</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">this</span><span class=\"k\">.</span>_last_comp_id <span class=\"k\">=</span> state_id<span class=\"k\">;</span>","    <span class=\"k\">return</span> state_id<span class=\"k\">;</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  configureNewComponent <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>comp<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">var</span> transform<span class=\"k\">,</span> size<span class=\"k\">;</span>","    size <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>viewSize<span class=\"k\">;</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>SUPPORT_3D_TRANSFORM<span class=\"k\">)</span> transform <span class=\"k\">=</span> <span class=\"s\">\"translate3d\"</span><span class=\"k\">;</span>","    <span class=\"k\">else</span> transform <span class=\"k\">=</span> <span class=\"s\">\"translate\"</span><span class=\"k\">;</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_direction <span class=\"k\">===</span> CardController<span class=\"k\">.</span>LEFT_OUT<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      transform <span class=\"k\">+=</span> <span class=\"s\">\"(-\"</span> <span class=\"k\">+</span> size <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">+</span> <span class=\"s\">\"px,0\"</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","    <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_direction <span class=\"k\">===</span> CardController<span class=\"k\">.</span>RIGHT_OUT<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      transform <span class=\"k\">+=</span> <span class=\"s\">\"(\"</span> <span class=\"k\">+</span> size <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">+</span> <span class=\"s\">\"px,0\"</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","    <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_direction <span class=\"k\">===</span> CardController<span class=\"k\">.</span>BOTTOM_OUT<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      transform <span class=\"k\">+=</span> <span class=\"s\">\"(0,\"</span> <span class=\"k\">+</span> size <span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]</span> <span class=\"k\">+</span> <span class=\"s\">\"px\"</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","    <span class=\"k\">else</span>","    <span class=\"k\">{</span>","      transform <span class=\"k\">+=</span> <span class=\"s\">\"(0,-\"</span> <span class=\"k\">+</span> size <span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]</span> <span class=\"k\">+</span> <span class=\"s\">\"px\"</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>SUPPORT_3D_TRANSFORM<span class=\"k\">)</span> transform <span class=\"k\">+=</span> <span class=\"s\">\",0)\"</span><span class=\"k\">;</span>","    <span class=\"k\">else</span> transform <span class=\"k\">+=</span> <span class=\"s\">\")\"</span><span class=\"k\">;</span>","","    comp<span class=\"k\">.</span>view<span class=\"k\">.</span>style<span class=\"k\">.</span>webkitTransitionDuration <span class=\"k\">=</span> <span class=\"s\">'0'</span><span class=\"k\">;</span>","    setElementTransform <span class=\"k\">(</span>comp<span class=\"k\">.</span>view<span class=\"k\">,</span> transform<span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  handleEvent <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>event<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">var</span> t_ok <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">,</span> state<span class=\"k\">,</span> state_before_id<span class=\"k\">,</span> state_before<span class=\"k\">,</span> transform<span class=\"k\">,</span> index<span class=\"k\">;</span>","    ","    <span class=\"k\">if</span> <span class=\"k\">(</span>event<span class=\"k\">.</span>type <span class=\"k\">===</span> core<span class=\"k\">.</span>POINTER_START<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__controller__<span class=\"k\">.</span>_direction <span class=\"k\">===</span> CardController<span class=\"k\">.</span>LEFT_OUT <span class=\"k\">||</span>","          <span class=\"k\">this</span><span class=\"k\">.</span>__controller__<span class=\"k\">.</span>_direction <span class=\"k\">===</span> CardController<span class=\"k\">.</span>RIGHT_OUT<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>event<span class=\"k\">.</span>changedTouches<span class=\"k\">)</span>","        <span class=\"k\">{</span>  <span class=\"k\">this</span><span class=\"k\">.</span>__pos <span class=\"k\">=</span> event<span class=\"k\">.</span>changedTouches<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>clientX<span class=\"k\">;</span> <span class=\"k\">}</span>","        <span class=\"k\">else</span>","        <span class=\"k\">{</span>  <span class=\"k\">this</span><span class=\"k\">.</span>__pos <span class=\"k\">=</span> event<span class=\"k\">.</span>clientX<span class=\"k\">;</span> <span class=\"k\">}</span>","      <span class=\"k\">}</span>","      <span class=\"k\">else</span>","      <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>event<span class=\"k\">.</span>changedTouches<span class=\"k\">)</span>","        <span class=\"k\">{</span>  <span class=\"k\">this</span><span class=\"k\">.</span>__pos <span class=\"k\">=</span> event<span class=\"k\">.</span>changedTouches<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>clientY<span class=\"k\">;</span> <span class=\"k\">}</span>","        <span class=\"k\">else</span>","        <span class=\"k\">{</span>  <span class=\"k\">this</span><span class=\"k\">.</span>__pos <span class=\"k\">=</span> event<span class=\"k\">.</span>clientY<span class=\"k\">;</span> <span class=\"k\">}</span>","      <span class=\"k\">}</span>","","      document<span class=\"k\">.</span>addEventListener <span class=\"k\">(</span>core<span class=\"k\">.</span>POINTER_END<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","      document<span class=\"k\">.</span>addEventListener <span class=\"k\">(</span>core<span class=\"k\">.</span>POINTER_MOVE<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","    <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>event<span class=\"k\">.</span>type <span class=\"k\">===</span> core<span class=\"k\">.</span>POINTER_MOVE<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      event<span class=\"k\">.</span>preventDefault <span class=\"k\">();</span>","      state <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>__controller__<span class=\"k\">.</span>_fsm<span class=\"k\">.</span>_list_of_state ","        <span class=\"k\">[</span><span class=\"k\">this</span><span class=\"k\">.</span>__controller__<span class=\"k\">.</span>_fsm<span class=\"k\">.</span>_current_state<span class=\"k\">];</span>","      index <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>__controller__<span class=\"k\">.</span>_states_array<span class=\"k\">.</span>indexOf ","        <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__controller__<span class=\"k\">.</span>_fsm<span class=\"k\">.</span>_current_state<span class=\"k\">)</span>","      ","      <span class=\"k\">if</span> <span class=\"k\">(</span>index <span class=\"k\">&gt;</span> <span class=\"s\">0</span><span class=\"k\">)</span>","      <span class=\"k\">{</span> state_before_id <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>__controller__<span class=\"k\">.</span>_states_array <span class=\"k\">[</span>index<span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">];</span> <span class=\"k\">}</span>","      ","      <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__controller__<span class=\"k\">.</span>_direction <span class=\"k\">===</span> CardController<span class=\"k\">.</span>LEFT_OUT <span class=\"k\">||</span>","          <span class=\"k\">this</span><span class=\"k\">.</span>__controller__<span class=\"k\">.</span>_direction <span class=\"k\">===</span> CardController<span class=\"k\">.</span>RIGHT_OUT<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>event<span class=\"k\">.</span>changedTouches<span class=\"k\">)</span>","        <span class=\"k\">{</span>  <span class=\"k\">this</span><span class=\"k\">.</span>__delta <span class=\"k\">=</span>  event<span class=\"k\">.</span>changedTouches<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>clientX <span class=\"k\">-</span> <span class=\"k\">this</span><span class=\"k\">.</span>__pos<span class=\"k\">;</span> <span class=\"k\">}</span>","        <span class=\"k\">else</span>","        <span class=\"k\">{</span>  <span class=\"k\">this</span><span class=\"k\">.</span>__delta <span class=\"k\">=</span> event<span class=\"k\">.</span>clientX <span class=\"k\">-</span> <span class=\"k\">this</span><span class=\"k\">.</span>__pos<span class=\"k\">;</span> <span class=\"k\">}</span>","      ","        <span class=\"k\">if</span> <span class=\"k\">(</span>SUPPORT_3D_TRANSFORM<span class=\"k\">)</span>","        <span class=\"k\">{</span> transform <span class=\"k\">=</span> <span class=\"s\">\"translate3d(\"</span><span class=\"k\">+</span><span class=\"k\">this</span><span class=\"k\">.</span>__delta<span class=\"k\">+</span><span class=\"s\">\"px,0px,0)\"</span><span class=\"k\">;</span> <span class=\"k\">}</span>","        <span class=\"k\">else</span> transform <span class=\"k\">=</span> <span class=\"s\">\"translate(\"</span><span class=\"k\">+</span><span class=\"k\">this</span><span class=\"k\">.</span>__delta<span class=\"k\">+</span><span class=\"s\">\"px,0px)\"</span><span class=\"k\">;</span>","      <span class=\"k\">}</span>","      <span class=\"k\">else</span>","      <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>event<span class=\"k\">.</span>changedTouches<span class=\"k\">)</span>","        <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>__delta <span class=\"k\">=</span>  event<span class=\"k\">.</span>changedTouches<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>clientY <span class=\"k\">-</span> <span class=\"k\">this</span><span class=\"k\">.</span>__pos<span class=\"k\">;</span> <span class=\"k\">}</span>","        <span class=\"k\">else</span>","        <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>__delta <span class=\"k\">=</span> event<span class=\"k\">.</span>clientY <span class=\"k\">-</span> <span class=\"k\">this</span><span class=\"k\">.</span>__pos<span class=\"k\">;</span> <span class=\"k\">}</span>","      ","        <span class=\"k\">if</span> <span class=\"k\">(</span>SUPPORT_3D_TRANSFORM<span class=\"k\">)</span>","        <span class=\"k\">{</span> transform <span class=\"k\">=</span> <span class=\"s\">\"translate3d(0px,\"</span><span class=\"k\">+</span><span class=\"k\">this</span><span class=\"k\">.</span>__delta<span class=\"k\">+</span><span class=\"s\">\"px,0)\"</span><span class=\"k\">;</span> <span class=\"k\">}</span>","        <span class=\"k\">else</span> transform <span class=\"k\">=</span> <span class=\"s\">\"translate(0px,\"</span><span class=\"k\">+</span><span class=\"k\">this</span><span class=\"k\">.</span>__delta<span class=\"k\">+</span><span class=\"s\">\"px)\"</span><span class=\"k\">;</span>","      <span class=\"k\">}</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__controller__<span class=\"k\">.</span>_direction <span class=\"k\">===</span> CardController<span class=\"k\">.</span>LEFT_OUT <span class=\"k\">||</span>","          <span class=\"k\">this</span><span class=\"k\">.</span>__controller__<span class=\"k\">.</span>_direction <span class=\"k\">===</span> CardController<span class=\"k\">.</span>TOP_OUT<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__delta <span class=\"k\">&lt;</span> <span class=\"s\">0</span><span class=\"k\">)</span>","        <span class=\"k\">{</span>","          state<span class=\"k\">.</span>comp<span class=\"k\">.</span>view<span class=\"k\">.</span>style<span class=\"k\">.</span>webkitTransitionDuration <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","          setElementTransform <span class=\"k\">(</span>state<span class=\"k\">.</span>comp<span class=\"k\">.</span>view<span class=\"k\">,</span> transform<span class=\"k\">);</span>","        <span class=\"k\">}</span>","        <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>state_before_id<span class=\"k\">)</span>","        <span class=\"k\">{</span>","          state_before <span class=\"k\">=</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>__controller__<span class=\"k\">.</span>_fsm<span class=\"k\">.</span>_list_of_state <span class=\"k\">[</span>state_before_id<span class=\"k\">];</span>","          <span class=\"k\">if</span> <span class=\"k\">(</span>state_before <span class=\"k\">&amp;&amp;</span> state_before<span class=\"k\">.</span>comp<span class=\"k\">)</span>","          <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__controller__<span class=\"k\">.</span>_direction <span class=\"k\">===</span> CardController<span class=\"k\">.</span>LEFT_OUT <span class=\"k\">||</span>","                <span class=\"k\">this</span><span class=\"k\">.</span>__controller__<span class=\"k\">.</span>_direction <span class=\"k\">===</span> CardController<span class=\"k\">.</span>RIGHT_OUT<span class=\"k\">)</span>","            <span class=\"k\">{</span>","              <span class=\"k\">if</span> <span class=\"k\">(</span>SUPPORT_3D_TRANSFORM<span class=\"k\">)</span>","              <span class=\"k\">{</span>","                transform <span class=\"k\">=</span> ","                  <span class=\"s\">\"translate3d(\"</span><span class=\"k\">+(</span><span class=\"k\">this</span><span class=\"k\">.</span>__delta<span class=\"k\">-</span><span class=\"k\">this</span><span class=\"k\">.</span>_size<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">])+</span><span class=\"s\">\"px,0px,0)\"</span><span class=\"k\">;</span>","              <span class=\"k\">}</span>","              <span class=\"k\">else</span> transform <span class=\"k\">=</span> ","                <span class=\"s\">\"translate(\"</span><span class=\"k\">+(</span><span class=\"k\">this</span><span class=\"k\">.</span>__delta<span class=\"k\">-</span><span class=\"k\">this</span><span class=\"k\">.</span>_size<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">])+</span><span class=\"s\">\"px,0px)\"</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","            <span class=\"k\">else</span>","            <span class=\"k\">{</span>","              <span class=\"k\">if</span> <span class=\"k\">(</span>SUPPORT_3D_TRANSFORM<span class=\"k\">)</span>","              <span class=\"k\">{</span>","                transform <span class=\"k\">=</span> ","                  <span class=\"s\">\"translate3d(0px,\"</span><span class=\"k\">+(</span><span class=\"k\">this</span><span class=\"k\">.</span>__delta<span class=\"k\">-</span><span class=\"k\">this</span><span class=\"k\">.</span>_size<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">])+</span><span class=\"s\">\"px,0)\"</span><span class=\"k\">;</span>","              <span class=\"k\">}</span>","              <span class=\"k\">else</span> transform <span class=\"k\">=</span> ","                <span class=\"s\">\"translate(0px,\"</span><span class=\"k\">+(</span><span class=\"k\">this</span><span class=\"k\">.</span>__delta<span class=\"k\">-</span><span class=\"k\">this</span><span class=\"k\">.</span>_size<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">])+</span><span class=\"s\">\"px)\"</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>  ","            state_before<span class=\"k\">.</span>comp<span class=\"k\">.</span>view<span class=\"k\">.</span>style<span class=\"k\">.</span>webkitTransitionDuration <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","            setElementTransform <span class=\"k\">(</span>state_before<span class=\"k\">.</span>comp<span class=\"k\">.</span>view<span class=\"k\">,</span> transform<span class=\"k\">);</span>","          <span class=\"k\">}</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span>","      <span class=\"k\">else</span>","      <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__delta <span class=\"k\">&gt;</span> <span class=\"s\">0</span><span class=\"k\">)</span>","        <span class=\"k\">{</span>","          state<span class=\"k\">.</span>comp<span class=\"k\">.</span>view<span class=\"k\">.</span>style<span class=\"k\">.</span>webkitTransitionDuration <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","          setElementTransform <span class=\"k\">(</span>state<span class=\"k\">.</span>comp<span class=\"k\">.</span>view<span class=\"k\">,</span> transform<span class=\"k\">);</span>","        <span class=\"k\">}</span>","        <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>state_before_id<span class=\"k\">)</span>","        <span class=\"k\">{</span>","          state_before <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>__controller__<span class=\"k\">.</span>_fsm<span class=\"k\">.</span>_list_of_state <span class=\"k\">[</span>state_before_id<span class=\"k\">];</span>","          <span class=\"k\">if</span> <span class=\"k\">(</span>state_before <span class=\"k\">&amp;&amp;</span> state_before<span class=\"k\">.</span>comp<span class=\"k\">)</span>","          <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__controller__<span class=\"k\">.</span>_direction <span class=\"k\">===</span> CardController<span class=\"k\">.</span>LEFT_OUT <span class=\"k\">||</span>","                <span class=\"k\">this</span><span class=\"k\">.</span>__controller__<span class=\"k\">.</span>_direction <span class=\"k\">===</span> CardController<span class=\"k\">.</span>RIGHT_OUT<span class=\"k\">)</span>","            <span class=\"k\">{</span>","              <span class=\"k\">if</span> <span class=\"k\">(</span>SUPPORT_3D_TRANSFORM<span class=\"k\">)</span>","              <span class=\"k\">{</span>","                transform <span class=\"k\">=</span> ","                  <span class=\"s\">\"translate3d(\"</span><span class=\"k\">+(</span><span class=\"k\">this</span><span class=\"k\">.</span>_size<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]+</span><span class=\"k\">this</span><span class=\"k\">.</span>__delta<span class=\"k\">)+</span><span class=\"s\">\"px,0px,0)\"</span><span class=\"k\">;</span>","              <span class=\"k\">}</span>","              <span class=\"k\">else</span> transform <span class=\"k\">=</span> ","                <span class=\"s\">\"translate(\"</span><span class=\"k\">+(</span><span class=\"k\">this</span><span class=\"k\">.</span>_size<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]+</span><span class=\"k\">this</span><span class=\"k\">.</span>__delta<span class=\"k\">)+</span><span class=\"s\">\"px,0px)\"</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","            <span class=\"k\">else</span>","            <span class=\"k\">{</span>","              <span class=\"k\">if</span> <span class=\"k\">(</span>SUPPORT_3D_TRANSFORM<span class=\"k\">)</span>","              <span class=\"k\">{</span>","                transform <span class=\"k\">=</span> ","                  <span class=\"s\">\"translate3d(0px,\"</span><span class=\"k\">+(</span><span class=\"k\">this</span><span class=\"k\">.</span>_size<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]+</span><span class=\"k\">this</span><span class=\"k\">.</span>__delta<span class=\"k\">)+</span><span class=\"s\">\"px,0)\"</span><span class=\"k\">;</span>","              <span class=\"k\">}</span>","              <span class=\"k\">else</span> transform <span class=\"k\">=</span> ","                <span class=\"s\">\"translate(0px,\"</span><span class=\"k\">+(</span><span class=\"k\">this</span><span class=\"k\">.</span>_size<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]+</span><span class=\"k\">this</span><span class=\"k\">.</span>__delta<span class=\"k\">)+</span><span class=\"s\">\"px)\"</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>  ","            state_before<span class=\"k\">.</span>comp<span class=\"k\">.</span>view<span class=\"k\">.</span>style<span class=\"k\">.</span>webkitTransitionDuration <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","            setElementTransform <span class=\"k\">(</span>state_before<span class=\"k\">.</span>comp<span class=\"k\">.</span>view<span class=\"k\">,</span> transform<span class=\"k\">);</span>","          <span class=\"k\">}</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>event<span class=\"k\">.</span>type <span class=\"k\">===</span> core<span class=\"k\">.</span>POINTER_END<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      state <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>__controller__<span class=\"k\">.</span>_fsm<span class=\"k\">.</span>_list_of_state   ","        <span class=\"k\">[</span><span class=\"k\">this</span><span class=\"k\">.</span>__controller__<span class=\"k\">.</span>_fsm<span class=\"k\">.</span>_current_state<span class=\"k\">];</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__controller__<span class=\"k\">.</span>_direction <span class=\"k\">===</span> CardController<span class=\"k\">.</span>LEFT_OUT <span class=\"k\">||</span>","          <span class=\"k\">this</span><span class=\"k\">.</span>__controller__<span class=\"k\">.</span>_direction <span class=\"k\">===</span> CardController<span class=\"k\">.</span>TOP_OUT<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__delta <span class=\"k\">&gt;</span> <span class=\"s\">50</span><span class=\"k\">)</span>","        <span class=\"k\">{</span>","          t_ok <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>__controller__<span class=\"k\">.</span>goToPreviousView <span class=\"k\">();</span>","        <span class=\"k\">}</span>","        <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__delta <span class=\"k\">&lt;</span> <span class=\"k\">-</span><span class=\"s\">50</span><span class=\"k\">)</span>","        <span class=\"k\">{</span>","          t_ok <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>__controller__<span class=\"k\">.</span>goToNextView <span class=\"k\">();</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span>","      <span class=\"k\">else</span>","      <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__delta <span class=\"k\">&gt;</span> <span class=\"s\">50</span><span class=\"k\">)</span>","        <span class=\"k\">{</span>","          t_ok <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>__controller__<span class=\"k\">.</span>goToNextView <span class=\"k\">();</span>","        <span class=\"k\">}</span>","        <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__delta <span class=\"k\">&lt;</span> <span class=\"k\">-</span><span class=\"s\">50</span><span class=\"k\">)</span>","        <span class=\"k\">{</span>","          t_ok <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>__controller__<span class=\"k\">.</span>goToPreviousView <span class=\"k\">();</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span>","      <span class=\"k\">if</span> <span class=\"k\">(!</span>t_ok<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        index <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>__controller__<span class=\"k\">.</span>_states_array<span class=\"k\">.</span>indexOf <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__controller__<span class=\"k\">.</span>_fsm<span class=\"k\">.</span>_current_state<span class=\"k\">)</span>","        ","        <span class=\"k\">if</span> <span class=\"k\">(</span>index <span class=\"k\">&gt;</span> <span class=\"s\">0</span><span class=\"k\">)</span>","        <span class=\"k\">{</span> state_before_id <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>__controller__<span class=\"k\">.</span>_states_array <span class=\"k\">[</span>index<span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">];</span> <span class=\"k\">}</span>","        ","        <span class=\"k\">if</span> <span class=\"k\">((</span><span class=\"k\">this</span><span class=\"k\">.</span>__controller__<span class=\"k\">.</span>_direction <span class=\"k\">===</span> CardController<span class=\"k\">.</span>LEFT_OUT <span class=\"k\">||</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>__controller__<span class=\"k\">.</span>_direction <span class=\"k\">===</span> CardController<span class=\"k\">.</span>TOP_OUT<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>__delta <span class=\"k\">&lt;</span> <span class=\"s\">0</span><span class=\"k\">)</span>","        <span class=\"k\">{</span>","          <span class=\"k\">if</span> <span class=\"k\">(</span>SUPPORT_3D_TRANSFORM<span class=\"k\">)</span>","          <span class=\"k\">{</span> transform <span class=\"k\">=</span> <span class=\"s\">\"translate3d(0,0,0)\"</span><span class=\"k\">;</span> <span class=\"k\">}</span>","          <span class=\"k\">else</span> transform <span class=\"k\">=</span> <span class=\"s\">\"translate(0,0)\"</span><span class=\"k\">;</span>","","          state<span class=\"k\">.</span>comp<span class=\"k\">.</span>view<span class=\"k\">.</span>style<span class=\"k\">.</span>webkitTransitionDuration <span class=\"k\">=</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>__controller__<span class=\"k\">.</span>_animation_duration <span class=\"k\">+</span> <span class=\"s\">'ms'</span><span class=\"k\">;</span>","          setElementTransform <span class=\"k\">(</span>state<span class=\"k\">.</span>comp<span class=\"k\">.</span>view<span class=\"k\">,</span> transform<span class=\"k\">);</span>","        <span class=\"k\">}</span>","        <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">((</span><span class=\"k\">this</span><span class=\"k\">.</span>__controller__<span class=\"k\">.</span>_direction <span class=\"k\">===</span> CardController<span class=\"k\">.</span>RIGHT_OUT <span class=\"k\">||</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>__controller__<span class=\"k\">.</span>_direction <span class=\"k\">===</span> CardController<span class=\"k\">.</span>BOTTOM_OUT<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>__delta <span class=\"k\">&gt;</span> <span class=\"s\">0</span><span class=\"k\">)</span>","        <span class=\"k\">{</span>","          <span class=\"k\">if</span> <span class=\"k\">(</span>SUPPORT_3D_TRANSFORM<span class=\"k\">)</span>","          <span class=\"k\">{</span> transform <span class=\"k\">=</span> <span class=\"s\">\"translate3d(0,0,0)\"</span><span class=\"k\">;</span> <span class=\"k\">}</span>","          <span class=\"k\">else</span> transform <span class=\"k\">=</span> <span class=\"s\">\"translate(0,0)\"</span><span class=\"k\">;</span>","","          state<span class=\"k\">.</span>comp<span class=\"k\">.</span>view<span class=\"k\">.</span>style<span class=\"k\">.</span>webkitTransitionDuration <span class=\"k\">=</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>__controller__<span class=\"k\">.</span>_animation_duration <span class=\"k\">+</span> <span class=\"s\">'ms'</span><span class=\"k\">;</span>","          setElementTransform <span class=\"k\">(</span>state<span class=\"k\">.</span>comp<span class=\"k\">.</span>view<span class=\"k\">,</span> transform<span class=\"k\">);</span>","        <span class=\"k\">}</span>","        <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>state_before_id<span class=\"k\">)</span>","        <span class=\"k\">{</span>","          state_before <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>__controller__<span class=\"k\">.</span>_fsm<span class=\"k\">.</span>_list_of_state <span class=\"k\">[</span>state_before_id<span class=\"k\">];</span>","          <span class=\"k\">if</span> <span class=\"k\">(</span>state_before <span class=\"k\">&amp;&amp;</span> state_before<span class=\"k\">.</span>comp<span class=\"k\">)</span>","          <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>SUPPORT_3D_TRANSFORM<span class=\"k\">)</span> transform <span class=\"k\">=</span> <span class=\"s\">\"translate3d\"</span><span class=\"k\">;</span>","            <span class=\"k\">else</span> transform <span class=\"k\">=</span> <span class=\"s\">\"translate\"</span><span class=\"k\">;</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__controller__<span class=\"k\">.</span>_direction <span class=\"k\">===</span> CardController<span class=\"k\">.</span>LEFT_OUT<span class=\"k\">)</span>","            <span class=\"k\">{</span>","              transform <span class=\"k\">=</span> <span class=\"s\">\"(-\"</span> <span class=\"k\">+</span> <span class=\"k\">this</span><span class=\"k\">.</span>_size <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">+</span> <span class=\"s\">\"px,0px\"</span><span class=\"k\">;</span> ","            <span class=\"k\">}</span>","            <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__controller__<span class=\"k\">.</span>_direction <span class=\"k\">===</span> CardController<span class=\"k\">.</span>RIGHT_OUT<span class=\"k\">)</span>","            <span class=\"k\">{</span>","              transform <span class=\"k\">=</span> <span class=\"s\">\"(\"</span> <span class=\"k\">+</span> <span class=\"k\">this</span><span class=\"k\">.</span>_size <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">+</span> <span class=\"s\">\"px,0px\"</span><span class=\"k\">;</span> ","            <span class=\"k\">}</span>","            <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__controller__<span class=\"k\">.</span>_direction <span class=\"k\">===</span> CardController<span class=\"k\">.</span>BOTTOM_OUT<span class=\"k\">)</span>","            <span class=\"k\">{</span>","              transform <span class=\"k\">=</span> <span class=\"s\">\"(0px,\"</span> <span class=\"k\">+</span> <span class=\"k\">this</span><span class=\"k\">.</span>_size <span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]</span> <span class=\"k\">+</span> <span class=\"s\">\"px\"</span><span class=\"k\">;</span> ","            <span class=\"k\">}</span>","            <span class=\"k\">else</span>","            <span class=\"k\">{</span>","              transform <span class=\"k\">=</span> <span class=\"s\">\"(0px,-\"</span> <span class=\"k\">+</span> <span class=\"k\">this</span><span class=\"k\">.</span>_size <span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]</span> <span class=\"k\">+</span> <span class=\"s\">\"px\"</span><span class=\"k\">;</span> ","            <span class=\"k\">}</span>    ","            <span class=\"k\">if</span> <span class=\"k\">(</span>SUPPORT_3D_TRANSFORM<span class=\"k\">)</span> transform <span class=\"k\">+=</span> <span class=\"s\">\",0)\"</span><span class=\"k\">;</span>","            <span class=\"k\">else</span> transform <span class=\"k\">+=</span> <span class=\"s\">\")\"</span><span class=\"k\">;</span>","","            state_before<span class=\"k\">.</span>comp<span class=\"k\">.</span>view<span class=\"k\">.</span>style<span class=\"k\">.</span>webkitTransitionDuration <span class=\"k\">=</span>","              <span class=\"k\">this</span><span class=\"k\">.</span>__controller__<span class=\"k\">.</span>_animation_duration <span class=\"k\">+</span> <span class=\"s\">'ms'</span><span class=\"k\">;</span>","            setElementTransform <span class=\"k\">(</span>state_before<span class=\"k\">.</span>comp<span class=\"k\">.</span>view<span class=\"k\">,</span> transform<span class=\"k\">);</span>","          <span class=\"k\">}</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span>","      document<span class=\"k\">.</span>removeEventListener <span class=\"k\">(</span>core<span class=\"k\">.</span>POINTER_END<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","      document<span class=\"k\">.</span>removeEventListener <span class=\"k\">(</span>core<span class=\"k\">.</span>POINTER_MOVE<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","util<span class=\"k\">.</span>extendClass <span class=\"k\">(</span>CardController<span class=\"k\">,</span> StackController<span class=\"k\">);</span>","","<span class=\"c\">/********************************************************************</span>","<span class=\"c\">                  Define class properties</span>","<span class=\"c\">********************************************************************/</span>","","util<span class=\"k\">.</span>defineClassProperties <span class=\"k\">(</span>CardController<span class=\"k\">,</span> <span class=\"k\">{</span>","","  <span class=\"s\">'direction'</span><span class=\"k\">:</span> <span class=\"k\">{</span>","    <span class=\"c\">/** </span>","<span class=\"c\">     * Getter|Setter Card slide direction </span>","<span class=\"c\">     * @name vs.fx.CardController#direction </span>","<span class=\"c\">     * @type String</span>","<span class=\"c\">     */</span> ","    set <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>v<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">var</span> state<span class=\"k\">,</span> state_id<span class=\"k\">,</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> pos <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> index<span class=\"k\">,</span> transform <span class=\"k\">=</span> <span class=\"s\">''</span><span class=\"k\">,</span>","        size <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_owner<span class=\"k\">.</span>size<span class=\"k\">;</span>","      ","      <span class=\"k\">if</span> <span class=\"k\">(</span>v <span class=\"k\">!==</span> CardController<span class=\"k\">.</span>LEFT_OUT <span class=\"k\">&amp;&amp;</span>","          v <span class=\"k\">!==</span> CardController<span class=\"k\">.</span>RIGHT_OUT <span class=\"k\">&amp;&amp;</span>","          v <span class=\"k\">!==</span> CardController<span class=\"k\">.</span>BOTTOM_OUT <span class=\"k\">&amp;&amp;</span>","          v <span class=\"k\">!==</span> CardController<span class=\"k\">.</span>TOP_OUT<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      ","      <span class=\"k\">this</span><span class=\"k\">.</span>_direction <span class=\"k\">=</span> v<span class=\"k\">;</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_updateViewSize <span class=\"k\">();</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","  ","    <span class=\"c\">/** </span>","<span class=\"c\">     * @ignore</span>","<span class=\"c\">     * @return {String}</span>","<span class=\"c\">     */</span> ","    get <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","    <span class=\"k\">{</span>","      <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_direction<span class=\"k\">;</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  <span class=\"s\">'animationDuration'</span><span class=\"k\">:</span> <span class=\"k\">{</span>","    <span class=\"c\">/** </span>","<span class=\"c\">     * Set the animation/transition temporisation (in millisecond)</span>","<span class=\"c\">     * @name vs.fx.CardController#animationDuration </span>","<span class=\"c\">     * @type {number}</span>","<span class=\"c\">     */</span> ","    set <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>v<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(!</span>v<span class=\"k\">)</span> <span class=\"k\">{</span> v <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      <span class=\"k\">if</span> <span class=\"k\">(!</span>util<span class=\"k\">.</span>isNumber <span class=\"k\">(</span>v<span class=\"k\">))</span> <span class=\"k\">{</span> <span class=\"k\">return</span> <span class=\"k\">}</span><span class=\"k\">;</span>","      ","      <span class=\"k\">this</span><span class=\"k\">.</span>_animation_duration <span class=\"k\">=</span> v<span class=\"k\">;</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_transition_out<span class=\"k\">)</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>_transition_out<span class=\"k\">.</span>duration <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_animation_duration <span class=\"k\">+</span> <span class=\"s\">'ms'</span><span class=\"k\">;</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_transition_clear<span class=\"k\">)</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>_transition_clear<span class=\"k\">.</span>duration <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_animation_duration <span class=\"k\">+</span> <span class=\"s\">'ms'</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">);</span>","","","<span class=\"c\">/********************************************************************</span>","<span class=\"c\">                      Export</span>","<span class=\"c\">*********************************************************************/</span>","<span class=\"c\">/** @private */</span>","fx<span class=\"k\">.</span>CardController <span class=\"k\">=</span> CardController<span class=\"k\">;</span>","<span class=\"c\">/**</span>","<span class=\"c\">  Copyright (C) 2009-2012. David Thevenin, ViniSketch SARL (c), and </span>","<span class=\"c\">  contributors. All rights reserved</span>","<span class=\"c\">  </span>","<span class=\"c\">  This program is free software: you can redistribute it and/or modify</span>","<span class=\"c\">  it under the terms of the GNU Lesser General Public License as published</span>","<span class=\"c\">  by the Free Software Foundation, either version 3 of the License, or</span>","<span class=\"c\">  (at your option) any later version.</span>","<span class=\"c\">  </span>","<span class=\"c\">  This program is distributed in the hope that it will be useful,</span>","<span class=\"c\">  but WITHOUT ANY WARRANTY; without even the implied warranty of</span>","<span class=\"c\">  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the</span>","<span class=\"c\">  GNU Lesser General Public License for more details.</span>","<span class=\"c\">  </span>","<span class=\"c\">  You should have received a copy of the GNU Lesser General Public License</span>","<span class=\"c\">  along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.</span>","<span class=\"c\">*/</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> *  The vs.fx.CubicController class &lt;br /&gt;</span>","<span class=\"c\"> *  @class</span>","<span class=\"c\"> *  This layer manage a list of children using a card layout.</span>","<span class=\"c\"> *  &lt;p /&gt;</span>","<span class=\"c\"> *  Children can be slided horizontally (right &lt;-&gt; left) or vertically </span>","<span class=\"c\"> *  (top &lt;-&gt; bottom) using a pointing device (mouse, touch screen, ...),</span>","<span class=\"c\"> *  or using methods goToNextView and goToPreviousView.</span>","<span class=\"c\"> *  &lt;p /&gt;</span>","<span class=\"c\"> *  By default the slider is horizontal, but you can change it using the </span>","<span class=\"c\"> *  property \"orientation\".</span>","<span class=\"c\"> *  &lt;p /&gt;</span>","<span class=\"c\"> *  The following example shows a typical example with panels</span>","<span class=\"c\"> *  (components 1 to 3).</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  &lt;pre style=\"font-family:courier\"&gt;</span>","<span class=\"c\"> *                   (*)</span>","<span class=\"c\"> *                &#226;&#142;&#161;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#226;&#142;&#164;</span>","<span class=\"c\"> *   &#226;&#142;&#161;(1)&#203;&#137;&#203;&#137;&#203;&#137;&#226;&#142;&#164;    &#226;&#142;&#162; &#226;&#142;&#161;(2)&#203;&#137;&#203;&#137;&#203;&#137;&#226;&#142;&#164;  &#226;&#142;&#162;</span>","<span class=\"c\"> *   &#226;&#142;&#159;      &#226;&#142;&#162;    &#226;&#142;&#162; &#226;&#142;&#162;&#226;&#142;&#161;(3)&#203;&#137;&#226;&#142;&#162;&#203;&#137;&#226;&#142;&#164;&#226;&#142;&#162;</span>","<span class=\"c\"> *   &#226;&#142;&#159;      &#226;&#142;&#162;    &#226;&#142;&#162; &#226;&#142;&#162;&#226;&#142;&#162;    &#226;&#142;&#162; &#226;&#142;&#162;&#226;&#142;&#162;</span>","<span class=\"c\"> *   &#226;&#142;&#159;      &#226;&#142;&#162;    &#226;&#142;&#162; &#226;&#142;&#162;&#226;&#142;&#162;    &#226;&#142;&#162; &#226;&#142;&#162;&#226;&#142;&#162;</span>","<span class=\"c\"> *   &#226;&#142;&#163;______&#226;&#142;&#166;    &#226;&#142;&#162; &#226;&#142;&#163;______&#226;&#142;&#166; &#226;&#142;&#162;&#226;&#142;&#162;</span>","<span class=\"c\"> *                &#226;&#142;&#162;   &#226;&#142;&#163;_______&#226;&#142;&#166;&#226;&#142;&#162;</span>","<span class=\"c\"> *                &#226;&#142;&#163;_____________&#226;&#142;&#166;</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *                   (*)</span>","<span class=\"c\"> *                &#226;&#142;&#161;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#226;&#142;&#164;</span>","<span class=\"c\"> *   &#226;&#142;&#161;(2)&#203;&#137;&#203;&#137;&#203;&#137;&#226;&#142;&#164;    &#226;&#142;&#162; &#226;&#142;&#161;(3)&#203;&#137;&#203;&#137;&#203;&#137;&#226;&#142;&#164;  &#226;&#142;&#162;</span>","<span class=\"c\"> *   &#226;&#142;&#162;&#226;&#142;&#161;(1)&#203;&#137;&#226;&#142;&#162;&#203;&#137;&#226;&#142;&#164; &#226;&#142;&#162; &#226;&#142;&#162;       &#226;&#142;&#162;  &#226;&#142;&#162;</span>","<span class=\"c\"> *   &#226;&#142;&#162;&#226;&#142;&#162;    &#226;&#142;&#162; &#226;&#142;&#162; &#226;&#142;&#162; &#226;&#142;&#162;       &#226;&#142;&#162;  &#226;&#142;&#162;</span>","<span class=\"c\"> *   &#226;&#142;&#162;&#226;&#142;&#162;    &#226;&#142;&#162; &#226;&#142;&#162; &#226;&#142;&#162; &#226;&#142;&#162;       &#226;&#142;&#162;  &#226;&#142;&#162;</span>","<span class=\"c\"> *   &#226;&#142;&#163;______&#226;&#142;&#166; &#226;&#142;&#162; &#226;&#142;&#162; &#226;&#142;&#163;______&#226;&#142;&#166;   &#226;&#142;&#162;</span>","<span class=\"c\"> *     &#226;&#142;&#163;______&#226;&#142;&#166;  &#226;&#142;&#162;             &#226;&#142;&#162;</span>","<span class=\"c\"> *                &#226;&#142;&#163;_____________&#226;&#142;&#166;</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  (*) : device screen</span>","<span class=\"c\"> *  (1, ...,3) : components managed by the CardLayer</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *   &lt;/pre&gt;</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  &lt;p&gt;</span>","<span class=\"c\"> *  Delegate:</span>","<span class=\"c\"> *  &lt;ul&gt;</span>","<span class=\"c\"> *    &lt;li/&gt;controllerViewWillChange : function (from vs.ui.View, to vs.ui.View, controller), Called when the view</span>","<span class=\"c\"> *        changed</span>","<span class=\"c\"> *  &lt;/ul&gt;</span>","<span class=\"c\"> *  &lt;p&gt;</span>","<span class=\"c\"> *  @example</span>","<span class=\"c\"> *  theApplicatioin.layer = new vs.fx.CubicController (myComp);</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  myComp.layer.push ('APanel', {id: '1', data: {...}});</span>","<span class=\"c\"> *  myComp.layer.push ('APanel', {id: '2', data: {...}});</span>","<span class=\"c\"> *  myComp.layer.push ('APanel', {id: '3', data: {...}});</span>","<span class=\"c\"> *  myComp.layer.push ('APanel', {id: '4', data: {...}});</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  @extends vs.fx.StackController</span>","<span class=\"c\"> * </span>","<span class=\"c\"> *  @author David Thevenin</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  @constructor</span>","<span class=\"c\"> *   Creates a new vs.ui.View.</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @param {vs.ui.View} owner the View using this Layer [mandatory]</span>","<span class=\"c\"> * @param {String} extension The hole into the vs.ui.View will be inserted. </span>","<span class=\"c\"> *     ['children' by default]</span>","<span class=\"c\"> */</span>","<span class=\"k\">function</span> CubicController <span class=\"k\">(</span>owner<span class=\"k\">,</span> extension<span class=\"k\">)</span>","<span class=\"k\">{</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>parent <span class=\"k\">=</span> StackController<span class=\"k\">;</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>parent <span class=\"k\">(</span>owner<span class=\"k\">,</span> extension<span class=\"k\">);</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>constructor <span class=\"k\">=</span> CubicController<span class=\"k\">;</span>","  ","  <span class=\"k\">if</span> <span class=\"k\">(</span>owner<span class=\"k\">)</span> owner<span class=\"k\">.</span>setStyle <span class=\"k\">(</span><span class=\"s\">'-webkit-transform-style'</span><span class=\"k\">,</span> <span class=\"s\">'preserve-3d'</span><span class=\"k\">);</span>","  ","<span class=\"c\">/********************************************************************</span>","<span class=\"c\">                  setter and getter declarations</span>","<span class=\"c\">********************************************************************/</span>","<span class=\"k\">}</span>","","CubicController<span class=\"k\">.</span>_translate_animation <span class=\"k\">=</span> <span class=\"k\">new</span> RotateXYZAnimation <span class=\"k\">(-</span><span class=\"s\">90</span><span class=\"k\">,</span><span class=\"s\">0</span><span class=\"k\">,</span><span class=\"s\">0</span><span class=\"k\">);</span>","CubicController<span class=\"k\">.</span>_translate_animation<span class=\"k\">.</span>init <span class=\"k\">();</span>","CubicController<span class=\"k\">.</span>_translate_animation<span class=\"k\">.</span>addKeyFrame <span class=\"k\">(</span><span class=\"s\">'from'</span><span class=\"k\">,</span> <span class=\"k\">{</span>degX<span class=\"k\">:</span><span class=\"s\">0</span><span class=\"k\">}</span><span class=\"k\">);</span>","CubicController<span class=\"k\">.</span>_translate_animation<span class=\"k\">.</span>addKeyFrame <span class=\"k\">(</span><span class=\"s\">50</span><span class=\"k\">,</span> <span class=\"k\">{</span>degX<span class=\"k\">:-</span><span class=\"s\">92</span><span class=\"k\">}</span><span class=\"k\">);</span>","CubicController<span class=\"k\">.</span>_translate_animation<span class=\"k\">.</span>addKeyFrame <span class=\"k\">(</span><span class=\"s\">70</span><span class=\"k\">,</span> <span class=\"k\">{</span>degX<span class=\"k\">:-</span><span class=\"s\">84</span><span class=\"k\">}</span><span class=\"k\">);</span>","CubicController<span class=\"k\">.</span>_translate_animation<span class=\"k\">.</span>addKeyFrame <span class=\"k\">(</span><span class=\"s\">80</span><span class=\"k\">,</span> <span class=\"k\">{</span>degX<span class=\"k\">:-</span><span class=\"s\">90</span><span class=\"k\">}</span><span class=\"k\">);</span>","CubicController<span class=\"k\">.</span>_translate_animation<span class=\"k\">.</span>addKeyFrame <span class=\"k\">(</span><span class=\"s\">95</span><span class=\"k\">,</span> <span class=\"k\">{</span>degX<span class=\"k\">:-</span><span class=\"s\">88</span><span class=\"k\">}</span><span class=\"k\">);</span>","CubicController<span class=\"k\">.</span>_translate_animation<span class=\"k\">.</span>durations <span class=\"k\">=</span> <span class=\"s\">\"2s\"</span><span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * Horizontal slide (defaut)</span>","<span class=\"c\"> * @const</span>","<span class=\"c\"> */</span>","CubicController<span class=\"k\">.</span>HORIZONTAL <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * Vertical slide</span>","<span class=\"c\"> * @const</span>","<span class=\"c\"> */</span>","CubicController<span class=\"k\">.</span>VERTICAL <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">;</span>","","","CubicController<span class=\"k\">.</span>prototype <span class=\"k\">=</span> <span class=\"k\">{</span>","","<span class=\"c\">/********************************************************************</span>","<span class=\"c\">                  protected members declarations</span>","<span class=\"c\">********************************************************************/</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @type {number}</span>","<span class=\"c\">   */</span>","  _orientation <span class=\"k\">:</span> CubicController<span class=\"k\">.</span>HORIZONTAL<span class=\"k\">,</span>","","<span class=\"c\">/********************************************************************</span>","","<span class=\"c\">********************************************************************/</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   *  Add a child component to the Slider Manager</span>","<span class=\"c\">   *  &lt;p&gt;</span>","<span class=\"c\">   *  The component must be a graphic component (vs.ui.View).</span>","<span class=\"c\">   *  It will be instantiated, init and added automaticaly</span>","<span class=\"c\">   *  &lt;p&gt;</span>","<span class=\"c\">   *  The component instantiation is a lazy algorithm. The component will</span>","<span class=\"c\">   *  be instantiated and add into the DOM tree only when it has to be show</span>","<span class=\"c\">   *  to the user.</span>","<span class=\"c\">   *  &lt;p&gt;</span>","<span class=\"c\">   *  @example</span>","<span class=\"c\">   *  var myComp = new MyComp (conf);</span>","<span class=\"c\">   *  myComp.layer = new vs.fx.StackController (myComp, 'children');</span>","<span class=\"c\">   *  myComp.layer.push ('AComponent1', data1);</span>","<span class=\"c\">   *  myComp.layer.push ('AComponent1', data2);</span>","<span class=\"c\">   *  myComp.layer.push ('AComponent2', data3);</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.fx.CubicController#push</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @param {vs.ui.View | String} comp The GUI component or the component</span>","<span class=\"c\">   *     name to instanciate   </span>","<span class=\"c\">   * @param {Object} config Configuration structure need to build the component.</span>","<span class=\"c\">   * @param {Array} bindings Bindings configuration [[spec, observer, method], ...]</span>","<span class=\"c\">   */</span>","  push <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>comp<span class=\"k\">,</span> data<span class=\"k\">,</span> bindings<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>comp<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    ","    <span class=\"k\">if</span> <span class=\"k\">(!</span>util<span class=\"k\">.</span>isString <span class=\"k\">(</span>comp<span class=\"k\">))</span>","    <span class=\"k\">{</span>","      <span class=\"k\">var</span> index <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_states_array<span class=\"k\">.</span>length<span class=\"k\">;</span>","      comp<span class=\"k\">.</span>position <span class=\"k\">=</span> <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">];</span>","      comp<span class=\"k\">.</span>setStyle <span class=\"k\">(</span><span class=\"s\">'z-index'</span><span class=\"k\">,</span> <span class=\"s\">1000</span> <span class=\"k\">-</span> index<span class=\"k\">);</span>","    <span class=\"k\">}</span>","    <span class=\"k\">return</span> StackController<span class=\"k\">.</span>prototype<span class=\"k\">.</span>push<span class=\"k\">.</span>call","      <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> comp<span class=\"k\">,</span> data<span class=\"k\">,</span> bindings<span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","<span class=\"c\">/*********************************************************</span>","<span class=\"c\"> *                  Event management</span>","<span class=\"c\"> *********************************************************/</span>","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  handleEvent <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>event<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">var</span> t_ok <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">,</span> state<span class=\"k\">,</span> state_before_id<span class=\"k\">,</span> state_before<span class=\"k\">,</span> transform<span class=\"k\">,</span> index<span class=\"k\">;</span>","    ","    <span class=\"k\">if</span> <span class=\"k\">(</span>event<span class=\"k\">.</span>type <span class=\"k\">===</span> core<span class=\"k\">.</span>POINTER_START<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__layer<span class=\"k\">.</span>_orientation <span class=\"k\">===</span> CubicController<span class=\"k\">.</span>HORIZONTAL<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>event<span class=\"k\">.</span>changedTouches<span class=\"k\">)</span>","        <span class=\"k\">{</span>  <span class=\"k\">this</span><span class=\"k\">.</span>__pos <span class=\"k\">=</span> event<span class=\"k\">.</span>changedTouches<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>clientX<span class=\"k\">;</span> <span class=\"k\">}</span>","        <span class=\"k\">else</span>","        <span class=\"k\">{</span>  <span class=\"k\">this</span><span class=\"k\">.</span>__pos <span class=\"k\">=</span> event<span class=\"k\">.</span>clientX<span class=\"k\">;</span> <span class=\"k\">}</span>","      <span class=\"k\">}</span>","      <span class=\"k\">else</span>","      <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>event<span class=\"k\">.</span>changedTouches<span class=\"k\">)</span>","        <span class=\"k\">{</span>  <span class=\"k\">this</span><span class=\"k\">.</span>__pos <span class=\"k\">=</span> event<span class=\"k\">.</span>changedTouches<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>clientY<span class=\"k\">;</span> <span class=\"k\">}</span>","        <span class=\"k\">else</span>","        <span class=\"k\">{</span>  <span class=\"k\">this</span><span class=\"k\">.</span>__pos <span class=\"k\">=</span> event<span class=\"k\">.</span>clientY<span class=\"k\">;</span> <span class=\"k\">}</span>","      <span class=\"k\">}</span>","","      document<span class=\"k\">.</span>addEventListener <span class=\"k\">(</span>core<span class=\"k\">.</span>POINTER_END<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","      document<span class=\"k\">.</span>addEventListener <span class=\"k\">(</span>core<span class=\"k\">.</span>POINTER_MOVE<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","      ","      <span class=\"k\">this</span><span class=\"k\">.</span>animationDuration <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","    <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>event<span class=\"k\">.</span>type <span class=\"k\">===</span> core<span class=\"k\">.</span>POINTER_MOVE<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      event<span class=\"k\">.</span>preventDefault <span class=\"k\">();</span>","      state <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>__layer<span class=\"k\">.</span>_list_of_state <span class=\"k\">[</span><span class=\"k\">this</span><span class=\"k\">.</span>__layer<span class=\"k\">.</span>_current_state<span class=\"k\">];</span>","      index <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>__layer<span class=\"k\">.</span>_states_array<span class=\"k\">.</span>indexOf <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__layer<span class=\"k\">.</span>_current_state<span class=\"k\">)</span>","      ","      <span class=\"k\">if</span> <span class=\"k\">(</span>index <span class=\"k\">&gt;</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">{</span> state_before_id <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>__layer<span class=\"k\">.</span>_states_array <span class=\"k\">[</span>index<span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">];</span> <span class=\"k\">}</span>","      ","      <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__layer<span class=\"k\">.</span>_orientation <span class=\"k\">===</span> CubicController<span class=\"k\">.</span>HORIZONTAL<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>event<span class=\"k\">.</span>changedTouches<span class=\"k\">)</span>","        <span class=\"k\">{</span>  <span class=\"k\">this</span><span class=\"k\">.</span>__delta <span class=\"k\">=</span>  event<span class=\"k\">.</span>changedTouches<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>clientX <span class=\"k\">-</span> <span class=\"k\">this</span><span class=\"k\">.</span>__pos<span class=\"k\">;</span> <span class=\"k\">}</span>","        <span class=\"k\">else</span>","        <span class=\"k\">{</span>  <span class=\"k\">this</span><span class=\"k\">.</span>__delta <span class=\"k\">=</span> event<span class=\"k\">.</span>clientX <span class=\"k\">-</span> <span class=\"k\">this</span><span class=\"k\">.</span>__pos<span class=\"k\">;</span> <span class=\"k\">}</span>","      ","        <span class=\"k\">if</span> <span class=\"k\">(</span>SUPPORT_3D_TRANSFORM<span class=\"k\">)</span>","        <span class=\"k\">{</span> transform <span class=\"k\">=</span> <span class=\"s\">\"translate3d(\"</span><span class=\"k\">+</span><span class=\"k\">this</span><span class=\"k\">.</span>__delta<span class=\"k\">+</span><span class=\"s\">\"px,0px,0)\"</span><span class=\"k\">;</span> <span class=\"k\">}</span>","        <span class=\"k\">else</span> transform <span class=\"k\">=</span> <span class=\"s\">\"translate(\"</span><span class=\"k\">+</span><span class=\"k\">this</span><span class=\"k\">.</span>__delta<span class=\"k\">+</span><span class=\"s\">\"px,0px)\"</span><span class=\"k\">;</span>","      <span class=\"k\">}</span>","      <span class=\"k\">else</span>","      <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>event<span class=\"k\">.</span>changedTouches<span class=\"k\">)</span>","        <span class=\"k\">{</span>  <span class=\"k\">this</span><span class=\"k\">.</span>__delta <span class=\"k\">=</span>  event<span class=\"k\">.</span>changedTouches<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>clientY <span class=\"k\">-</span> <span class=\"k\">this</span><span class=\"k\">.</span>__pos<span class=\"k\">;</span> <span class=\"k\">}</span>","        <span class=\"k\">else</span>","        <span class=\"k\">{</span>  <span class=\"k\">this</span><span class=\"k\">.</span>__delta <span class=\"k\">=</span> event<span class=\"k\">.</span>clientY <span class=\"k\">-</span> <span class=\"k\">this</span><span class=\"k\">.</span>__pos<span class=\"k\">;</span> <span class=\"k\">}</span>","      ","        <span class=\"k\">if</span> <span class=\"k\">(</span>SUPPORT_3D_TRANSFORM<span class=\"k\">)</span>","        <span class=\"k\">{</span> transform <span class=\"k\">=</span> <span class=\"s\">\"translate3d(0px,\"</span><span class=\"k\">+</span><span class=\"k\">this</span><span class=\"k\">.</span>__delta<span class=\"k\">+</span><span class=\"s\">\"px,0)\"</span><span class=\"k\">;</span> <span class=\"k\">}</span>","        <span class=\"k\">else</span> transform <span class=\"k\">=</span> <span class=\"s\">\"translate(0px,\"</span><span class=\"k\">+</span><span class=\"k\">this</span><span class=\"k\">.</span>__delta<span class=\"k\">+</span><span class=\"s\">\"px)\"</span><span class=\"k\">;</span>","      <span class=\"k\">}</span>  ","      <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__delta <span class=\"k\">&lt;</span> <span class=\"s\">0</span><span class=\"k\">)</span>","      <span class=\"k\">{</span>","        state<span class=\"k\">.</span>comp<span class=\"k\">.</span>view<span class=\"k\">.</span>style<span class=\"k\">.</span>webkitTransitionDuration <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","        setElementTransform <span class=\"k\">(</span>state<span class=\"k\">.</span>comp<span class=\"k\">.</span>view<span class=\"k\">,</span> transform<span class=\"k\">);</span>","      <span class=\"k\">}</span>","      <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>state_before_id<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        state_before <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>__layer<span class=\"k\">.</span>_list_of_state <span class=\"k\">[</span>state_before_id<span class=\"k\">];</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>state_before <span class=\"k\">&amp;&amp;</span> state_before<span class=\"k\">.</span>comp<span class=\"k\">)</span>","        <span class=\"k\">{</span>","          <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__layer<span class=\"k\">.</span>_orientation <span class=\"k\">===</span> CubicController<span class=\"k\">.</span>HORIZONTAL<span class=\"k\">)</span>","          <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>SUPPORT_3D_TRANSFORM<span class=\"k\">)</span>","            <span class=\"k\">{</span>","              transform <span class=\"k\">=</span> ","                <span class=\"s\">\"translate3d(\"</span><span class=\"k\">+(</span><span class=\"k\">this</span><span class=\"k\">.</span>__delta<span class=\"k\">-</span><span class=\"k\">this</span><span class=\"k\">.</span>_size<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">])+</span><span class=\"s\">\"px,0px,0)\"</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","            <span class=\"k\">else</span> transform <span class=\"k\">=</span> ","              <span class=\"s\">\"translate(\"</span><span class=\"k\">+(</span><span class=\"k\">this</span><span class=\"k\">.</span>__delta<span class=\"k\">-</span><span class=\"k\">this</span><span class=\"k\">.</span>_size<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">])+</span><span class=\"s\">\"px,0px)\"</span><span class=\"k\">;</span>","          <span class=\"k\">}</span>","          <span class=\"k\">else</span>","          <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>SUPPORT_3D_TRANSFORM<span class=\"k\">)</span>","            <span class=\"k\">{</span>","              transform <span class=\"k\">=</span> ","                <span class=\"s\">\"translate3d(0px,\"</span><span class=\"k\">+(</span><span class=\"k\">this</span><span class=\"k\">.</span>__delta<span class=\"k\">-</span><span class=\"k\">this</span><span class=\"k\">.</span>_size<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">])+</span><span class=\"s\">\"px,0)\"</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","            <span class=\"k\">else</span> transform <span class=\"k\">=</span> ","              <span class=\"s\">\"translate(0px,\"</span><span class=\"k\">+(</span><span class=\"k\">this</span><span class=\"k\">.</span>__delta<span class=\"k\">-</span><span class=\"k\">this</span><span class=\"k\">.</span>_size<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">])+</span><span class=\"s\">\"px)\"</span><span class=\"k\">;</span>","          <span class=\"k\">}</span>  ","          state_before<span class=\"k\">.</span>comp<span class=\"k\">.</span>view<span class=\"k\">.</span>style<span class=\"k\">.</span>webkitTransitionDuration <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","          setElementTransform <span class=\"k\">(</span>state_before<span class=\"k\">.</span>comp<span class=\"k\">.</span>view<span class=\"k\">,</span> transform<span class=\"k\">);</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>event<span class=\"k\">.</span>type <span class=\"k\">===</span> core<span class=\"k\">.</span>POINTER_END<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      state <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>__layer<span class=\"k\">.</span>_list_of_state <span class=\"k\">[</span><span class=\"k\">this</span><span class=\"k\">.</span>__layer<span class=\"k\">.</span>_current_state<span class=\"k\">];</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__delta <span class=\"k\">&gt;</span> <span class=\"s\">50</span><span class=\"k\">)</span>","      <span class=\"k\">{</span>","        t_ok <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>__layer<span class=\"k\">.</span>goToPreviousView <span class=\"k\">();</span>","      <span class=\"k\">}</span>","      <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__delta <span class=\"k\">&lt;</span> <span class=\"k\">-</span><span class=\"s\">50</span><span class=\"k\">)</span>","      <span class=\"k\">{</span>","        t_ok <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>__layer<span class=\"k\">.</span>goToNextView <span class=\"k\">();</span>","      <span class=\"k\">}</span>","      <span class=\"k\">if</span> <span class=\"k\">(!</span>t_ok<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        index <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>__layer<span class=\"k\">.</span>_states_array<span class=\"k\">.</span>indexOf <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__layer<span class=\"k\">.</span>_current_state<span class=\"k\">)</span>","        ","        <span class=\"k\">if</span> <span class=\"k\">(</span>index <span class=\"k\">&gt;</span> <span class=\"s\">0</span><span class=\"k\">)</span>","        <span class=\"k\">{</span> state_before_id <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>__layer<span class=\"k\">.</span>_states_array <span class=\"k\">[</span>index<span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">];</span> <span class=\"k\">}</span>","        ","        <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__delta <span class=\"k\">&lt;</span> <span class=\"s\">0</span><span class=\"k\">)</span>","        <span class=\"k\">{</span>","          <span class=\"k\">if</span> <span class=\"k\">(</span>SUPPORT_3D_TRANSFORM<span class=\"k\">)</span>","          <span class=\"k\">{</span> transform <span class=\"k\">=</span> <span class=\"s\">\"translate3d(0,0,0)\"</span><span class=\"k\">;</span> <span class=\"k\">}</span>","          <span class=\"k\">else</span> transform <span class=\"k\">=</span> <span class=\"s\">\"translate(0,0)\"</span><span class=\"k\">;</span>","","          state<span class=\"k\">.</span>comp<span class=\"k\">.</span>view<span class=\"k\">.</span>style<span class=\"k\">.</span>webkitTransitionDuration <span class=\"k\">=</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>__layer<span class=\"k\">.</span>_animation_duration <span class=\"k\">+</span> <span class=\"s\">'ms'</span><span class=\"k\">;</span>","          setElementTransform <span class=\"k\">(</span>state<span class=\"k\">.</span>comp<span class=\"k\">.</span>view<span class=\"k\">,</span> transform<span class=\"k\">);</span>","        <span class=\"k\">}</span>","        <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>state_before_id<span class=\"k\">)</span>","        <span class=\"k\">{</span>","          state_before <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>__layer<span class=\"k\">.</span>_list_of_state <span class=\"k\">[</span>state_before_id<span class=\"k\">];</span>","          <span class=\"k\">if</span> <span class=\"k\">(</span>state_before <span class=\"k\">&amp;&amp;</span> state_before<span class=\"k\">.</span>comp<span class=\"k\">)</span>","          <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__layer<span class=\"k\">.</span>_orientation <span class=\"k\">===</span> CubicController<span class=\"k\">.</span>HORIZONTAL<span class=\"k\">)</span>","            <span class=\"k\">{</span>","              <span class=\"k\">if</span> <span class=\"k\">(</span>SUPPORT_3D_TRANSFORM<span class=\"k\">)</span>","              <span class=\"k\">{</span>","                transform <span class=\"k\">=</span> ","                  <span class=\"s\">\"translate3d(\"</span><span class=\"k\">+</span><span class=\"k\">this</span><span class=\"k\">.</span>_size<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]+</span><span class=\"s\">\"px,0px,0)\"</span><span class=\"k\">;</span>","              <span class=\"k\">}</span>","              <span class=\"k\">else</span> transform <span class=\"k\">=</span> ","                <span class=\"s\">\"translate(\"</span><span class=\"k\">+</span><span class=\"k\">this</span><span class=\"k\">.</span>_size<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]+</span><span class=\"s\">\"px,0px)\"</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","            <span class=\"k\">else</span>","            <span class=\"k\">{</span>","              <span class=\"k\">if</span> <span class=\"k\">(</span>SUPPORT_3D_TRANSFORM<span class=\"k\">)</span>","              <span class=\"k\">{</span>","                transform <span class=\"k\">=</span> ","                  <span class=\"s\">\"translate3d(0px,-\"</span><span class=\"k\">+</span><span class=\"k\">this</span><span class=\"k\">.</span>_size<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]+</span><span class=\"s\">\"px,0)\"</span><span class=\"k\">;</span>","              <span class=\"k\">}</span>","              <span class=\"k\">else</span> transform <span class=\"k\">=</span> ","                <span class=\"s\">\"translate(0px,-\"</span><span class=\"k\">+</span><span class=\"k\">this</span><span class=\"k\">.</span>_size<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]+</span><span class=\"s\">\"px)\"</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>  ","            state_before<span class=\"k\">.</span>comp<span class=\"k\">.</span>view<span class=\"k\">.</span>style<span class=\"k\">.</span>webkitTransitionDuration <span class=\"k\">=</span>","              <span class=\"k\">this</span><span class=\"k\">.</span>__layer<span class=\"k\">.</span>_animation_duration <span class=\"k\">+</span> <span class=\"s\">'ms'</span><span class=\"k\">;</span>","            setElementTransform <span class=\"k\">(</span>state_before<span class=\"k\">.</span>comp<span class=\"k\">.</span>view<span class=\"k\">,</span> transform<span class=\"k\">);</span>","          <span class=\"k\">}</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span>","      document<span class=\"k\">.</span>removeEventListener <span class=\"k\">(</span>core<span class=\"k\">.</span>POINTER_END<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","      document<span class=\"k\">.</span>removeEventListener <span class=\"k\">(</span>core<span class=\"k\">.</span>POINTER_MOVE<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   *  Private method use by the fsm to cross a transition.</span>","<span class=\"c\">   *  @note for the moment only one ouput lexem can be generation when</span>","<span class=\"c\">   *  crossing a transition</span>","<span class=\"c\">   *  @private</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.fx.CubicController#goTo</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @param {String} id_sate the id of target state.</span>","<span class=\"c\">   * @param {String} output</span>","<span class=\"c\">   * @param {Object} event the event</span>","<span class=\"c\">   */</span>","  goTo <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>state_id<span class=\"k\">,</span> output<span class=\"k\">,</span> event<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">var</span> state_to<span class=\"k\">,</span> index <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_states_array<span class=\"k\">.</span>indexOf <span class=\"k\">(</span>state_id<span class=\"k\">),</span> ","      state_from <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_list_of_state <span class=\"k\">[</span><span class=\"k\">this</span><span class=\"k\">.</span>_current_state<span class=\"k\">];</span>","    <span class=\"c\">// manage output</span>","    <span class=\"c\">// TODO WARNING</span>","        ","    StackController<span class=\"k\">.</span>prototype<span class=\"k\">.</span>goTo<span class=\"k\">.</span>call <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> state_id<span class=\"k\">,</span> output<span class=\"k\">,</span> event<span class=\"k\">);</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>state_id<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>owner<span class=\"k\">.</span>animationDuration <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_animation_duration<span class=\"k\">;</span>","","    state_to <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_list_of_state <span class=\"k\">[</span><span class=\"k\">this</span><span class=\"k\">.</span>_current_state<span class=\"k\">];</span>","    state_to<span class=\"k\">.</span>comp<span class=\"k\">.</span>setStyle <span class=\"k\">(</span><span class=\"s\">'position'</span><span class=\"k\">,</span> <span class=\"s\">'absolute'</span><span class=\"k\">);</span>","    state_to<span class=\"k\">.</span>comp<span class=\"k\">.</span>position <span class=\"k\">=</span> <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">];</span>","    state_to<span class=\"k\">.</span>comp<span class=\"k\">.</span>setStyle <span class=\"k\">(</span><span class=\"s\">'z-index'</span><span class=\"k\">,</span> <span class=\"s\">1000</span> <span class=\"k\">-</span> index<span class=\"k\">);</span>","    ","    <span class=\"k\">if</span> <span class=\"k\">(</span>state_from <span class=\"k\">&amp;&amp;</span> state_to<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      state_from<span class=\"k\">.</span>comp<span class=\"k\">.</span>setStyle <span class=\"k\">(</span><span class=\"s\">'-webkit-transform'</span><span class=\"k\">,</span> <span class=\"s\">'scale3d(.835,.835,.835) translateZ(200px)'</span><span class=\"k\">);</span>","      ","      state_to<span class=\"k\">.</span>comp<span class=\"k\">.</span>setStyle <span class=\"k\">(</span><span class=\"s\">'-webkit-transform'</span><span class=\"k\">,</span> <span class=\"s\">'scale3d(.835,.835,.835) rotateX(90deg) translateZ(200px)'</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> initState <span class=\"k\">(</span>index<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">var</span> state_id <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_states_array <span class=\"k\">[</span>index<span class=\"k\">],</span>","          state <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_list_of_state <span class=\"k\">[</span>state_id<span class=\"k\">];</span>","      ","      <span class=\"k\">if</span> <span class=\"k\">(!</span>state<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","","      <span class=\"k\">if</span> <span class=\"k\">(!</span>state<span class=\"k\">.</span>comp<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        state<span class=\"k\">.</span>comp <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>owner<span class=\"k\">.</span>createAndAddComponent","          <span class=\"k\">(</span>state<span class=\"k\">.</span>comp_name<span class=\"k\">,</span> state<span class=\"k\">.</span>init_data<span class=\"k\">,</span> state<span class=\"k\">.</span>extension<span class=\"k\">);</span>","          ","        state<span class=\"k\">.</span>comp<span class=\"k\">.</span>configure <span class=\"k\">(</span>state<span class=\"k\">.</span>init_data<span class=\"k\">);</span>","        state<span class=\"k\">.</span>comp<span class=\"k\">.</span>style <span class=\"k\">(</span><span class=\"s\">'position'</span><span class=\"k\">,</span> <span class=\"s\">'absolute'</span><span class=\"k\">);</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>state<span class=\"k\">.</span>comp <span class=\"k\">&amp;&amp;</span> state<span class=\"k\">.</span>comp<span class=\"k\">.</span>propertiesDidChange<span class=\"k\">)</span> ","        <span class=\"k\">{</span> ","          state<span class=\"k\">.</span>comp<span class=\"k\">.</span>propertiesDidChange <span class=\"k\">();</span>","        <span class=\"k\">}</span>","        state<span class=\"k\">.</span>comp<span class=\"k\">.</span>propertyChange <span class=\"k\">();</span>","      <span class=\"k\">}</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>state<span class=\"k\">.</span>view<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        __setPos <span class=\"k\">(</span>state<span class=\"k\">.</span>view<span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">);</span>","      <span class=\"k\">}</span>","      <span class=\"k\">else</span>","      <span class=\"k\">{</span>","        state<span class=\"k\">.</span>comp<span class=\"k\">.</span>position <span class=\"k\">=</span> <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">];</span>","      <span class=\"k\">}</span>","      state<span class=\"k\">.</span>comp<span class=\"k\">.</span>show <span class=\"k\">();</span>","      state<span class=\"k\">.</span>comp<span class=\"k\">.</span>style <span class=\"k\">(</span><span class=\"s\">'z-index'</span><span class=\"k\">,</span> <span class=\"s\">1000</span> <span class=\"k\">-</span> index<span class=\"k\">);</span>","    <span class=\"k\">}</span>","    ","    <span class=\"c\">/// left/top component </span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>index <span class=\"k\">&gt;</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">{</span> initState<span class=\"k\">.</span>call <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> index <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">);</span> <span class=\"k\">}</span>","","    <span class=\"c\">/// right/bottom component </span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>index <span class=\"k\">&lt;</span> <span class=\"k\">this</span><span class=\"k\">.</span>_states_array<span class=\"k\">.</span>length <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">)</span>","    <span class=\"k\">{</span> initState<span class=\"k\">.</span>call <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> index <span class=\"k\">+</span> <span class=\"s\">1</span><span class=\"k\">);</span> <span class=\"k\">}</span>","     ","    <span class=\"k\">if</span> <span class=\"k\">(</span>event <span class=\"k\">&amp;&amp;</span> event<span class=\"k\">.</span>on <span class=\"k\">===</span> StackController<span class=\"k\">.</span>NEXT <span class=\"k\">&amp;&amp;</span> state_from<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_orientation <span class=\"k\">===</span> CubicController<span class=\"k\">.</span>HORIZONTAL<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        CubicController<span class=\"k\">.</span>_translate_animation<span class=\"k\">.</span>process <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>owner<span class=\"k\">);</span>","      <span class=\"k\">}</span>","      <span class=\"k\">else</span>","      <span class=\"k\">{</span>","        CubicController<span class=\"k\">.</span>_translate_animation<span class=\"k\">.</span>process <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>owner<span class=\"k\">);</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>event <span class=\"k\">&amp;&amp;</span> event<span class=\"k\">.</span>on <span class=\"k\">===</span> StackController<span class=\"k\">.</span>PRED <span class=\"k\">&amp;&amp;</span> state_to<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      CubicController<span class=\"k\">.</span>_translate_animation<span class=\"k\">.</span>x <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","      CubicController<span class=\"k\">.</span>_translate_animation<span class=\"k\">.</span>y <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","      CubicController<span class=\"k\">.</span>_translate_animation<span class=\"k\">.</span>process <span class=\"k\">(</span>state_to<span class=\"k\">.</span>comp<span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">if</span> <span class=\"k\">(</span>output <span class=\"k\">&amp;&amp;</span> <span class=\"k\">this</span><span class=\"k\">.</span>_output_action <span class=\"k\">[</span>output<span class=\"k\">])</span>","    <span class=\"k\">{</span>","      <span class=\"k\">var</span> clb <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_output_action <span class=\"k\">[</span>output<span class=\"k\">];</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>clb <span class=\"k\">instanceof</span> Function<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        clb<span class=\"k\">.</span>call <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>owner<span class=\"k\">,</span> event<span class=\"k\">);</span>","      <span class=\"k\">}</span>","      <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>util<span class=\"k\">.</span>isString <span class=\"k\">(</span>clb<span class=\"k\">))</span>","      <span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>owner <span class=\"k\">[</span><span class=\"k\">this</span><span class=\"k\">.</span>_output_action <span class=\"k\">[</span>output<span class=\"k\">]]</span> <span class=\"k\">(</span>event<span class=\"k\">);</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","util<span class=\"k\">.</span>extendClass <span class=\"k\">(</span>CubicController<span class=\"k\">,</span> StackController<span class=\"k\">);</span>","","<span class=\"c\">/********************************************************************</span>","<span class=\"c\">                      Export</span>","<span class=\"c\">*********************************************************************/</span>","<span class=\"c\">/** @private */</span>","fx<span class=\"k\">.</span>CubicController <span class=\"k\">=</span> CubicController<span class=\"k\">;</span>","<span class=\"c\">/**</span>","<span class=\"c\">  Copyright (C) 2009-2012. David Thevenin, ViniSketch SARL (c), and </span>","<span class=\"c\">  contributors. All rights reserved</span>","<span class=\"c\">  </span>","<span class=\"c\">  This program is free software: you can redistribute it and/or modify</span>","<span class=\"c\">  it under the terms of the GNU Lesser General Public License as published</span>","<span class=\"c\">  by the Free Software Foundation, either version 3 of the License, or</span>","<span class=\"c\">  (at your option) any later version.</span>","<span class=\"c\">  </span>","<span class=\"c\">  This program is distributed in the hope that it will be useful,</span>","<span class=\"c\">  but WITHOUT ANY WARRANTY; without even the implied warranty of</span>","<span class=\"c\">  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the</span>","<span class=\"c\">  GNU Lesser General Public License for more details.</span>","<span class=\"c\">  </span>","<span class=\"c\">  You should have received a copy of the GNU Lesser General Public License</span>","<span class=\"c\">  along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.</span>","<span class=\"c\">*/</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> *  The vs.fx.OpacityController class &lt;br /&gt;</span>","<span class=\"c\"> *  @class</span>","<span class=\"c\"> *  This layer manage a list of children using a card layout.</span>","<span class=\"c\"> *  &lt;p /&gt;</span>","<span class=\"c\"> *  Children can be slided horizontally (right &lt;-&gt; left) or vertically </span>","<span class=\"c\"> *  (top &lt;-&gt; bottom) using a pointing device (mouse, touch screen, ...),</span>","<span class=\"c\"> *  or using methods goToNextView and goToPreviousView.</span>","<span class=\"c\"> *  &lt;p /&gt;</span>","<span class=\"c\"> *  By default the slider is horizontal, but you can change it using the </span>","<span class=\"c\"> *  property \"orientation\".</span>","<span class=\"c\"> *  &lt;p /&gt;</span>","<span class=\"c\"> *  The following example shows a typical example with panels</span>","<span class=\"c\"> *  (components 1 to 3).</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  &lt;pre style=\"font-family:courier\"&gt;</span>","<span class=\"c\"> *                   (*)</span>","<span class=\"c\"> *                &#226;&#142;&#161;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#226;&#142;&#164;</span>","<span class=\"c\"> *   &#226;&#142;&#161;(1)&#203;&#137;&#203;&#137;&#203;&#137;&#226;&#142;&#164;    &#226;&#142;&#162; &#226;&#142;&#161;(2)&#203;&#137;&#203;&#137;&#203;&#137;&#226;&#142;&#164;  &#226;&#142;&#162;</span>","<span class=\"c\"> *   &#226;&#142;&#159;      &#226;&#142;&#162;    &#226;&#142;&#162; &#226;&#142;&#162;&#226;&#142;&#161;(3)&#203;&#137;&#226;&#142;&#162;&#203;&#137;&#226;&#142;&#164;&#226;&#142;&#162;</span>","<span class=\"c\"> *   &#226;&#142;&#159;      &#226;&#142;&#162;    &#226;&#142;&#162; &#226;&#142;&#162;&#226;&#142;&#162;    &#226;&#142;&#162; &#226;&#142;&#162;&#226;&#142;&#162;</span>","<span class=\"c\"> *   &#226;&#142;&#159;      &#226;&#142;&#162;    &#226;&#142;&#162; &#226;&#142;&#162;&#226;&#142;&#162;    &#226;&#142;&#162; &#226;&#142;&#162;&#226;&#142;&#162;</span>","<span class=\"c\"> *   &#226;&#142;&#163;______&#226;&#142;&#166;    &#226;&#142;&#162; &#226;&#142;&#163;______&#226;&#142;&#166; &#226;&#142;&#162;&#226;&#142;&#162;</span>","<span class=\"c\"> *                &#226;&#142;&#162;   &#226;&#142;&#163;_______&#226;&#142;&#166;&#226;&#142;&#162;</span>","<span class=\"c\"> *                &#226;&#142;&#163;_____________&#226;&#142;&#166;</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *                   (*)</span>","<span class=\"c\"> *                &#226;&#142;&#161;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#203;&#137;&#226;&#142;&#164;</span>","<span class=\"c\"> *   &#226;&#142;&#161;(2)&#203;&#137;&#203;&#137;&#203;&#137;&#226;&#142;&#164;    &#226;&#142;&#162; &#226;&#142;&#161;(3)&#203;&#137;&#203;&#137;&#203;&#137;&#226;&#142;&#164;  &#226;&#142;&#162;</span>","<span class=\"c\"> *   &#226;&#142;&#162;&#226;&#142;&#161;(1)&#203;&#137;&#226;&#142;&#162;&#203;&#137;&#226;&#142;&#164; &#226;&#142;&#162; &#226;&#142;&#162;       &#226;&#142;&#162;  &#226;&#142;&#162;</span>","<span class=\"c\"> *   &#226;&#142;&#162;&#226;&#142;&#162;    &#226;&#142;&#162; &#226;&#142;&#162; &#226;&#142;&#162; &#226;&#142;&#162;       &#226;&#142;&#162;  &#226;&#142;&#162;</span>","<span class=\"c\"> *   &#226;&#142;&#162;&#226;&#142;&#162;    &#226;&#142;&#162; &#226;&#142;&#162; &#226;&#142;&#162; &#226;&#142;&#162;       &#226;&#142;&#162;  &#226;&#142;&#162;</span>","<span class=\"c\"> *   &#226;&#142;&#163;______&#226;&#142;&#166; &#226;&#142;&#162; &#226;&#142;&#162; &#226;&#142;&#163;______&#226;&#142;&#166;   &#226;&#142;&#162;</span>","<span class=\"c\"> *     &#226;&#142;&#163;______&#226;&#142;&#166;  &#226;&#142;&#162;             &#226;&#142;&#162;</span>","<span class=\"c\"> *                &#226;&#142;&#163;_____________&#226;&#142;&#166;</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  (*) : device screen</span>","<span class=\"c\"> *  (1, ...,3) : components managed by the CardLayer</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *   &lt;/pre&gt;</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  &lt;p&gt;</span>","<span class=\"c\"> *  Delegate:</span>","<span class=\"c\"> *  &lt;ul&gt;</span>","<span class=\"c\"> *    &lt;li/&gt;controllerViewWillChange : function (from vs.ui.View, to vs.ui.View, controller), Called when the view</span>","<span class=\"c\"> *        changed</span>","<span class=\"c\"> *  &lt;/ul&gt;</span>","<span class=\"c\"> *  &lt;p&gt;</span>","<span class=\"c\"> *  @example</span>","<span class=\"c\"> *  theApplicatioin.layer = new vs.fx.OpacityController (myComp);</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  myComp.layer.push ('APanel', {id: '1', data: {...}});</span>","<span class=\"c\"> *  myComp.layer.push ('APanel', {id: '2', data: {...}});</span>","<span class=\"c\"> *  myComp.layer.push ('APanel', {id: '3', data: {...}});</span>","<span class=\"c\"> *  myComp.layer.push ('APanel', {id: '4', data: {...}});</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  @extends vs.fx.StackController</span>","<span class=\"c\"> * @name vs.fx.OpacityController</span>","<span class=\"c\"> * </span>","<span class=\"c\"> *  @author David Thevenin</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  @constructor</span>","<span class=\"c\"> *   Creates a new vs.ui.View.</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @param {vs.ui.View} owner the View using this Layer [mandatory]</span>","<span class=\"c\"> * @param {String} extension The hole into the vs.ui.View will be inserted. </span>","<span class=\"c\"> *     ['children' by default]</span>","<span class=\"c\"> */</span>","<span class=\"k\">function</span> OpacityController <span class=\"k\">(</span>owner<span class=\"k\">,</span> extension<span class=\"k\">)</span>","<span class=\"k\">{</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>parent <span class=\"k\">=</span> StackController<span class=\"k\">;</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>parent <span class=\"k\">(</span>owner<span class=\"k\">,</span> extension<span class=\"k\">);</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>constructor <span class=\"k\">=</span> OpacityController<span class=\"k\">;</span>","","  <span class=\"k\">this</span><span class=\"k\">.</span>animationDuration <span class=\"k\">=</span> OpacityController<span class=\"k\">.</span>ANIMATION_DURATION<span class=\"k\">;</span>","<span class=\"k\">}</span>","","<span class=\"c\">/** @private */</span>","OpacityController<span class=\"k\">.</span>_opacity_animation <span class=\"k\">=</span> <span class=\"k\">new</span> OpacityAnimation <span class=\"k\">(</span><span class=\"s\">1</span><span class=\"k\">);</span>","OpacityController<span class=\"k\">.</span>_opacity_animation<span class=\"k\">.</span>init <span class=\"k\">();</span>","OpacityController<span class=\"k\">.</span>_opacity_animation<span class=\"k\">.</span>durations <span class=\"k\">=</span> <span class=\"s\">\"0.2s\"</span><span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * The duration of the animation between two views</span>","<span class=\"c\"> * @name vs.fx.OpacityController.ANIMATION_DURATION</span>","<span class=\"c\"> */</span>","OpacityController<span class=\"k\">.</span>ANIMATION_DURATION <span class=\"k\">=</span> <span class=\"s\">500</span><span class=\"k\">;</span>","","OpacityController<span class=\"k\">.</span>prototype <span class=\"k\">=</span> <span class=\"k\">{</span>","","<span class=\"c\">/********************************************************************</span>","<span class=\"c\">                  protected members declarations</span>","<span class=\"c\">********************************************************************/</span>","","<span class=\"c\">/********************************************************************</span>","","<span class=\"c\">********************************************************************/</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   *  Add a child component to the Slider Manager</span>","<span class=\"c\">   *  &lt;p&gt;</span>","<span class=\"c\">   *  The component must be a graphic component (vs.ui.View).</span>","<span class=\"c\">   *  It will be instantiated, init and added automaticaly</span>","<span class=\"c\">   *  &lt;p&gt;</span>","<span class=\"c\">   *  The component instantiation is a lazy algorithm. The component will</span>","<span class=\"c\">   *  be instantiated and add into the DOM tree only when it has to be show</span>","<span class=\"c\">   *  to the user.</span>","<span class=\"c\">   *  &lt;p&gt;</span>","<span class=\"c\">   *  @example</span>","<span class=\"c\">   *  var myComp = new MyComp (conf);</span>","<span class=\"c\">   *  myComp.layer = new vs.fx.StackController (myComp, 'children');</span>","<span class=\"c\">   *  myComp.layer.push ('AComponent1', data1);</span>","<span class=\"c\">   *  myComp.layer.push ('AComponent1', data2);</span>","<span class=\"c\">   *  myComp.layer.push ('AComponent2', data3);</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.fx.OpacityController#push</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @param {vs.ui.View | String} comp The GUI component or the component</span>","<span class=\"c\">   *     name to instanciate   </span>","<span class=\"c\">   * @param {Object} config Configuration structure need to build the component.</span>","<span class=\"c\">   * @param {Array} bindings Bindings configuration [[spec, observer, method], ...]</span>","<span class=\"c\">   */</span>","  push <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>comp<span class=\"k\">,</span> data<span class=\"k\">,</span> bindings<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>comp<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    ","    <span class=\"k\">if</span> <span class=\"k\">(!</span>util<span class=\"k\">.</span>isString <span class=\"k\">(</span>comp<span class=\"k\">))</span>","    <span class=\"k\">{</span>","      <span class=\"k\">var</span> index <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_states_array<span class=\"k\">.</span>length<span class=\"k\">;</span>","      comp<span class=\"k\">.</span>position <span class=\"k\">=</span> <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">];</span>","      comp<span class=\"k\">.</span>setStyle <span class=\"k\">(</span><span class=\"s\">'z-index'</span><span class=\"k\">,</span> <span class=\"s\">1000</span> <span class=\"k\">-</span> index<span class=\"k\">);</span>","    <span class=\"k\">}</span>","    StackController<span class=\"k\">.</span>prototype<span class=\"k\">.</span>push<span class=\"k\">.</span>call <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> comp<span class=\"k\">,</span> data<span class=\"k\">,</span> bindings<span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","<span class=\"c\">/*********************************************************</span>","<span class=\"c\"> *                  Event management</span>","<span class=\"c\"> *********************************************************/</span>","  <span class=\"c\">/**</span>","<span class=\"c\">   *  Private method use by the fsm to cross a transition.</span>","<span class=\"c\">   *  @note for the moment only one ouput lexem can be generation when</span>","<span class=\"c\">   *  crossing a transition</span>","<span class=\"c\">   * @private</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.fx.OpacityController#goTo</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @param {String} id_sate the id of target state.</span>","<span class=\"c\">   * @param {String} output</span>","<span class=\"c\">   * @param {Object} event the event</span>","<span class=\"c\">   */</span>","  goTo <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>state_id<span class=\"k\">,</span> output<span class=\"k\">,</span> event<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">var</span> state_to<span class=\"k\">,</span> index <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_states_array<span class=\"k\">.</span>indexOf <span class=\"k\">(</span>state_id<span class=\"k\">),</span> ","      state_from <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_list_of_state <span class=\"k\">[</span><span class=\"k\">this</span><span class=\"k\">.</span>_current_state<span class=\"k\">];</span>","    <span class=\"c\">// manage output</span>","    <span class=\"c\">// TODO WARNING</span>","    StackController<span class=\"k\">.</span>prototype<span class=\"k\">.</span>goTo<span class=\"k\">.</span>call <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> state_id<span class=\"k\">,</span> output<span class=\"k\">,</span> event<span class=\"k\">);</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>state_id<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","","<span class=\"c\">//    this.owner.animationDuration = this._animation_duration;</span>","","    state_to <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_list_of_state <span class=\"k\">[</span><span class=\"k\">this</span><span class=\"k\">.</span>_current_state<span class=\"k\">];</span>","    state_to<span class=\"k\">.</span>comp<span class=\"k\">.</span>setStyle <span class=\"k\">(</span><span class=\"s\">'position'</span><span class=\"k\">,</span> <span class=\"s\">'absolute'</span><span class=\"k\">);</span>","    state_to<span class=\"k\">.</span>comp<span class=\"k\">.</span>position <span class=\"k\">=</span> <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">];</span>","    state_to<span class=\"k\">.</span>comp<span class=\"k\">.</span>setStyle <span class=\"k\">(</span><span class=\"s\">'z-index'</span><span class=\"k\">,</span> <span class=\"s\">1000</span> <span class=\"k\">-</span> index<span class=\"k\">);</span>","        ","    <span class=\"k\">function</span> initState <span class=\"k\">(</span>index<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">var</span> state_id <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_states_array <span class=\"k\">[</span>index<span class=\"k\">],</span>","          state <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_list_of_state <span class=\"k\">[</span>state_id<span class=\"k\">];</span>","      ","      <span class=\"k\">if</span> <span class=\"k\">(!</span>state<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","","      <span class=\"k\">if</span> <span class=\"k\">(!</span>state<span class=\"k\">.</span>comp<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        state<span class=\"k\">.</span>comp <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>owner<span class=\"k\">.</span>createAndAddComponent","          <span class=\"k\">(</span>state<span class=\"k\">.</span>comp_name<span class=\"k\">,</span> state<span class=\"k\">.</span>init_data<span class=\"k\">,</span> state<span class=\"k\">.</span>extension<span class=\"k\">);</span>","          ","        state<span class=\"k\">.</span>comp<span class=\"k\">.</span>configure <span class=\"k\">(</span>state<span class=\"k\">.</span>init_data<span class=\"k\">);</span>","        state<span class=\"k\">.</span>comp<span class=\"k\">.</span>setStyle <span class=\"k\">(</span><span class=\"s\">'position'</span><span class=\"k\">,</span> <span class=\"s\">'absolute'</span><span class=\"k\">);</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>state<span class=\"k\">.</span>comp <span class=\"k\">&amp;&amp;</span> state<span class=\"k\">.</span>comp<span class=\"k\">.</span>propertiesDidChange<span class=\"k\">)</span> ","        <span class=\"k\">{</span> ","          state<span class=\"k\">.</span>comp<span class=\"k\">.</span>propertiesDidChange <span class=\"k\">();</span>","        <span class=\"k\">}</span>","        state<span class=\"k\">.</span>comp<span class=\"k\">.</span>propertyChange <span class=\"k\">();</span>","      <span class=\"k\">}</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>state<span class=\"k\">.</span>view<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        __setPos <span class=\"k\">(</span>state<span class=\"k\">.</span>view<span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">);</span>","      <span class=\"k\">}</span>","      <span class=\"k\">else</span>","      <span class=\"k\">{</span>","        state<span class=\"k\">.</span>comp<span class=\"k\">.</span>position <span class=\"k\">=</span> <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">];</span>","      <span class=\"k\">}</span>","      state<span class=\"k\">.</span>comp<span class=\"k\">.</span>show <span class=\"k\">();</span>","      state<span class=\"k\">.</span>comp<span class=\"k\">.</span>setStyle <span class=\"k\">(</span><span class=\"s\">'z-index'</span><span class=\"k\">,</span> <span class=\"s\">1000</span> <span class=\"k\">-</span> index<span class=\"k\">);</span>","    <span class=\"k\">}</span>","    ","    <span class=\"c\">/// left/top component </span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>index <span class=\"k\">&gt;</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">{</span> initState<span class=\"k\">.</span>call <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> index <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">);</span> <span class=\"k\">}</span>","","    <span class=\"c\">/// right/bottom component </span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>index <span class=\"k\">&lt;</span> <span class=\"k\">this</span><span class=\"k\">.</span>_states_array<span class=\"k\">.</span>length <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">)</span>","    <span class=\"k\">{</span> initState<span class=\"k\">.</span>call <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> index <span class=\"k\">+</span> <span class=\"s\">1</span><span class=\"k\">);</span> <span class=\"k\">}</span>","     ","    <span class=\"k\">if</span> <span class=\"k\">(</span>event <span class=\"k\">&amp;&amp;</span> event<span class=\"k\">.</span>on <span class=\"k\">===</span> StackController<span class=\"k\">.</span>NEXT <span class=\"k\">&amp;&amp;</span> state_from<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      OpacityController<span class=\"k\">.</span>_opacity_animation<span class=\"k\">.</span>value <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","      OpacityController<span class=\"k\">.</span>_opacity_animation<span class=\"k\">.</span>process <span class=\"k\">(</span>state_from<span class=\"k\">.</span>comp<span class=\"k\">);</span>","    <span class=\"k\">}</span>","    <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>event <span class=\"k\">&amp;&amp;</span> event<span class=\"k\">.</span>on <span class=\"k\">===</span> StackController<span class=\"k\">.</span>PRED <span class=\"k\">&amp;&amp;</span> state_to<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      OpacityController<span class=\"k\">.</span>_opacity_animation<span class=\"k\">.</span>value <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">;</span>","      OpacityController<span class=\"k\">.</span>_opacity_animation<span class=\"k\">.</span>process <span class=\"k\">(</span>state_to<span class=\"k\">.</span>comp<span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">if</span> <span class=\"k\">(</span>output <span class=\"k\">&amp;&amp;</span> <span class=\"k\">this</span><span class=\"k\">.</span>_output_action <span class=\"k\">[</span>output<span class=\"k\">])</span>","    <span class=\"k\">{</span>","      <span class=\"k\">var</span> clb <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_output_action <span class=\"k\">[</span>output<span class=\"k\">];</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>clb <span class=\"k\">instanceof</span> Function<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        clb<span class=\"k\">.</span>call <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>owner<span class=\"k\">,</span> event<span class=\"k\">);</span>","      <span class=\"k\">}</span>","      <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>util<span class=\"k\">.</span>isString <span class=\"k\">(</span>clb<span class=\"k\">))</span>","      <span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>owner <span class=\"k\">[</span><span class=\"k\">this</span><span class=\"k\">.</span>_output_action <span class=\"k\">[</span>output<span class=\"k\">]]</span> <span class=\"k\">(</span>event<span class=\"k\">);</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","util<span class=\"k\">.</span>extendClass <span class=\"k\">(</span>OpacityController<span class=\"k\">,</span> StackController<span class=\"k\">);</span>","","<span class=\"c\">/********************************************************************</span>","<span class=\"c\">                  Define class properties</span>","<span class=\"c\">********************************************************************/</span>","","util<span class=\"k\">.</span>defineClassProperty <span class=\"k\">(</span>OpacityController<span class=\"k\">,</span> <span class=\"s\">\"animationDuration\"</span><span class=\"k\">,</span> <span class=\"k\">{</span>","  <span class=\"c\">/** </span>","<span class=\"c\">   * Set the animation/transition temporisation (in millisecond)</span>","<span class=\"c\">   * @name vs.fx.OpacityController#animationDuration </span>","<span class=\"c\">   * @type {number}</span>","<span class=\"c\">   */</span> ","  set <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>time<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>time<span class=\"k\">)</span> <span class=\"k\">{</span> time <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>util<span class=\"k\">.</span>isNumber <span class=\"k\">(</span>time<span class=\"k\">))</span> <span class=\"k\">{</span> <span class=\"k\">return</span> <span class=\"k\">}</span><span class=\"k\">;</span>","    ","    <span class=\"k\">this</span><span class=\"k\">.</span>_animation_duration <span class=\"k\">=</span> time<span class=\"k\">;</span>","    OpacityController<span class=\"k\">.</span>_opacity_animation<span class=\"k\">.</span>durations <span class=\"k\">=</span> time <span class=\"k\">/</span> <span class=\"s\">1000</span> <span class=\"k\">+</span> <span class=\"s\">\"s\"</span><span class=\"k\">;</span>","  <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">);</span>","","<span class=\"c\">/********************************************************************</span>","<span class=\"c\">                      Export</span>","<span class=\"c\">*********************************************************************/</span>","<span class=\"c\">/** @private */</span>","fx<span class=\"k\">.</span>OpacityController <span class=\"k\">=</span> OpacityController<span class=\"k\">;</span>","","<span class=\"k\">}</span><span class=\"k\">)(</span>window<span class=\"k\">);</span>"];
_$jscoverage['js/vs_fx.js'][19]++;
(function (window, undefined) {
  _$jscoverage['js/vs_fx.js'][21]++;
  var document = window.document;
  _$jscoverage['js/vs_fx.js'][45]++;
  var vs = window.vs, util = vs.util, core = vs.core, ui = vs.ui, fx = vs.fx, setElementTransform = util.setElementTransform, getElementTransform = util.getElementTransform, SUPPORT_3D_TRANSFORM = vs.SUPPORT_3D_TRANSFORM;
  _$jscoverage['js/vs_fx.js'][71]++;
  if ((util.vsTestStyle.webkitTransform !== undefined)) {
    _$jscoverage['js/vs_fx.js'][73]++;
    var ANIMATION_DURATION = "-webkit-animation-duration";
    _$jscoverage['js/vs_fx.js'][74]++;
    var ANIMATION_DELAY = "-webkit-animation-delay";
    _$jscoverage['js/vs_fx.js'][75]++;
    var ANIMATION_NAME = "-webkit-animation-name";
    _$jscoverage['js/vs_fx.js'][76]++;
    var ANIMATION_END = "webkitAnimationEnd";
    _$jscoverage['js/vs_fx.js'][77]++;
    var ANIMATION_TIMING_FUNC = "-webkit-animation-timing-function";
    _$jscoverage['js/vs_fx.js'][79]++;
    var TRANSITION_DURATION = "-webkit-transition-duration";
    _$jscoverage['js/vs_fx.js'][80]++;
    var TRANSITION_DELAY = "-webkit-transition-delay";
    _$jscoverage['js/vs_fx.js'][81]++;
    var TRANSITION_END = "webkitTransitionEnd";
    _$jscoverage['js/vs_fx.js'][82]++;
    var TRANSITION_TIMING_FUNC = "-webkit-transition-timing-function";
    _$jscoverage['js/vs_fx.js'][83]++;
    var TRANSITION_PROPERTY = "-webkit-transition-property";
    _$jscoverage['js/vs_fx.js'][85]++;
    var TRANSFORM_ORIGIN = "-webkit-transform-origin";
    _$jscoverage['js/vs_fx.js'][86]++;
    var ITERATION_COUNT = "-webkit-animation-iteration-count";
    _$jscoverage['js/vs_fx.js'][87]++;
    var TRANSFORM = "-webkit-transform";
    _$jscoverage['js/vs_fx.js'][88]++;
    var KEY_FRAMES = "-webkit-keyframes";
  }
  else {
    _$jscoverage['js/vs_fx.js'][90]++;
    if ((util.vsTestStyle.msTransform !== undefined)) {
      _$jscoverage['js/vs_fx.js'][92]++;
      var ANIMATION_DURATION = "-ms-animation-duration";
      _$jscoverage['js/vs_fx.js'][93]++;
      var ANIMATION_DELAY = "-ms-animation-delay";
      _$jscoverage['js/vs_fx.js'][94]++;
      var ANIMATION_NAME = "-ms-animation-name";
      _$jscoverage['js/vs_fx.js'][95]++;
      var ANIMATION_END = "msAnimationEnd";
      _$jscoverage['js/vs_fx.js'][96]++;
      var ANIMATION_TIMING_FUNC = "-ms-animation-timing-function";
      _$jscoverage['js/vs_fx.js'][98]++;
      var TRANSITION_DURATION = "-ms-transition-duration";
      _$jscoverage['js/vs_fx.js'][99]++;
      var TRANSITION_DELAY = "-ms-transition-delay";
      _$jscoverage['js/vs_fx.js'][100]++;
      var TRANSITION_END = "msTransitionEnd";
      _$jscoverage['js/vs_fx.js'][101]++;
      var TRANSITION_TIMING_FUNC = "-ms-transition-timing-function";
      _$jscoverage['js/vs_fx.js'][102]++;
      var TRANSITION_PROPERTY = "-ms-transition-property";
      _$jscoverage['js/vs_fx.js'][104]++;
      var TRANSFORM_ORIGIN = "-ms-transform-origin";
      _$jscoverage['js/vs_fx.js'][105]++;
      var ITERATION_COUNT = "-ms-animation-iteration-count";
      _$jscoverage['js/vs_fx.js'][106]++;
      var TRANSFORM = "-ms-transform";
      _$jscoverage['js/vs_fx.js'][107]++;
      var KEY_FRAMES = "-ms-keyframes";
    }
    else {
      _$jscoverage['js/vs_fx.js'][111]++;
      var ANIMATION_DURATION = "animation-duration";
      _$jscoverage['js/vs_fx.js'][112]++;
      var ANIMATION_DELAY = "animation-delay";
      _$jscoverage['js/vs_fx.js'][113]++;
      var ANIMATION_NAME = "animation-name";
      _$jscoverage['js/vs_fx.js'][114]++;
      var ANIMATION_END = "animationEnd";
      _$jscoverage['js/vs_fx.js'][115]++;
      var ANIMATION_TIMING_FUNC = "animation-timing-function";
      _$jscoverage['js/vs_fx.js'][117]++;
      var TRANSITION_DURATION = "transition-duration";
      _$jscoverage['js/vs_fx.js'][118]++;
      var TRANSITION_DELAY = "transition-delay";
      _$jscoverage['js/vs_fx.js'][119]++;
      var TRANSITION_END = "transitionEnd";
      _$jscoverage['js/vs_fx.js'][120]++;
      var TRANSITION_TIMING_FUNC = "transition-timing-function";
      _$jscoverage['js/vs_fx.js'][121]++;
      var TRANSITION_PROPERTY = "transition-property";
      _$jscoverage['js/vs_fx.js'][123]++;
      var TRANSFORM_ORIGIN = "transform-origin";
      _$jscoverage['js/vs_fx.js'][124]++;
      var ITERATION_COUNT = "animation-iteration-count";
      _$jscoverage['js/vs_fx.js'][125]++;
      var TRANSFORM = "transform";
      _$jscoverage['js/vs_fx.js'][126]++;
      var KEY_FRAMES = "keyframes";
    }
  }
  _$jscoverage['js/vs_fx.js'][133]++;
  var AnimationWidthRegExp = new RegExp(/\$width/g);
  _$jscoverage['js/vs_fx.js'][138]++;
  var AnimationHeightRegExp = new RegExp(/\$height/g);
  _$jscoverage['js/vs_fx.js'][143]++;
  var AnimationXRegExp = new RegExp(/\$x/g);
  _$jscoverage['js/vs_fx.js'][148]++;
  var AnimationYRegExp = new RegExp(/\$y/g);
  _$jscoverage['js/vs_fx.js'][153]++;
  var AnimationVariableRegExp = new RegExp(/\$\{([\w]+)\}/g);
  _$jscoverage['js/vs_fx.js'][160]++;
  function cancelAnimation(anim_id) {
    _$jscoverage['js/vs_fx.js'][162]++;
    if ((! anim_id)) {
      _$jscoverage['js/vs_fx.js'][162]++;
      return false;
    }
    _$jscoverage['js/vs_fx.js'][163]++;
    var anim_name, cssAnimation, anim_id = anim_id, data;
    _$jscoverage['js/vs_fx.js'][165]++;
    data = Animation.__css_animations[anim_id];
    _$jscoverage['js/vs_fx.js'][166]++;
    if ((data && (data.length === 2))) {
      _$jscoverage['js/vs_fx.js'][168]++;
      if (((! data[1]) || (! data[1].getStyle) || (! data[0]))) {
        _$jscoverage['js/vs_fx.js'][168]++;
        return false;
      }
      _$jscoverage['js/vs_fx.js'][170]++;
      anim_name = data[1].getStyle(ANIMATION_NAME);
      _$jscoverage['js/vs_fx.js'][171]++;
      if ((! anim_name)) {
        _$jscoverage['js/vs_fx.js'][171]++;
        return false;
      }
      _$jscoverage['js/vs_fx.js'][173]++;
      anim_name = anim_name.replace(anim_id, "");
      _$jscoverage['js/vs_fx.js'][174]++;
      data[1].setStyle(ANIMATION_NAME, anim_name);
      _$jscoverage['js/vs_fx.js'][176]++;
      try {
        _$jscoverage['js/vs_fx.js'][177]++;
        document.getElementsByTagName("head")[0].removeChild(data[0]);
      }
      catch (e) {
        _$jscoverage['js/vs_fx.js'][181]++;
        console.error(e);
        _$jscoverage['js/vs_fx.js'][182]++;
        return false;
      }
      _$jscoverage['js/vs_fx.js'][184]++;
      (delete Animation.__css_animations[anim_id]);
    }
    else {
      _$jscoverage['js/vs_fx.js'][186]++;
      return false;
    }
    _$jscoverage['js/vs_fx.js'][188]++;
    return true;
}
  _$jscoverage['js/vs_fx.js'][201]++;
  var procesAnimation = (function (comp, animation, clb, ctx) {
  _$jscoverage['js/vs_fx.js'][203]++;
  if (((! animation) || (! comp) || (! comp.view))) {
    _$jscoverage['js/vs_fx.js'][205]++;
    console.error("procesAnimation: invalid component parameter!");
    _$jscoverage['js/vs_fx.js'][206]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][209]++;
  function isComplexAnimation() {
    _$jscoverage['js/vs_fx.js'][211]++;
    if (animation.keyFrames["0%"]) {
      _$jscoverage['js/vs_fx.js'][211]++;
      return true;
    }
    _$jscoverage['js/vs_fx.js'][212]++;
    return false;
}
  _$jscoverage['js/vs_fx.js'][215]++;
  var initWithParameters, parseValue, applySimpleAnimation, applyStyleTo, runComplexAnimation, applyComplexAnimation, cssAnimation, anim_id = core.createId(), isComplex = isComplexAnimation();
  _$jscoverage['js/vs_fx.js'][220]++;
  initWithParameters = (function () {
  _$jscoverage['js/vs_fx.js'][222]++;
  var property;
  _$jscoverage['js/vs_fx.js'][223]++;
  if (isComplex) {
    _$jscoverage['js/vs_fx.js'][224]++;
    property = ANIMATION_DURATION;
  }
  else {
    _$jscoverage['js/vs_fx.js'][225]++;
    property = TRANSITION_DURATION;
  }
  _$jscoverage['js/vs_fx.js'][227]++;
  if ((util.isArray(animation.origin) && (animation.origin.length === 2))) {
    _$jscoverage['js/vs_fx.js'][229]++;
    var value = (animation.origin[0] + "% " + animation.origin[1] + "%");
    _$jscoverage['js/vs_fx.js'][230]++;
    comp.setStyle(TRANSFORM_ORIGIN, value);
  }
  _$jscoverage['js/vs_fx.js'][233]++;
  if (util.isString(animation.durations)) {
    _$jscoverage['js/vs_fx.js'][235]++;
    comp.setStyle(property, animation.durations);
  }
  else {
    _$jscoverage['js/vs_fx.js'][237]++;
    if (util.isArray(animation.durations)) {
      _$jscoverage['js/vs_fx.js'][239]++;
      comp.setStyle(property, animation.durations.join(", "));
    }
    else {
      _$jscoverage['js/vs_fx.js'][243]++;
      comp.setStyle(property, Animation.DEFAULT_DURATION);
    }
  }
  _$jscoverage['js/vs_fx.js'][246]++;
  if (isComplex) {
    _$jscoverage['js/vs_fx.js'][246]++;
    property = ANIMATION_DELAY;
  }
  else {
    _$jscoverage['js/vs_fx.js'][247]++;
    property = TRANSITION_DELAY;
  }
  _$jscoverage['js/vs_fx.js'][249]++;
  if (util.isNumber(animation.delay)) {
    _$jscoverage['js/vs_fx.js'][251]++;
    comp.setStyle(property, (animation.delay + "ms"));
  }
  else {
    _$jscoverage['js/vs_fx.js'][254]++;
    comp.setStyle(property, "0");
  }
  _$jscoverage['js/vs_fx.js'][256]++;
  if (isComplex) {
    _$jscoverage['js/vs_fx.js'][256]++;
    property = ANIMATION_TIMING_FUNC;
  }
  else {
    _$jscoverage['js/vs_fx.js'][257]++;
    property = TRANSITION_TIMING_FUNC;
  }
  _$jscoverage['js/vs_fx.js'][259]++;
  if (util.isString(animation.timings)) {
    _$jscoverage['js/vs_fx.js'][261]++;
    comp.setStyle(property, animation.timings);
  }
  else {
    _$jscoverage['js/vs_fx.js'][263]++;
    if (util.isArray(animation.timings)) {
      _$jscoverage['js/vs_fx.js'][265]++;
      comp.setStyle(property, animation.timings.join(", "));
    }
    else {
      _$jscoverage['js/vs_fx.js'][269]++;
      comp.setStyle(property, Animation.EASE);
    }
  }
  _$jscoverage['js/vs_fx.js'][272]++;
  if (isComplex) {
    _$jscoverage['js/vs_fx.js'][274]++;
    if ((animation.iterationCount === "infinite")) {
      _$jscoverage['js/vs_fx.js'][276]++;
      comp.setStyle(ITERATION_COUNT, "infinite");
    }
    else {
      _$jscoverage['js/vs_fx.js'][278]++;
      if (((! animation.iterationCount) || (! util.isNumber(animation.iterationCount)))) {
        _$jscoverage['js/vs_fx.js'][281]++;
        comp.setStyle(ITERATION_COUNT, "1");
      }
      else {
        _$jscoverage['js/vs_fx.js'][285]++;
        comp.setStyle(ITERATION_COUNT, animation.iterationCount);
      }
    }
  }
});
  _$jscoverage['js/vs_fx.js'][290]++;
  parseValue = (function (v, data) {
  _$jscoverage['js/vs_fx.js'][292]++;
  var matches, i, props = [], prop;
  _$jscoverage['js/vs_fx.js'][294]++;
  if (util.isNumber(v)) {
    _$jscoverage['js/vs_fx.js'][294]++;
    return v;
  }
  _$jscoverage['js/vs_fx.js'][296]++;
  if (util.isString(v)) {
    _$jscoverage['js/vs_fx.js'][298]++;
    v = v.replace(AnimationWidthRegExp, (comp.size[0] + "px"));
    _$jscoverage['js/vs_fx.js'][299]++;
    v = v.replace(AnimationHeightRegExp, (comp.size[1] + "px"));
    _$jscoverage['js/vs_fx.js'][300]++;
    v = v.replace(AnimationXRegExp, (comp.position[0] + "px"));
    _$jscoverage['js/vs_fx.js'][301]++;
    v = v.replace(AnimationYRegExp, (comp.position[1] + "px"));
    _$jscoverage['js/vs_fx.js'][303]++;
    var matches = AnimationVariableRegExp.exec(v);
    _$jscoverage['js/vs_fx.js'][304]++;
    while ((matches && (matches.length === 2))) {
      _$jscoverage['js/vs_fx.js'][306]++;
      props.push(matches[1]);
      _$jscoverage['js/vs_fx.js'][307]++;
      matches = AnimationVariableRegExp.exec(v);
}
    _$jscoverage['js/vs_fx.js'][309]++;
    for (var i = 0; (i < props.length); (i++)) {
      _$jscoverage['js/vs_fx.js'][311]++;
      prop = props[i];
      _$jscoverage['js/vs_fx.js'][312]++;
      if (((typeof data[prop]) !== "undefined")) {
        _$jscoverage['js/vs_fx.js'][313]++;
        v = v.replace(("${" + prop + "}"), data[prop]);
      }
      else {
        _$jscoverage['js/vs_fx.js'][314]++;
        if (((typeof animation[prop]) !== "undefined")) {
          _$jscoverage['js/vs_fx.js'][315]++;
          v = v.replace(("${" + prop + "}"), animation[prop]);
        }
      }
}
    _$jscoverage['js/vs_fx.js'][318]++;
    return v;
  }
  _$jscoverage['js/vs_fx.js'][321]++;
  console.warn(("vs.fx.Animation._parseValue. Unknown value's type: " + v));
  _$jscoverage['js/vs_fx.js'][323]++;
  return 0;
});
  _$jscoverage['js/vs_fx.js'][326]++;
  applySimpleAnimation = (function () {
  _$jscoverage['js/vs_fx.js'][328]++;
  initWithParameters();
  _$jscoverage['js/vs_fx.js'][329]++;
  var callback, i, self = this, dur;
  _$jscoverage['js/vs_fx.js'][331]++;
  callback = (function (event) {
  _$jscoverage['js/vs_fx.js'][334]++;
  if ((event.currentTarget !== comp.view)) {
    _$jscoverage['js/vs_fx.js'][334]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][336]++;
  comp.view.removeEventListener(TRANSITION_END, callback, false);
  _$jscoverage['js/vs_fx.js'][339]++;
  comp.view.style.removeProperty(TRANSITION_DURATION);
  _$jscoverage['js/vs_fx.js'][340]++;
  comp.view.style.removeProperty(TRANSITION_DELAY);
  _$jscoverage['js/vs_fx.js'][342]++;
  if ((animation.delegate && animation.delegate.taskDidEnd)) {
    _$jscoverage['js/vs_fx.js'][343]++;
    animation.delegate.taskDidEnd(animation);
  }
  _$jscoverage['js/vs_fx.js'][345]++;
  if (clb) {
    _$jscoverage['js/vs_fx.js'][345]++;
    clb.call((ctx? ctx: self));
  }
});
  _$jscoverage['js/vs_fx.js'][350]++;
  dur = parseFloat(comp.view.style[TRANSITION_DURATION]);
  _$jscoverage['js/vs_fx.js'][351]++;
  if ((dur === 0)) {
    _$jscoverage['js/vs_fx.js'][351]++;
    comp.view.style[TRANSITION_DURATION] = "0.0001s";
  }
  _$jscoverage['js/vs_fx.js'][353]++;
  comp.view.addEventListener(TRANSITION_END, callback, false);
  _$jscoverage['js/vs_fx.js'][355]++;
  applyStyleTo();
});
  _$jscoverage['js/vs_fx.js'][358]++;
  applyStyleTo = (function () {
  _$jscoverage['js/vs_fx.js'][360]++;
  var data = (animation.keyFrames["100%"]? animation.keyFrames["100%"]: animation), transform = "", property, properties = [], value;
  _$jscoverage['js/vs_fx.js'][364]++;
  if (data) {
    _$jscoverage['js/vs_fx.js'][364]++;
    for (i = 0; (i < animation.properties.length); (i++)) {
      _$jscoverage['js/vs_fx.js'][366]++;
      property = animation.properties[i];
      _$jscoverage['js/vs_fx.js'][367]++;
      value = parseValue(animation.values[i], data);
      _$jscoverage['js/vs_fx.js'][368]++;
      if ((property === "rotate")) {
        _$jscoverage['js/vs_fx.js'][369]++;
        transform += ("rotate(" + value + ") ");
        _$jscoverage['js/vs_fx.js'][369]++;
        property = TRANSFORM;
      }
      else {
        _$jscoverage['js/vs_fx.js'][370]++;
        if ((property === "skew")) {
          _$jscoverage['js/vs_fx.js'][371]++;
          transform += ("skew(" + value + ") ");
          _$jscoverage['js/vs_fx.js'][371]++;
          property = TRANSFORM;
        }
        else {
          _$jscoverage['js/vs_fx.js'][372]++;
          if ((SUPPORT_3D_TRANSFORM && (property === "translate"))) {
            _$jscoverage['js/vs_fx.js'][373]++;
            transform += ("translate3d(" + value + ") ");
            _$jscoverage['js/vs_fx.js'][373]++;
            property = TRANSFORM;
          }
          else {
            _$jscoverage['js/vs_fx.js'][374]++;
            if ((property === "translate")) {
              _$jscoverage['js/vs_fx.js'][375]++;
              transform += ("translate(" + value + ") ");
              _$jscoverage['js/vs_fx.js'][375]++;
              property = TRANSFORM;
            }
            else {
              _$jscoverage['js/vs_fx.js'][376]++;
              if ((property === "translateX")) {
                _$jscoverage['js/vs_fx.js'][377]++;
                transform += ("translateX(" + value + ") ");
                _$jscoverage['js/vs_fx.js'][377]++;
                property = TRANSFORM;
              }
              else {
                _$jscoverage['js/vs_fx.js'][378]++;
                if ((property === "translateY")) {
                  _$jscoverage['js/vs_fx.js'][379]++;
                  transform += ("translateY(" + value + ") ");
                  _$jscoverage['js/vs_fx.js'][379]++;
                  property = TRANSFORM;
                }
                else {
                  _$jscoverage['js/vs_fx.js'][380]++;
                  if ((property === "rotateX")) {
                    _$jscoverage['js/vs_fx.js'][381]++;
                    transform += ("rotateX(" + value + ") ");
                    _$jscoverage['js/vs_fx.js'][381]++;
                    property = TRANSFORM;
                  }
                  else {
                    _$jscoverage['js/vs_fx.js'][382]++;
                    if ((property === "rotateY")) {
                      _$jscoverage['js/vs_fx.js'][383]++;
                      transform += ("rotateY(" + value + ") ");
                      _$jscoverage['js/vs_fx.js'][383]++;
                      property = TRANSFORM;
                    }
                    else {
                      _$jscoverage['js/vs_fx.js'][384]++;
                      if ((property === "scale")) {
                        _$jscoverage['js/vs_fx.js'][385]++;
                        transform += ("scale(" + value + ") ");
                        _$jscoverage['js/vs_fx.js'][385]++;
                        property = TRANSFORM;
                      }
                      else {
                        _$jscoverage['js/vs_fx.js'][387]++;
                        comp.setStyle(property, value);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      _$jscoverage['js/vs_fx.js'][389]++;
      if ((properties.indexOf(property) == -1)) {
        _$jscoverage['js/vs_fx.js'][389]++;
        properties.push(property);
      }
}
  }
  _$jscoverage['js/vs_fx.js'][391]++;
  if (transform) {
    _$jscoverage['js/vs_fx.js'][393]++;
    setElementTransform(comp.view, transform);
  }
  _$jscoverage['js/vs_fx.js'][395]++;
  comp.setStyle(TRANSITION_PROPERTY, properties.join(","));
});
  _$jscoverage['js/vs_fx.js'][398]++;
  runComplexAnimation = (function () {
  _$jscoverage['js/vs_fx.js'][400]++;
  initWithParameters();
  _$jscoverage['js/vs_fx.js'][402]++;
  var i, callback, value, anim_name, dur, callback = (function (event) {
  _$jscoverage['js/vs_fx.js'][407]++;
  if ((event.currentTarget !== comp.view)) {
    _$jscoverage['js/vs_fx.js'][407]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][409]++;
  comp.view.removeEventListener(ANIMATION_END, callback, false);
  _$jscoverage['js/vs_fx.js'][412]++;
  if (isComplex) {
    _$jscoverage['js/vs_fx.js'][412]++;
    applyStyleTo();
  }
  _$jscoverage['js/vs_fx.js'][415]++;
  comp.view.style.removeProperty(ANIMATION_DURATION);
  _$jscoverage['js/vs_fx.js'][416]++;
  comp.view.style.removeProperty(ANIMATION_DELAY);
  _$jscoverage['js/vs_fx.js'][419]++;
  anim_name = comp.getStyle(ANIMATION_NAME);
  _$jscoverage['js/vs_fx.js'][420]++;
  if (anim_name) {
    _$jscoverage['js/vs_fx.js'][422]++;
    anim_name = anim_name.replace(anim_id, "");
    _$jscoverage['js/vs_fx.js'][423]++;
    comp.setStyle(ANIMATION_NAME, anim_name);
  }
  _$jscoverage['js/vs_fx.js'][426]++;
  try {
    _$jscoverage['js/vs_fx.js'][428]++;
    data = Animation.__css_animations[anim_id];
    _$jscoverage['js/vs_fx.js'][429]++;
    if ((data && (data.length === 2))) {
      _$jscoverage['js/vs_fx.js'][431]++;
      document.getElementsByTagName("head")[0].removeChild(data[0]);
      _$jscoverage['js/vs_fx.js'][432]++;
      (delete Animation.__css_animations[anim_id]);
    }
  }
  catch (e) {
    _$jscoverage['js/vs_fx.js'][437]++;
    console.error(e);
    _$jscoverage['js/vs_fx.js'][438]++;
    return false;
  }
  _$jscoverage['js/vs_fx.js'][441]++;
  if ((animation.delegate && animation.delegate.taskDidStop)) {
    _$jscoverage['js/vs_fx.js'][442]++;
    animation.delegate.taskDidEnd(animation);
  }
  _$jscoverage['js/vs_fx.js'][444]++;
  if (clb) {
    _$jscoverage['js/vs_fx.js'][444]++;
    clb.call((ctx? ctx: self));
  }
});
  _$jscoverage['js/vs_fx.js'][449]++;
  dur = parseFloat(comp.view.style[ANIMATION_DURATION]);
  _$jscoverage['js/vs_fx.js'][450]++;
  if ((dur === 0)) {
    _$jscoverage['js/vs_fx.js'][450]++;
    comp.view.style[ANIMATION_DURATION] = "0.0001s";
  }
  _$jscoverage['js/vs_fx.js'][452]++;
  comp.view.addEventListener(ANIMATION_END, callback, false);
  _$jscoverage['js/vs_fx.js'][453]++;
  anim_name = comp.getStyle(ANIMATION_NAME);
  _$jscoverage['js/vs_fx.js'][455]++;
  if ((! anim_name)) {
    _$jscoverage['js/vs_fx.js'][455]++;
    anim_name = anim_id;
  }
  else {
    _$jscoverage['js/vs_fx.js'][456]++;
    anim_name += (", " + anim_id);
  }
  _$jscoverage['js/vs_fx.js'][458]++;
  comp.setStyle(ANIMATION_NAME, anim_name);
});
  _$jscoverage['js/vs_fx.js'][461]++;
  applyComplexAnimation = (function () {
  _$jscoverage['js/vs_fx.js'][463]++;
  var data, key, style, i, property, transform, value, cssAnimation = document.createElement("style");
  _$jscoverage['js/vs_fx.js'][465]++;
  cssAnimation.type = "text/css";
  _$jscoverage['js/vs_fx.js'][467]++;
  var rules_str = "";
  _$jscoverage['js/vs_fx.js'][468]++;
  for (key in animation.keyFrames) {
    _$jscoverage['js/vs_fx.js'][470]++;
    transform = "";
    _$jscoverage['js/vs_fx.js'][471]++;
    data = animation.keyFrames[key];
    _$jscoverage['js/vs_fx.js'][472]++;
    style = "";
    _$jscoverage['js/vs_fx.js'][473]++;
    if (util.isArray(data)) {
      _$jscoverage['js/vs_fx.js'][475]++;
      for (var i = 0; (i < data.length); (i++)) {
        _$jscoverage['js/vs_fx.js'][477]++;
        value = data[i];
        _$jscoverage['js/vs_fx.js'][478]++;
        if (((value == null) || ((typeof value) == "undefined"))) {
          _$jscoverage['js/vs_fx.js'][478]++;
          continue;
        }
        _$jscoverage['js/vs_fx.js'][479]++;
        value = parseValue(value, animation);
        _$jscoverage['js/vs_fx.js'][480]++;
        property = animation.properties[i];
        _$jscoverage['js/vs_fx.js'][481]++;
        if ((! property)) {
          _$jscoverage['js/vs_fx.js'][481]++;
          continue;
        }
        _$jscoverage['js/vs_fx.js'][482]++;
        if ((property === "rotate")) {
          _$jscoverage['js/vs_fx.js'][483]++;
          transform += ("rotate(" + value + ") ");
        }
        else {
          _$jscoverage['js/vs_fx.js'][484]++;
          if ((property === "skew")) {
            _$jscoverage['js/vs_fx.js'][485]++;
            transform += ("skew(" + value + ") ");
          }
          else {
            _$jscoverage['js/vs_fx.js'][486]++;
            if ((SUPPORT_3D_TRANSFORM && (property === "translate"))) {
              _$jscoverage['js/vs_fx.js'][487]++;
              transform += ("translate3d(" + value + ") ");
            }
            else {
              _$jscoverage['js/vs_fx.js'][488]++;
              if ((property === "translate")) {
                _$jscoverage['js/vs_fx.js'][489]++;
                transform += ("translate(" + value + ") ");
              }
              else {
                _$jscoverage['js/vs_fx.js'][490]++;
                if ((property === "translateX")) {
                  _$jscoverage['js/vs_fx.js'][491]++;
                  transform += ("translateX(" + value + ") ");
                }
                else {
                  _$jscoverage['js/vs_fx.js'][492]++;
                  if ((property === "translateY")) {
                    _$jscoverage['js/vs_fx.js'][493]++;
                    transform += ("translateY(" + value + ") ");
                  }
                  else {
                    _$jscoverage['js/vs_fx.js'][494]++;
                    if ((property === "rotateX")) {
                      _$jscoverage['js/vs_fx.js'][495]++;
                      transform += ("rotateX(" + value + ") ");
                    }
                    else {
                      _$jscoverage['js/vs_fx.js'][496]++;
                      if ((property === "rotateY")) {
                        _$jscoverage['js/vs_fx.js'][497]++;
                        transform += ("rotateY(" + value + ") ");
                      }
                      else {
                        _$jscoverage['js/vs_fx.js'][498]++;
                        if ((property === "scale")) {
                          _$jscoverage['js/vs_fx.js'][499]++;
                          transform += ("scale(" + value + ") ");
                        }
                        else {
                          _$jscoverage['js/vs_fx.js'][500]++;
                          if ((property === "perspective")) {
                            _$jscoverage['js/vs_fx.js'][501]++;
                            transform += ("perspective(" + value + ") ");
                          }
                          else {
                            _$jscoverage['js/vs_fx.js'][503]++;
                            style += (property + ":" + value + ";");
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
}
    }
    else {
      _$jscoverage['js/vs_fx.js'][508]++;
      for (i = 0; (i < animation.properties.length); (i++)) {
        _$jscoverage['js/vs_fx.js'][510]++;
        value = parseValue(animation.values[i], data);
        _$jscoverage['js/vs_fx.js'][511]++;
        property = animation.properties[i];
        _$jscoverage['js/vs_fx.js'][512]++;
        if ((! property)) {
          _$jscoverage['js/vs_fx.js'][512]++;
          continue;
        }
        _$jscoverage['js/vs_fx.js'][513]++;
        if ((property === "rotate")) {
          _$jscoverage['js/vs_fx.js'][514]++;
          transform += ("rotate(" + value + ") ");
        }
        else {
          _$jscoverage['js/vs_fx.js'][515]++;
          if ((property === "skew")) {
            _$jscoverage['js/vs_fx.js'][516]++;
            transform += ("skew(" + value + ") ");
          }
          else {
            _$jscoverage['js/vs_fx.js'][517]++;
            if ((SUPPORT_3D_TRANSFORM && (property === "translate"))) {
              _$jscoverage['js/vs_fx.js'][518]++;
              transform += ("translate3d(" + value + ") ");
            }
            else {
              _$jscoverage['js/vs_fx.js'][519]++;
              if ((property === "translate")) {
                _$jscoverage['js/vs_fx.js'][520]++;
                transform += ("translate(" + value + ") ");
              }
              else {
                _$jscoverage['js/vs_fx.js'][521]++;
                if ((property === "translateX")) {
                  _$jscoverage['js/vs_fx.js'][522]++;
                  transform += ("translateX(" + value + ") ");
                }
                else {
                  _$jscoverage['js/vs_fx.js'][523]++;
                  if ((property === "translateY")) {
                    _$jscoverage['js/vs_fx.js'][524]++;
                    transform += ("translateY(" + value + ") ");
                  }
                  else {
                    _$jscoverage['js/vs_fx.js'][525]++;
                    if ((property === "rotateX")) {
                      _$jscoverage['js/vs_fx.js'][526]++;
                      transform += ("rotateX(" + value + ") ");
                    }
                    else {
                      _$jscoverage['js/vs_fx.js'][527]++;
                      if ((property === "rotateY")) {
                        _$jscoverage['js/vs_fx.js'][528]++;
                        transform += ("rotateY(" + value + ") ");
                      }
                      else {
                        _$jscoverage['js/vs_fx.js'][529]++;
                        if ((property === "scale")) {
                          _$jscoverage['js/vs_fx.js'][530]++;
                          transform += ("scale(" + value + ") ");
                        }
                        else {
                          _$jscoverage['js/vs_fx.js'][531]++;
                          if ((property === "perspective")) {
                            _$jscoverage['js/vs_fx.js'][532]++;
                            transform += ("perspective(" + value + ") ");
                          }
                          else {
                            _$jscoverage['js/vs_fx.js'][534]++;
                            style += (property + ":" + value + ";");
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
}
    }
    _$jscoverage['js/vs_fx.js'][537]++;
    if (transform) {
      _$jscoverage['js/vs_fx.js'][539]++;
      style += (TRANSFORM + ": " + transform + ";");
    }
    _$jscoverage['js/vs_fx.js'][542]++;
    rules_str += (key + " { " + style + " } ");
}
  _$jscoverage['js/vs_fx.js'][545]++;
  var rules = document.createTextNode(("@" + KEY_FRAMES + " " + anim_id + " { " + rules_str + " }"));
  _$jscoverage['js/vs_fx.js'][548]++;
  cssAnimation.appendChild(rules);
  _$jscoverage['js/vs_fx.js'][549]++;
  document.getElementsByTagName("head")[0].appendChild(cssAnimation);
  _$jscoverage['js/vs_fx.js'][551]++;
  Animation.__css_animations[anim_id] = [cssAnimation, comp];
  _$jscoverage['js/vs_fx.js'][553]++;
  runComplexAnimation();
});
  _$jscoverage['js/vs_fx.js'][556]++;
  if (isComplex) {
    _$jscoverage['js/vs_fx.js'][556]++;
    applyComplexAnimation();
  }
  else {
    _$jscoverage['js/vs_fx.js'][557]++;
    applySimpleAnimation();
  }
  _$jscoverage['js/vs_fx.js'][559]++;
  return anim_id;
});
  _$jscoverage['js/vs_fx.js'][625]++;
  function Animation(animations) {
    _$jscoverage['js/vs_fx.js'][627]++;
    this.parent = core.Task;
    _$jscoverage['js/vs_fx.js'][628]++;
    this.parent();
    _$jscoverage['js/vs_fx.js'][629]++;
    this.constructor = Animation;
    _$jscoverage['js/vs_fx.js'][631]++;
    if (arguments.length) {
      _$jscoverage['js/vs_fx.js'][633]++;
      this.setAnimations(arguments);
      _$jscoverage['js/vs_fx.js'][634]++;
      this.keyFrames["100%"] = this;
    }
}
  _$jscoverage['js/vs_fx.js'][636]++;
  ;
  _$jscoverage['js/vs_fx.js'][641]++;
  Animation.__css_animations = {};
  _$jscoverage['js/vs_fx.js'][643]++;
  Animation.DEFAULT_DURATION = "0.3s";
  _$jscoverage['js/vs_fx.js'][644]++;
  Animation.DEFAULT_TIMING = Animation.EASE;
  _$jscoverage['js/vs_fx.js'][646]++;
  Animation.prototype = {properties: null, values: null, durations: null, timings: null, origin: null, iterationCount: 1, delay: 0, keyFrames: null, setAnimations: (function (animations) {
  _$jscoverage['js/vs_fx.js'][749]++;
  var i, prop, value, option;
  _$jscoverage['js/vs_fx.js'][751]++;
  this.properties = [];
  _$jscoverage['js/vs_fx.js'][752]++;
  this.values = [];
  _$jscoverage['js/vs_fx.js'][753]++;
  this.timings = [];
  _$jscoverage['js/vs_fx.js'][754]++;
  this.keyFrames = {};
  _$jscoverage['js/vs_fx.js'][755]++;
  this.origin = null;
  _$jscoverage['js/vs_fx.js'][756]++;
  this.durations = null;
  _$jscoverage['js/vs_fx.js'][757]++;
  this.timings = null;
  _$jscoverage['js/vs_fx.js'][759]++;
  for (i = 0; (i < animations.length); (i++)) {
    _$jscoverage['js/vs_fx.js'][761]++;
    option = animations[i];
    _$jscoverage['js/vs_fx.js'][762]++;
    if (((! util.isArray(option)) || (option.length !== 2))) {
      _$jscoverage['js/vs_fx.js'][764]++;
      console.warn("vs.fx.Animation, invalid animations");
      _$jscoverage['js/vs_fx.js'][765]++;
      continue;
    }
    _$jscoverage['js/vs_fx.js'][767]++;
    prop = option[0];
    _$jscoverage['js/vs_fx.js'][767]++;
    value = option[1];
    _$jscoverage['js/vs_fx.js'][768]++;
    if (((! util.isString(prop)) || (! util.isString(value)))) {
      _$jscoverage['js/vs_fx.js'][770]++;
      console.warn(("vs.fx.Animation, invalid constructor argument option: [" + prop + ", " + value + "]"));
      _$jscoverage['js/vs_fx.js'][772]++;
      continue;
    }
    _$jscoverage['js/vs_fx.js'][775]++;
    this.properties.push(prop);
    _$jscoverage['js/vs_fx.js'][776]++;
    this.values.push(value);
}
}), addKeyFrame: (function (pos, values) {
  _$jscoverage['js/vs_fx.js'][810]++;
  if ((! values)) {
    _$jscoverage['js/vs_fx.js'][810]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][811]++;
  if ((pos === "from")) {
    _$jscoverage['js/vs_fx.js'][813]++;
    this.keyFrames["0%"] = values;
    _$jscoverage['js/vs_fx.js'][814]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][816]++;
  if ((pos === "to")) {
    _$jscoverage['js/vs_fx.js'][818]++;
    this.keyFrames["100%"] = values;
    _$jscoverage['js/vs_fx.js'][819]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][821]++;
  if (((! util.isNumber(pos)) || (pos < 0) || (pos > 100))) {
    _$jscoverage['js/vs_fx.js'][821]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][823]++;
  this.keyFrames[(pos + "%")] = values;
}), process: (function (comp, clb, ctx) {
  _$jscoverage['js/vs_fx.js'][853]++;
  return procesAnimation(comp, this, clb, ctx);
}), clone: (function () {
  _$jscoverage['js/vs_fx.js'][869]++;
  var anim = new Animation(), key, data;
  _$jscoverage['js/vs_fx.js'][870]++;
  anim.keyFrames = {};
  _$jscoverage['js/vs_fx.js'][871]++;
  anim.keyFrames["100%"] = anim;
  _$jscoverage['js/vs_fx.js'][873]++;
  if (this.properties) {
    _$jscoverage['js/vs_fx.js'][874]++;
    anim.properties = this.properties.slice();
  }
  else {
    _$jscoverage['js/vs_fx.js'][875]++;
    anim.properties = [];
  }
  _$jscoverage['js/vs_fx.js'][876]++;
  if (this.values) {
    _$jscoverage['js/vs_fx.js'][877]++;
    anim.values = this.values.slice();
  }
  else {
    _$jscoverage['js/vs_fx.js'][878]++;
    anim.values = [];
  }
  _$jscoverage['js/vs_fx.js'][879]++;
  if (this.durations) {
    _$jscoverage['js/vs_fx.js'][880]++;
    anim.durations = this.durations;
  }
  _$jscoverage['js/vs_fx.js'][881]++;
  if (this.timings) {
    _$jscoverage['js/vs_fx.js'][882]++;
    anim.timings = this.timings.slice();
  }
  else {
    _$jscoverage['js/vs_fx.js'][883]++;
    anim.timings = [];
  }
  _$jscoverage['js/vs_fx.js'][884]++;
  if (this.origin) {
    _$jscoverage['js/vs_fx.js'][885]++;
    anim.origin = this.origin.slice();
  }
  _$jscoverage['js/vs_fx.js'][886]++;
  if (this.keyFrames) {
    _$jscoverage['js/vs_fx.js'][888]++;
    for (key in this.keyFrames) {
      _$jscoverage['js/vs_fx.js'][890]++;
      if ((key === "100%")) {
        _$jscoverage['js/vs_fx.js'][890]++;
        continue;
      }
      _$jscoverage['js/vs_fx.js'][891]++;
      data = this.keyFrames[key];
      _$jscoverage['js/vs_fx.js'][892]++;
      if (util.isArray(data)) {
        _$jscoverage['js/vs_fx.js'][892]++;
        anim.keyFrames[key] = data.slice();
      }
      else {
        _$jscoverage['js/vs_fx.js'][893]++;
        anim.keyFrames[key] = vs.util.clone(data);
      }
}
  }
  _$jscoverage['js/vs_fx.js'][897]++;
  anim.iterationCount = this.iterationCount;
  _$jscoverage['js/vs_fx.js'][898]++;
  anim.delay = this.delay;
  _$jscoverage['js/vs_fx.js'][900]++;
  return anim;
}), start: (function (param) {
  _$jscoverage['js/vs_fx.js'][916]++;
  this.process(param);
})};
  _$jscoverage['js/vs_fx.js'][919]++;
  util.extendClass(Animation, core.Task);
  _$jscoverage['js/vs_fx.js'][925]++;
  util.defineClassProperties(Animation, {"duration": {set: (function (v) {
  _$jscoverage['js/vs_fx.js'][935]++;
  if ((! v)) {
    _$jscoverage['js/vs_fx.js'][935]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][937]++;
  this.durations = [v];
}), get: (function () {
  _$jscoverage['js/vs_fx.js'][945]++;
  if ((this.durations && this.durations.length)) {
    _$jscoverage['js/vs_fx.js'][946]++;
    return this.durations[0];
  }
  else {
    _$jscoverage['js/vs_fx.js'][948]++;
    return Animation.DEFAULT_DURATION;
  }
})}, "timing": {set: (function (v) {
  _$jscoverage['js/vs_fx.js'][960]++;
  if ((! v)) {
    _$jscoverage['js/vs_fx.js'][960]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][962]++;
  this.timings = [v];
}), get: (function () {
  _$jscoverage['js/vs_fx.js'][970]++;
  if ((this.timings && this.timings.length)) {
    _$jscoverage['js/vs_fx.js'][971]++;
    return this.timings[0];
  }
  else {
    _$jscoverage['js/vs_fx.js'][973]++;
    return Animation.EASE;
  }
})}});
  _$jscoverage['js/vs_fx.js'][988]++;
  Animation.EASE = "ease";
  _$jscoverage['js/vs_fx.js'][996]++;
  Animation.LINEAR = "linear";
  _$jscoverage['js/vs_fx.js'][1004]++;
  Animation.EASE_IN = "ease-in";
  _$jscoverage['js/vs_fx.js'][1012]++;
  Animation.EASE_OUT = "ease-out";
  _$jscoverage['js/vs_fx.js'][1020]++;
  Animation.EASE_IN_OUT = "ease-in-out";
  _$jscoverage['js/vs_fx.js'][1052]++;
  TranslateAnimation = (function (x, y, z) {
  _$jscoverage['js/vs_fx.js'][1054]++;
  this.parent = Animation;
  _$jscoverage['js/vs_fx.js'][1055]++;
  if ((! arguments.length)) {
    _$jscoverage['js/vs_fx.js'][1057]++;
    this.parent();
  }
  else {
    _$jscoverage['js/vs_fx.js'][1061]++;
    if (SUPPORT_3D_TRANSFORM) {
      _$jscoverage['js/vs_fx.js'][1062]++;
      this.parent(["translate", "${x}px,${y}px,${z}px"]);
    }
    else {
      _$jscoverage['js/vs_fx.js'][1064]++;
      this.parent(["translate", "${x}px,${y}px"]);
    }
    _$jscoverage['js/vs_fx.js'][1066]++;
    if (util.isNumber(x)) {
      _$jscoverage['js/vs_fx.js'][1066]++;
      this.x = x;
    }
    _$jscoverage['js/vs_fx.js'][1067]++;
    if (util.isNumber(y)) {
      _$jscoverage['js/vs_fx.js'][1067]++;
      this.y = y;
    }
    _$jscoverage['js/vs_fx.js'][1068]++;
    if (util.isNumber(z)) {
      _$jscoverage['js/vs_fx.js'][1068]++;
      this.z = z;
    }
  }
  _$jscoverage['js/vs_fx.js'][1070]++;
  this.constructor = TranslateAnimation;
});
  _$jscoverage['js/vs_fx.js'][1073]++;
  TranslateAnimation.prototype = {x: 0, y: 0, z: 0};
  _$jscoverage['js/vs_fx.js'][1099]++;
  util.extendClass(TranslateAnimation, Animation);
  _$jscoverage['js/vs_fx.js'][1124]++;
  RotateAnimation = (function (deg) {
  _$jscoverage['js/vs_fx.js'][1126]++;
  this.parent = Animation;
  _$jscoverage['js/vs_fx.js'][1127]++;
  if ((! arguments.length)) {
    _$jscoverage['js/vs_fx.js'][1129]++;
    this.parent();
  }
  else {
    _$jscoverage['js/vs_fx.js'][1133]++;
    this.parent(["rotate", "${deg}deg"]);
    _$jscoverage['js/vs_fx.js'][1135]++;
    if (util.isNumber(deg)) {
      _$jscoverage['js/vs_fx.js'][1135]++;
      this.deg = deg;
    }
  }
  _$jscoverage['js/vs_fx.js'][1137]++;
  this.constructor = RotateAnimation;
});
  _$jscoverage['js/vs_fx.js'][1140]++;
  RotateAnimation.prototype = {deg: 0};
  _$jscoverage['js/vs_fx.js'][1150]++;
  util.extendClass(RotateAnimation, Animation);
  _$jscoverage['js/vs_fx.js'][1173]++;
  RotateXYZAnimation = (function (degX, degY, degZ) {
  _$jscoverage['js/vs_fx.js'][1175]++;
  this.parent = Animation;
  _$jscoverage['js/vs_fx.js'][1176]++;
  if ((! arguments.length)) {
    _$jscoverage['js/vs_fx.js'][1178]++;
    this.parent();
  }
  else {
    _$jscoverage['js/vs_fx.js'][1182]++;
    this.parent(["rotateX", "${degX}deg"], ["rotateY", "${degY}deg"], ["rotate", "${degZ}deg"]);
    _$jscoverage['js/vs_fx.js'][1185]++;
    if (util.isNumber(degX)) {
      _$jscoverage['js/vs_fx.js'][1185]++;
      this.degX = degX;
    }
    _$jscoverage['js/vs_fx.js'][1186]++;
    if (util.isNumber(degY)) {
      _$jscoverage['js/vs_fx.js'][1186]++;
      this.degY = degY;
    }
    _$jscoverage['js/vs_fx.js'][1187]++;
    if (util.isNumber(degZ)) {
      _$jscoverage['js/vs_fx.js'][1187]++;
      this.degZ = degZ;
    }
  }
  _$jscoverage['js/vs_fx.js'][1189]++;
  this.constructor = RotateXYZAnimation;
});
  _$jscoverage['js/vs_fx.js'][1192]++;
  RotateXYZAnimation.prototype = {degX: 0, degY: 0, degZ: 0};
  _$jscoverage['js/vs_fx.js'][1218]++;
  util.extendClass(RotateXYZAnimation, Animation);
  _$jscoverage['js/vs_fx.js'][1242]++;
  ScaleAnimation = (function (sx, sy) {
  _$jscoverage['js/vs_fx.js'][1244]++;
  this.parent = Animation;
  _$jscoverage['js/vs_fx.js'][1245]++;
  if ((! arguments.length)) {
    _$jscoverage['js/vs_fx.js'][1247]++;
    this.parent();
  }
  else {
    _$jscoverage['js/vs_fx.js'][1251]++;
    this.parent(["scale", "${sx},${sy}"]);
    _$jscoverage['js/vs_fx.js'][1253]++;
    if (util.isNumber(sx)) {
      _$jscoverage['js/vs_fx.js'][1253]++;
      this.sx = sx;
    }
    _$jscoverage['js/vs_fx.js'][1254]++;
    if (util.isNumber(sy)) {
      _$jscoverage['js/vs_fx.js'][1254]++;
      this.sy = sy;
    }
    _$jscoverage['js/vs_fx.js'][1255]++;
    if ((! util.isNumber(sy))) {
      _$jscoverage['js/vs_fx.js'][1255]++;
      this.sy = this.sx;
    }
  }
  _$jscoverage['js/vs_fx.js'][1257]++;
  this.constructor = ScaleAnimation;
});
  _$jscoverage['js/vs_fx.js'][1260]++;
  ScaleAnimation.prototype = {sx: 1, sy: 1};
  _$jscoverage['js/vs_fx.js'][1278]++;
  util.extendClass(ScaleAnimation, Animation);
  _$jscoverage['js/vs_fx.js'][1303]++;
  SkewAnimation = (function (ax, ay) {
  _$jscoverage['js/vs_fx.js'][1305]++;
  this.parent = Animation;
  _$jscoverage['js/vs_fx.js'][1306]++;
  if ((! arguments.length)) {
    _$jscoverage['js/vs_fx.js'][1308]++;
    this.parent();
  }
  else {
    _$jscoverage['js/vs_fx.js'][1312]++;
    this.parent(["skew", "${ax}deg,${ay}deg"]);
    _$jscoverage['js/vs_fx.js'][1314]++;
    if (util.isNumber(ax)) {
      _$jscoverage['js/vs_fx.js'][1314]++;
      this.ax = ax;
    }
    _$jscoverage['js/vs_fx.js'][1315]++;
    if (util.isNumber(ay)) {
      _$jscoverage['js/vs_fx.js'][1315]++;
      this.ay = ay;
    }
  }
  _$jscoverage['js/vs_fx.js'][1317]++;
  this.constructor = SkewAnimation;
});
  _$jscoverage['js/vs_fx.js'][1320]++;
  SkewAnimation.prototype = {ax: 0, ay: 0};
  _$jscoverage['js/vs_fx.js'][1338]++;
  util.extendClass(SkewAnimation, Animation);
  _$jscoverage['js/vs_fx.js'][1367]++;
  OpacityAnimation = (function (value) {
  _$jscoverage['js/vs_fx.js'][1369]++;
  this.parent = Animation;
  _$jscoverage['js/vs_fx.js'][1370]++;
  if ((! arguments.length)) {
    _$jscoverage['js/vs_fx.js'][1372]++;
    this.parent();
  }
  else {
    _$jscoverage['js/vs_fx.js'][1376]++;
    this.parent(["opacity", "${value}"]);
    _$jscoverage['js/vs_fx.js'][1378]++;
    if (util.isNumber(value)) {
      _$jscoverage['js/vs_fx.js'][1378]++;
      this.value = value;
    }
  }
  _$jscoverage['js/vs_fx.js'][1380]++;
  this.constructor = OpacityAnimation;
});
  _$jscoverage['js/vs_fx.js'][1383]++;
  OpacityAnimation.prototype = {value: 1};
  _$jscoverage['js/vs_fx.js'][1393]++;
  util.extendClass(OpacityAnimation, Animation);
  _$jscoverage['js/vs_fx.js'][1404]++;
  Animation.SlideOutRight = new Animation(["translateX", "$width"]);
  _$jscoverage['js/vs_fx.js'][1405]++;
  Animation.SlideOutRight.addKeyFrame(0, ["0px"]);
  _$jscoverage['js/vs_fx.js'][1411]++;
  Animation.SlideOutLeft = new Animation(["translateX", "-$width"]);
  _$jscoverage['js/vs_fx.js'][1412]++;
  Animation.SlideOutLeft.addKeyFrame(0, ["0px"]);
  _$jscoverage['js/vs_fx.js'][1419]++;
  Animation.SlideOutTop = new Animation(["translateY", "-$height"]);
  _$jscoverage['js/vs_fx.js'][1420]++;
  Animation.SlideOutTop.addKeyFrame(0, ["0px"]);
  _$jscoverage['js/vs_fx.js'][1427]++;
  Animation.SlideOutBottom = new Animation(["translateY", "$height"]);
  _$jscoverage['js/vs_fx.js'][1428]++;
  Animation.SlideOutBottom.addKeyFrame(0, ["0px"]);
  _$jscoverage['js/vs_fx.js'][1435]++;
  Animation.SlideInRight = new Animation(["translateX", "0px"]);
  _$jscoverage['js/vs_fx.js'][1436]++;
  Animation.SlideInRight.addKeyFrame(0, ["$width"]);
  _$jscoverage['js/vs_fx.js'][1443]++;
  Animation.SlideInLeft = new Animation(["translateX", "0px"]);
  _$jscoverage['js/vs_fx.js'][1444]++;
  Animation.SlideInLeft.addKeyFrame(0, ["-$width"]);
  _$jscoverage['js/vs_fx.js'][1451]++;
  Animation.SlideInTop = new Animation(["translateY", "0px"]);
  _$jscoverage['js/vs_fx.js'][1452]++;
  Animation.SlideInTop.addKeyFrame(0, ["-$height"]);
  _$jscoverage['js/vs_fx.js'][1459]++;
  Animation.SlideInBottom = new Animation(["translateY", "0px"]);
  _$jscoverage['js/vs_fx.js'][1460]++;
  Animation.SlideInBottom.addKeyFrame(0, ["$height"]);
  _$jscoverage['js/vs_fx.js'][1467]++;
  Animation.FadeIn = new Animation(["opacity", "1"]);
  _$jscoverage['js/vs_fx.js'][1468]++;
  Animation.FadeIn.addKeyFrame(0, ["0"]);
  _$jscoverage['js/vs_fx.js'][1475]++;
  Animation.FadeOut = new Animation(["opacity", "0"]);
  _$jscoverage['js/vs_fx.js'][1476]++;
  Animation.FadeOut.addKeyFrame(0, ["1"]);
  _$jscoverage['js/vs_fx.js'][1482]++;
  fx.Animation = Animation;
  _$jscoverage['js/vs_fx.js'][1483]++;
  fx.cancelAnimation = cancelAnimation;
  _$jscoverage['js/vs_fx.js'][1484]++;
  fx.TranslateAnimation = TranslateAnimation;
  _$jscoverage['js/vs_fx.js'][1485]++;
  fx.RotateAnimation = RotateAnimation;
  _$jscoverage['js/vs_fx.js'][1486]++;
  fx.RotateXYZAnimation = RotateXYZAnimation;
  _$jscoverage['js/vs_fx.js'][1487]++;
  fx.ScaleAnimation = ScaleAnimation;
  _$jscoverage['js/vs_fx.js'][1488]++;
  fx.SkewAnimation = SkewAnimation;
  _$jscoverage['js/vs_fx.js'][1489]++;
  fx.OpacityAnimation = OpacityAnimation;
  _$jscoverage['js/vs_fx.js'][1588]++;
  function Controller(owner) {
    _$jscoverage['js/vs_fx.js'][1590]++;
    this.parent = core.EventSource;
    _$jscoverage['js/vs_fx.js'][1591]++;
    this.parent();
    _$jscoverage['js/vs_fx.js'][1592]++;
    this.constructor = Controller;
    _$jscoverage['js/vs_fx.js'][1594]++;
    if (owner) {
      _$jscoverage['js/vs_fx.js'][1596]++;
      this._fsm = new (core.Fsm)(this);
      _$jscoverage['js/vs_fx.js'][1599]++;
      this._fsm.goTo = this.goTo;
      _$jscoverage['js/vs_fx.js'][1600]++;
      this._owner = owner;
    }
}
  _$jscoverage['js/vs_fx.js'][1604]++;
  Controller.prototype = {_delegate: null, _owner: null, _fsm: null, _initial_component: null, destructor: (function () {
  _$jscoverage['js/vs_fx.js'][1640]++;
  if (this._owner) {
    _$jscoverage['js/vs_fx.js'][1642]++;
    this._owner.__controller__ = undefined;
    _$jscoverage['js/vs_fx.js'][1644]++;
    this._owner.remove = this._owner._ab_controller_remove;
    _$jscoverage['js/vs_fx.js'][1645]++;
    this._owner._ab_controller_remove = undefined;
  }
  _$jscoverage['js/vs_fx.js'][1648]++;
  this._delegate = undefined;
  _$jscoverage['js/vs_fx.js'][1650]++;
  util.free(this._fsm);
  _$jscoverage['js/vs_fx.js'][1651]++;
  core.EventSource.prototype.destructor.call(this);
}), initComponent: (function () {
  _$jscoverage['js/vs_fx.js'][1660]++;
  core.EventSource.prototype.initComponent.call(this);
  _$jscoverage['js/vs_fx.js'][1662]++;
  if (this._fsm) {
    _$jscoverage['js/vs_fx.js'][1662]++;
    this._fsm.init();
  }
  _$jscoverage['js/vs_fx.js'][1664]++;
  if ((! this._owner)) {
    _$jscoverage['js/vs_fx.js'][1666]++;
    console.error(("Invalid vs.fx.Controller, owner is null vs.fx.Controller.id = '" + this._id + "'"));
    _$jscoverage['js/vs_fx.js'][1667]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][1669]++;
  if (this._owner.__controller__) {
    _$jscoverage['js/vs_fx.js'][1671]++;
    console.error("The owner already use a controller");
    _$jscoverage['js/vs_fx.js'][1672]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][1674]++;
  this._owner.__controller__ = this;
  _$jscoverage['js/vs_fx.js'][1676]++;
  this._owner._ab_controller_remove = this._owner.remove;
  _$jscoverage['js/vs_fx.js'][1677]++;
  this._owner.remove = this.ab_controller_remove;
}), ab_controller_remove: (function (child) {
  _$jscoverage['js/vs_fx.js'][1691]++;
  if ((! child)) {
    _$jscoverage['js/vs_fx.js'][1691]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][1693]++;
  state = this.__controller__._fsm._list_of_state[child.id];
  _$jscoverage['js/vs_fx.js'][1694]++;
  if (state) {
    _$jscoverage['js/vs_fx.js'][1696]++;
    this.__controller__.remove(child);
  }
  else {
    _$jscoverage['js/vs_fx.js'][1700]++;
    this._ab_controller_remove(child);
  }
}), isStateExit: (function (id) {
  _$jscoverage['js/vs_fx.js'][1719]++;
  if ((! this._fsm)) {
    _$jscoverage['js/vs_fx.js'][1719]++;
    return false;
  }
  _$jscoverage['js/vs_fx.js'][1721]++;
  if (this._fsm._list_of_state[id]) {
    _$jscoverage['js/vs_fx.js'][1722]++;
    return true;
  }
  _$jscoverage['js/vs_fx.js'][1724]++;
  return false;
}), add: (function (comp, data, extension, bindings) {
  _$jscoverage['js/vs_fx.js'][1734]++;
  console.warn("vs.fx.Controller.add is deprecated. Use vs.fx.Controller.push");
  _$jscoverage['js/vs_fx.js'][1735]++;
  return this.push(comp, data, extension, bindings);
}), push: (function (comp, data, extension, bindings) {
  _$jscoverage['js/vs_fx.js'][1766]++;
  if (((! comp) || (! this._fsm))) {
    _$jscoverage['js/vs_fx.js'][1766]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][1767]++;
  if ((! data)) {
    _$jscoverage['js/vs_fx.js'][1767]++;
    data = {};
  }
  _$jscoverage['js/vs_fx.js'][1769]++;
  var state_id = null, binding, i, state;
  _$jscoverage['js/vs_fx.js'][1770]++;
  if ((util.isString(comp) && data.id)) {
    _$jscoverage['js/vs_fx.js'][1771]++;
    state_id = data.id;
  }
  else {
    _$jscoverage['js/vs_fx.js'][1772]++;
    if (((! util.isString(comp)) && comp.id)) {
      _$jscoverage['js/vs_fx.js'][1773]++;
      state_id = comp.id;
    }
    else {
      _$jscoverage['js/vs_fx.js'][1774]++;
      state_id = core.createId();
    }
  }
  _$jscoverage['js/vs_fx.js'][1776]++;
  if (this.isStateExit(state_id)) {
    _$jscoverage['js/vs_fx.js'][1777]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][1779]++;
  this._fsm.addState(state_id);
  _$jscoverage['js/vs_fx.js'][1780]++;
  state = this._fsm._list_of_state[state_id];
  _$jscoverage['js/vs_fx.js'][1781]++;
  state.bindings = {};
  _$jscoverage['js/vs_fx.js'][1783]++;
  if ((bindings && bindings.length)) {
    _$jscoverage['js/vs_fx.js'][1785]++;
    for (i = 0; (i < bindings.length); (i++)) {
      _$jscoverage['js/vs_fx.js'][1787]++;
      binding = bindings[i];
      _$jscoverage['js/vs_fx.js'][1788]++;
      if (((! binding) || (binding.length !== 3))) {
        _$jscoverage['js/vs_fx.js'][1790]++;
        console.warn("vs.fx.Controller.push: invalid binding information");
        _$jscoverage['js/vs_fx.js'][1791]++;
        continue;
      }
      _$jscoverage['js/vs_fx.js'][1793]++;
      this.componentBind(state_id, binding[0], binding[1], binding[2]);
}
  }
  _$jscoverage['js/vs_fx.js'][1797]++;
  this.setStateComponentInformation(state_id, comp, extension, data);
  _$jscoverage['js/vs_fx.js'][1799]++;
  return state_id;
}), remove: (function (comp) {
  _$jscoverage['js/vs_fx.js'][1818]++;
  if (((! comp) || (! this._owner) || (! this._fsm))) {
    _$jscoverage['js/vs_fx.js'][1818]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][1820]++;
  var state_id = null;
  _$jscoverage['js/vs_fx.js'][1821]++;
  if (util.isString(comp)) {
    _$jscoverage['js/vs_fx.js'][1822]++;
    state_id = comp;
  }
  else {
    _$jscoverage['js/vs_fx.js'][1823]++;
    if ((! util.isString(comp))) {
      _$jscoverage['js/vs_fx.js'][1824]++;
      state_id = comp.id;
    }
  }
  _$jscoverage['js/vs_fx.js'][1826]++;
  var state = this._fsm._list_of_state[state_id];
  _$jscoverage['js/vs_fx.js'][1827]++;
  if ((state && state.comp)) {
    _$jscoverage['js/vs_fx.js'][1829]++;
    this._owner._ab_controller_remove(state.comp);
  }
  _$jscoverage['js/vs_fx.js'][1831]++;
  this._fsm.removeState(state_id);
}), setStateComponentInformation: (function (state_id, comp, extension, init_data) {
  _$jscoverage['js/vs_fx.js'][1850]++;
  if (((! state_id) || (! this._fsm) || (! this._fsm.existState(state_id)))) {
    _$jscoverage['js/vs_fx.js'][1850]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][1851]++;
  if (((! comp) || (! this._owner))) {
    _$jscoverage['js/vs_fx.js'][1851]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][1853]++;
  if ((! init_data)) {
    _$jscoverage['js/vs_fx.js'][1853]++;
    init_data = {};
  }
  else {
    _$jscoverage['js/vs_fx.js'][1854]++;
    init_data = util.clone(init_data);
  }
  _$jscoverage['js/vs_fx.js'][1856]++;
  var state = this._fsm._list_of_state[state_id];
  _$jscoverage['js/vs_fx.js'][1857]++;
  state.init_data = init_data;
  _$jscoverage['js/vs_fx.js'][1859]++;
  if (util.isString(comp)) {
    _$jscoverage['js/vs_fx.js'][1861]++;
    state.comp_name = comp;
    _$jscoverage['js/vs_fx.js'][1862]++;
    state.comp = undefined;
  }
  else {
    _$jscoverage['js/vs_fx.js'][1866]++;
    state.comp_name = "";
    _$jscoverage['js/vs_fx.js'][1867]++;
    state.comp = comp;
    _$jscoverage['js/vs_fx.js'][1868]++;
    if ((! this._owner.isChild(comp))) {
      _$jscoverage['js/vs_fx.js'][1870]++;
      this._owner.add(comp, extension);
    }
  }
}), addTransition: (function (from, to, on, animation_out, animation_in) {
  _$jscoverage['js/vs_fx.js'][1896]++;
  var key, t;
  _$jscoverage['js/vs_fx.js'][1898]++;
  if (((! from) || (! this._fsm) || (! this._fsm.existState(from)))) {
    _$jscoverage['js/vs_fx.js'][1898]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][1899]++;
  if (((! to) || (! this._fsm.existState(to)))) {
    _$jscoverage['js/vs_fx.js'][1899]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][1900]++;
  if ((! on)) {
    _$jscoverage['js/vs_fx.js'][1900]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][1902]++;
  if ((! this._fsm.existInput(on))) {
    _$jscoverage['js/vs_fx.js'][1904]++;
    this._fsm.addInput(on);
  }
  _$jscoverage['js/vs_fx.js'][1907]++;
  this._fsm.addTransition(from, to, on);
  _$jscoverage['js/vs_fx.js'][1909]++;
  for (key in this._fsm._list_of_state[from].transitionEvents) {
    _$jscoverage['js/vs_fx.js'][1911]++;
    t = this._fsm._list_of_state[from].transitionEvents[key];
    _$jscoverage['js/vs_fx.js'][1912]++;
    if ((t.to !== to)) {
      _$jscoverage['js/vs_fx.js'][1912]++;
      continue;
    }
    _$jscoverage['js/vs_fx.js'][1914]++;
    t.animation_out = animation_out;
    _$jscoverage['js/vs_fx.js'][1915]++;
    t.animation_in = animation_in;
}
}), _animateComponents: (function (fromComp, toComp, animationOut, animationIn, animation_clb, instant) {
  _$jscoverage['js/vs_fx.js'][1925]++;
  var self = this, callback = (function () {
  _$jscoverage['js/vs_fx.js'][1927]++;
  try {
    _$jscoverage['js/vs_fx.js'][1929]++;
    if (animation_clb) {
      _$jscoverage['js/vs_fx.js'][1931]++;
      animation_clb.call(self._owner);
    }
    _$jscoverage['js/vs_fx.js'][1933]++;
    if ((self._delegate && self._delegate.animationDidEnd)) {
      _$jscoverage['js/vs_fx.js'][1935]++;
      console.warn("animationDidEnd is deprecated. Please use 'controllerAnimationDidEnd'.");
      _$jscoverage['js/vs_fx.js'][1936]++;
      self._delegate.animationDidEnd(self);
    }
    _$jscoverage['js/vs_fx.js'][1938]++;
    if ((self._delegate && self._delegate.controllerAnimationDidEnd)) {
      _$jscoverage['js/vs_fx.js'][1940]++;
      self._delegate.controllerAnimationDidEnd(fromComp, toComp, self);
    }
  }
  catch (e) {
    _$jscoverage['js/vs_fx.js'][1942]++;
    console.error(e);
  }
}), runAnimation = (function () {
  _$jscoverage['js/vs_fx.js'][1946]++;
  try {
    _$jscoverage['js/vs_fx.js'][1948]++;
    toComp.show();
    _$jscoverage['js/vs_fx.js'][1949]++;
    if (((! animationIn) && (! animationOut))) {
      _$jscoverage['js/vs_fx.js'][1951]++;
      callback.call(self);
      _$jscoverage['js/vs_fx.js'][1952]++;
      return;
    }
    _$jscoverage['js/vs_fx.js'][1954]++;
    if (instant) {
      _$jscoverage['js/vs_fx.js'][1956]++;
      if (animationIn) {
        _$jscoverage['js/vs_fx.js'][1958]++;
        var inDurations = animationIn.durations;
        _$jscoverage['js/vs_fx.js'][1959]++;
        animationIn.durations = "0s";
      }
      _$jscoverage['js/vs_fx.js'][1961]++;
      if (animationOut) {
        _$jscoverage['js/vs_fx.js'][1963]++;
        var outDurations = animationOut.durations;
        _$jscoverage['js/vs_fx.js'][1964]++;
        animationOut.durations = "0s";
      }
    }
    _$jscoverage['js/vs_fx.js'][1967]++;
    if ((animationIn && (! animationOut))) {
      _$jscoverage['js/vs_fx.js'][1969]++;
      animationIn.process(toComp, callback, self);
    }
    else {
      _$jscoverage['js/vs_fx.js'][1971]++;
      if (((! animationIn) && animationOut)) {
        _$jscoverage['js/vs_fx.js'][1973]++;
        animationOut.process(fromComp, callback, self);
      }
      else {
        _$jscoverage['js/vs_fx.js'][1977]++;
        if (animationIn) {
          _$jscoverage['js/vs_fx.js'][1977]++;
          animationIn.process(toComp, callback, self);
        }
        _$jscoverage['js/vs_fx.js'][1978]++;
        if (animationOut) {
          _$jscoverage['js/vs_fx.js'][1978]++;
          animationOut.process(fromComp);
        }
      }
    }
    _$jscoverage['js/vs_fx.js'][1980]++;
    if (instant) {
      _$jscoverage['js/vs_fx.js'][1982]++;
      if (animationIn) {
        _$jscoverage['js/vs_fx.js'][1982]++;
        animationIn.durations = inDurations;
      }
      _$jscoverage['js/vs_fx.js'][1983]++;
      if (animationOut) {
        _$jscoverage['js/vs_fx.js'][1983]++;
        animationOut.durations = outDurations;
      }
    }
  }
  catch (e) {
    _$jscoverage['js/vs_fx.js'][1986]++;
    console.error(e);
  }
});
  _$jscoverage['js/vs_fx.js'][1988]++;
  window.setTimeout((function () {
  _$jscoverage['js/vs_fx.js'][1988]++;
  runAnimation();
}), 0);
}), componentBind: (function (comp_id, event, obj, func) {
  _$jscoverage['js/vs_fx.js'][2014]++;
  if ((! this._fsm)) {
    _$jscoverage['js/vs_fx.js'][2014]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][2016]++;
  var state = this._fsm._list_of_state[comp_id], a;
  _$jscoverage['js/vs_fx.js'][2018]++;
  if ((! state)) {
    _$jscoverage['js/vs_fx.js'][2018]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][2020]++;
  a = state.bindings[event];
  _$jscoverage['js/vs_fx.js'][2021]++;
  if ((! a)) {
    _$jscoverage['js/vs_fx.js'][2023]++;
    a = [];
    _$jscoverage['js/vs_fx.js'][2024]++;
    state.bindings[event] = a;
  }
  _$jscoverage['js/vs_fx.js'][2027]++;
  a.push([obj, func]);
  _$jscoverage['js/vs_fx.js'][2028]++;
  if ((comp_id === this._current_state)) {
    _$jscoverage['js/vs_fx.js'][2030]++;
    state.comp.bind(event, obj, func);
  }
}), refresh: (function () {
}), getCurrentState: (function () {
  _$jscoverage['js/vs_fx.js'][2056]++;
  if ((! this._fsm)) {
    _$jscoverage['js/vs_fx.js'][2056]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][2058]++;
  return this._fsm._current_state;
}), configureNewComponent: (function (comp) {
}), _beforeStateEnter: (function (state, data) {
  _$jscoverage['js/vs_fx.js'][2075]++;
  if (((! state) || (! (state.comp_name || state.comp)))) {
    _$jscoverage['js/vs_fx.js'][2075]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][2077]++;
  var spec, events, i, key, e, new_data;
  _$jscoverage['js/vs_fx.js'][2081]++;
  if ((! state.comp)) {
    _$jscoverage['js/vs_fx.js'][2083]++;
    state.comp = this._owner.createAndAddComponent(state.comp_name, state.init_data, state.extension);
    _$jscoverage['js/vs_fx.js'][2086]++;
    state.comp.configure(state.init_data);
    _$jscoverage['js/vs_fx.js'][2087]++;
    if ((state.comp && state.comp.propertiesDidChange)) {
      _$jscoverage['js/vs_fx.js'][2089]++;
      state.comp.propertiesDidChange();
    }
    _$jscoverage['js/vs_fx.js'][2091]++;
    state.comp.propertyChange();
    _$jscoverage['js/vs_fx.js'][2092]++;
    this.configureNewComponent(state.comp);
  }
  _$jscoverage['js/vs_fx.js'][2097]++;
  new_data = data;
  _$jscoverage['js/vs_fx.js'][2099]++;
  if (state.data_adaptation_func) {
    _$jscoverage['js/vs_fx.js'][2101]++;
    new_data = state.data_adaptation_func(data);
  }
  _$jscoverage['js/vs_fx.js'][2104]++;
  if (new_data) {
    _$jscoverage['js/vs_fx.js'][2107]++;
    for (key in new_data) {
      _$jscoverage['js/vs_fx.js'][2109]++;
      if (((! state.comp.__lookupSetter__(key)) && (! state.comp.hasOwnProperty(key)))) {
        _$jscoverage['js/vs_fx.js'][2112]++;
        continue;
      }
      _$jscoverage['js/vs_fx.js'][2114]++;
      state.comp[key] = new_data[key];
}
    _$jscoverage['js/vs_fx.js'][2118]++;
    state.comp.propertyChange();
  }
  _$jscoverage['js/vs_fx.js'][2123]++;
  for (spec in state.bindings) {
    _$jscoverage['js/vs_fx.js'][2125]++;
    events = state.bindings[spec];
    _$jscoverage['js/vs_fx.js'][2126]++;
    if ((! events)) {
      _$jscoverage['js/vs_fx.js'][2126]++;
      continue;
    }
    _$jscoverage['js/vs_fx.js'][2128]++;
    for (i = 0; (i < events.length); (i++)) {
      _$jscoverage['js/vs_fx.js'][2130]++;
      e = events[i];
      _$jscoverage['js/vs_fx.js'][2131]++;
      if ((! e)) {
        _$jscoverage['js/vs_fx.js'][2131]++;
        continue;
      }
      _$jscoverage['js/vs_fx.js'][2132]++;
      if (e[1]) {
        _$jscoverage['js/vs_fx.js'][2132]++;
        state.comp.bind(spec, e[0], e[1]);
      }
      else {
        _$jscoverage['js/vs_fx.js'][2133]++;
        state.comp.bind(spec, e[0]);
      }
}
}
}), _beforeStateExit: (function (state) {
  _$jscoverage['js/vs_fx.js'][2144]++;
  if (((! state) || (! state.comp))) {
    _$jscoverage['js/vs_fx.js'][2144]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][2146]++;
  var spec, events, i, e;
  _$jscoverage['js/vs_fx.js'][2150]++;
  for (spec in state.bindings) {
    _$jscoverage['js/vs_fx.js'][2152]++;
    events = state.bindings[spec];
    _$jscoverage['js/vs_fx.js'][2153]++;
    if ((! events)) {
      _$jscoverage['js/vs_fx.js'][2153]++;
      continue;
    }
    _$jscoverage['js/vs_fx.js'][2155]++;
    for (i = 0; (i < events.length); (i++)) {
      _$jscoverage['js/vs_fx.js'][2157]++;
      e = events[i];
      _$jscoverage['js/vs_fx.js'][2158]++;
      if ((! e)) {
        _$jscoverage['js/vs_fx.js'][2158]++;
        continue;
      }
      _$jscoverage['js/vs_fx.js'][2159]++;
      if (e[1]) {
        _$jscoverage['js/vs_fx.js'][2159]++;
        state.comp.unbind(spec, e[0], e[1]);
      }
      else {
        _$jscoverage['js/vs_fx.js'][2160]++;
        state.comp.bind(spec, e[0]);
      }
}
}
}), goTo: (function (state_id, output, event, instant) {
  _$jscoverage['js/vs_fx.js'][2184]++;
  var state_from, state_to, transition = null;
  _$jscoverage['js/vs_fx.js'][2186]++;
  if (((! state_id) || (! this._list_of_state[state_id]))) {
    _$jscoverage['js/vs_fx.js'][2188]++;
    console.warn(("vs.fx.Controller.goTo unknown State id:" + state_id));
    _$jscoverage['js/vs_fx.js'][2189]++;
    return false;
  }
  _$jscoverage['js/vs_fx.js'][2193]++;
  if (this._current_state) {
    _$jscoverage['js/vs_fx.js'][2195]++;
    if (event) {
      _$jscoverage['js/vs_fx.js'][2197]++;
      transition = this._list_of_state[this._current_state].transitionEvents[event.on];
    }
    _$jscoverage['js/vs_fx.js'][2200]++;
    state_from = this._list_of_state[this._current_state];
    _$jscoverage['js/vs_fx.js'][2201]++;
    this.owner._beforeStateExit(state_from);
  }
  _$jscoverage['js/vs_fx.js'][2205]++;
  this._current_state = state_id;
  _$jscoverage['js/vs_fx.js'][2208]++;
  state_to = this._list_of_state[this._current_state];
  _$jscoverage['js/vs_fx.js'][2209]++;
  this.owner._beforeStateEnter(state_to, (event? event.data: null));
  _$jscoverage['js/vs_fx.js'][2211]++;
  if ((state_from && state_from.comp && state_from.comp.viewWillDisappear)) {
    _$jscoverage['js/vs_fx.js'][2213]++;
    state_from.comp.viewWillDisappear();
  }
  _$jscoverage['js/vs_fx.js'][2215]++;
  if (state_to.comp.viewWillAppear) {
    _$jscoverage['js/vs_fx.js'][2217]++;
    state_to.comp.viewWillAppear();
  }
  _$jscoverage['js/vs_fx.js'][2219]++;
  if ((this.owner._delegate && this.owner._delegate.controllerViewWillChange)) {
    _$jscoverage['js/vs_fx.js'][2221]++;
    if (state_from) {
      _$jscoverage['js/vs_fx.js'][2223]++;
      this.owner._delegate.controllerViewWillChange(state_from.comp, state_to.comp, this.owner);
    }
    else {
      _$jscoverage['js/vs_fx.js'][2228]++;
      this.owner._delegate.controllerViewWillChange(null, state_to.comp, this.owner);
    }
  }
  _$jscoverage['js/vs_fx.js'][2233]++;
  if (transition) {
    _$jscoverage['js/vs_fx.js'][2235]++;
    this.owner._animateComponents(state_from.comp, state_to.comp, transition.animation_out, transition.animation_in, null, instant);
  }
  else {
    _$jscoverage['js/vs_fx.js'][2242]++;
    state_to.comp.show();
  }
  _$jscoverage['js/vs_fx.js'][2245]++;
  if ((output && this._output_action[output])) {
    _$jscoverage['js/vs_fx.js'][2247]++;
    var clb = this._output_action[output];
    _$jscoverage['js/vs_fx.js'][2248]++;
    if ((clb instanceof Function)) {
      _$jscoverage['js/vs_fx.js'][2250]++;
      clb.call(this._owner, event);
    }
    else {
      _$jscoverage['js/vs_fx.js'][2252]++;
      if (util.isString(clb)) {
        _$jscoverage['js/vs_fx.js'][2254]++;
        (this._owner[this._output_action[output]])(event);
      }
    }
  }
  _$jscoverage['js/vs_fx.js'][2258]++;
  return true;
}), notify: (function (event, instant) {
  _$jscoverage['js/vs_fx.js'][2267]++;
  if (((! this._fsm) || (! event) || (! event.type))) {
    _$jscoverage['js/vs_fx.js'][2267]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][2268]++;
  this._fsm.fsmNotify(event.type, event.data, instant);
}), clear: (function () {
  _$jscoverage['js/vs_fx.js'][2284]++;
  if ((! this._fsm)) {
    _$jscoverage['js/vs_fx.js'][2284]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][2286]++;
  this._fsm.clear();
})};
  _$jscoverage['js/vs_fx.js'][2289]++;
  util.extendClass(Controller, core.EventSource);
  _$jscoverage['js/vs_fx.js'][2295]++;
  util.defineClassProperties(Controller, {"initialComponent": {set: (function (comp_id) {
  _$jscoverage['js/vs_fx.js'][2310]++;
  if (((! this._fsm) || (! comp_id))) {
    _$jscoverage['js/vs_fx.js'][2312]++;
    this._initial_component = undefined;
    _$jscoverage['js/vs_fx.js'][2313]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][2316]++;
  if ((! this._fsm.existState(comp_id))) {
    _$jscoverage['js/vs_fx.js'][2316]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][2319]++;
  this._initial_component = comp_id;
  _$jscoverage['js/vs_fx.js'][2320]++;
  this._fsm.initialState = comp_id;
  _$jscoverage['js/vs_fx.js'][2322]++;
  this._fsm.goTo(comp_id);
}), get: (function () {
  _$jscoverage['js/vs_fx.js'][2330]++;
  return this._initial_component;
})}, "delegate": {set: (function (v) {
  _$jscoverage['js/vs_fx.js'][2352]++;
  this._delegate = v;
})}});
  _$jscoverage['js/vs_fx.js'][2360]++;
  fx.Controller = Controller;
  _$jscoverage['js/vs_fx.js'][2402]++;
  function StackController(owner) {
    _$jscoverage['js/vs_fx.js'][2404]++;
    this.parent = Controller;
    _$jscoverage['js/vs_fx.js'][2405]++;
    this.parent(owner);
    _$jscoverage['js/vs_fx.js'][2406]++;
    this.constructor = StackController;
    _$jscoverage['js/vs_fx.js'][2408]++;
    if ((! arguments.length)) {
      _$jscoverage['js/vs_fx.js'][2408]++;
      return;
    }
    _$jscoverage['js/vs_fx.js'][2410]++;
    this._fsm.addInput(StackController.NEXT);
    _$jscoverage['js/vs_fx.js'][2411]++;
    this._fsm.addInput(StackController.PRED);
    _$jscoverage['js/vs_fx.js'][2412]++;
    this._fsm.addInput(StackController.FIRST);
    _$jscoverage['js/vs_fx.js'][2414]++;
    this._states_array = new Array();
}
  _$jscoverage['js/vs_fx.js'][2421]++;
  StackController.ANIMATION_DURATION = 350;
  _$jscoverage['js/vs_fx.js'][2428]++;
  StackController.NEXT = "next";
  _$jscoverage['js/vs_fx.js'][2435]++;
  StackController.PRED = "pred";
  _$jscoverage['js/vs_fx.js'][2442]++;
  StackController.FIRST = "first";
  _$jscoverage['js/vs_fx.js'][2444]++;
  StackController.prototype = {_is_tactile: false, _owner_handler_event_extended: false, _owner_handler_event: null, _animation_duration: StackController.ANIMATION_DURATION, _last_comp_id: null, _states_array: null, __nb_panels: 0, _view_size: null, destructor: (function () {
  _$jscoverage['js/vs_fx.js'][2509]++;
  (delete this._states_array);
  _$jscoverage['js/vs_fx.js'][2511]++;
  Controller.prototype.destructor.call(this);
}), initComponent: (function () {
  _$jscoverage['js/vs_fx.js'][2520]++;
  Controller.prototype.initComponent.call(this);
  _$jscoverage['js/vs_fx.js'][2522]++;
  this.isTactile = this._is_tactile;
  _$jscoverage['js/vs_fx.js'][2523]++;
  this._updateViewSize();
}), push: (function (comp, data, extension, bindings) {
  _$jscoverage['js/vs_fx.js'][2558]++;
  if ((! comp)) {
    _$jscoverage['js/vs_fx.js'][2558]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][2559]++;
  if ((! data)) {
    _$jscoverage['js/vs_fx.js'][2559]++;
    data = {};
  }
  _$jscoverage['js/vs_fx.js'][2561]++;
  var state_id = Controller.prototype.push.call(this, comp, data, extension, bindings);
  _$jscoverage['js/vs_fx.js'][2563]++;
  if ((! state_id)) {
    _$jscoverage['js/vs_fx.js'][2563]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][2565]++;
  this._states_array.push(state_id);
  _$jscoverage['js/vs_fx.js'][2566]++;
  (this.__nb_panels++);
  _$jscoverage['js/vs_fx.js'][2569]++;
  if ((this.__nb_panels === 1)) {
    _$jscoverage['js/vs_fx.js'][2571]++;
    this.initialComponent = state_id;
    _$jscoverage['js/vs_fx.js'][2572]++;
    this._last_comp_id = state_id;
    _$jscoverage['js/vs_fx.js'][2574]++;
    return state_id;
  }
  _$jscoverage['js/vs_fx.js'][2577]++;
  this.addTransition(this._last_comp_id, state_id, StackController.NEXT);
  _$jscoverage['js/vs_fx.js'][2578]++;
  this.addTransition(state_id, this._last_comp_id, StackController.PRED);
  _$jscoverage['js/vs_fx.js'][2579]++;
  this.addTransition(state_id, this._initial_component, StackController.FIRST);
  _$jscoverage['js/vs_fx.js'][2583]++;
  if ((this._last_comp_id === this._initial_state)) {
    _$jscoverage['js/vs_fx.js'][2585]++;
    state = this._fsm._list_of_state[state_id];
    _$jscoverage['js/vs_fx.js'][2586]++;
    if ((! state)) {
      _$jscoverage['js/vs_fx.js'][2588]++;
      console.error("Unknown error in vs.fx.StackController.push");
      _$jscoverage['js/vs_fx.js'][2589]++;
      return;
    }
    _$jscoverage['js/vs_fx.js'][2591]++;
    if ((! state.comp)) {
      _$jscoverage['js/vs_fx.js'][2593]++;
      state.comp = this._owner.createAndAddComponent(state.comp_name, state.init_data, extension);
      _$jscoverage['js/vs_fx.js'][2596]++;
      state.comp.configure(state.init_data);
      _$jscoverage['js/vs_fx.js'][2597]++;
      state.comp.setStyle("position", "absolute");
      _$jscoverage['js/vs_fx.js'][2598]++;
      if ((state.comp && state.comp.propertiesDidChange)) {
        _$jscoverage['js/vs_fx.js'][2600]++;
        state.comp.propertiesDidChange();
      }
      _$jscoverage['js/vs_fx.js'][2602]++;
      state.comp.propertyChange();
    }
    _$jscoverage['js/vs_fx.js'][2605]++;
    state.comp.show();
  }
  _$jscoverage['js/vs_fx.js'][2608]++;
  this._last_comp_id = state_id;
  _$jscoverage['js/vs_fx.js'][2609]++;
  return state_id;
}), _updateViewSize: (function () {
}), remove: (function (comp) {
  _$jscoverage['js/vs_fx.js'][2635]++;
  if ((! comp)) {
    _$jscoverage['js/vs_fx.js'][2635]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][2637]++;
  var state_id = null;
  _$jscoverage['js/vs_fx.js'][2638]++;
  if (util.isString(comp)) {
    _$jscoverage['js/vs_fx.js'][2639]++;
    state_id = comp;
  }
  else {
    _$jscoverage['js/vs_fx.js'][2640]++;
    if ((! util.isString(comp))) {
      _$jscoverage['js/vs_fx.js'][2641]++;
      state_id = comp.id;
    }
  }
  _$jscoverage['js/vs_fx.js'][2643]++;
  var pos = this._states_array.findItem(state_id);
  _$jscoverage['js/vs_fx.js'][2644]++;
  if ((pos === -1)) {
    _$jscoverage['js/vs_fx.js'][2644]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][2646]++;
  this._fsm.removeTransitionTo(state_id, StackController.NEXT);
  _$jscoverage['js/vs_fx.js'][2647]++;
  this._fsm.removeTransitionFrom(state_id, StackController.PRED);
  _$jscoverage['js/vs_fx.js'][2648]++;
  this._fsm.removeTransitionFrom(state_id, StackController.FIRST);
  _$jscoverage['js/vs_fx.js'][2650]++;
  this._states_array.remove(pos);
  _$jscoverage['js/vs_fx.js'][2652]++;
  (this.__nb_panels--);
  _$jscoverage['js/vs_fx.js'][2653]++;
  var state = this._fsm._list_of_state[state_id];
  _$jscoverage['js/vs_fx.js'][2655]++;
  if (((pos === 0) && (this.__nb_panels > 0))) {
    _$jscoverage['js/vs_fx.js'][2657]++;
    this._initial_component = this._states_array[0];
    _$jscoverage['js/vs_fx.js'][2660]++;
    for (var state_id_temp in this._states_array) {
      _$jscoverage['js/vs_fx.js'][2662]++;
      if ((state_id_temp === state_id)) {
        _$jscoverage['js/vs_fx.js'][2662]++;
        continue;
      }
      _$jscoverage['js/vs_fx.js'][2663]++;
      if ((state_id_temp === this._initial_component)) {
        _$jscoverage['js/vs_fx.js'][2663]++;
        continue;
      }
      _$jscoverage['js/vs_fx.js'][2665]++;
      this._fsm.removeTransitionFrom(state_id_temp, StackController.FIRST);
      _$jscoverage['js/vs_fx.js'][2666]++;
      this.addTransition(state_id_temp, this._initial_component, StackController.FIRST);
}
  }
  _$jscoverage['js/vs_fx.js'][2670]++;
  if ((this.__nb_panels === 0)) {
    _$jscoverage['js/vs_fx.js'][2672]++;
    this._initial_component = undefined;
    _$jscoverage['js/vs_fx.js'][2673]++;
    this._fsm._current_state = undefined;
  }
  _$jscoverage['js/vs_fx.js'][2676]++;
  if (this._initial_component) {
    _$jscoverage['js/vs_fx.js'][2678]++;
    if ((this._fsm._current_state === state_id)) {
      _$jscoverage['js/vs_fx.js'][2680]++;
      if ((pos === 0)) {
        _$jscoverage['js/vs_fx.js'][2682]++;
        this._fsm.goTo(this._initial_component);
      }
      else {
        _$jscoverage['js/vs_fx.js'][2686]++;
        if ((pos === this._states_array.length)) {
          _$jscoverage['js/vs_fx.js'][2686]++;
          (pos--);
        }
        _$jscoverage['js/vs_fx.js'][2687]++;
        this._fsm.goTo(this._states_array[pos]);
      }
    }
    else {
      _$jscoverage['js/vs_fx.js'][2692]++;
      this._fsm.goTo(this._fsm._current_state);
    }
  }
  _$jscoverage['js/vs_fx.js'][2695]++;
  Controller.prototype.remove.call(this, comp);
}), orientationDidChange: (function (orientation) {
  _$jscoverage['js/vs_fx.js'][2706]++;
  this._updateViewSize();
}), goToViewId: (function (id, instant) {
  _$jscoverage['js/vs_fx.js'][2723]++;
  var pos = this._states_array.findItem(id);
  _$jscoverage['js/vs_fx.js'][2724]++;
  if ((pos === -1)) {
    _$jscoverage['js/vs_fx.js'][2724]++;
    return false;
  }
  _$jscoverage['js/vs_fx.js'][2726]++;
  this.goToViewAt(pos, instant);
}), goToViewAt: (function (pos, instant) {
  _$jscoverage['js/vs_fx.js'][2739]++;
  if ((pos < 0)) {
    _$jscoverage['js/vs_fx.js'][2739]++;
    return false;
  }
  _$jscoverage['js/vs_fx.js'][2740]++;
  if ((pos > this._states_array.length)) {
    _$jscoverage['js/vs_fx.js'][2740]++;
    return false;
  }
  _$jscoverage['js/vs_fx.js'][2742]++;
  var current_pos = this._states_array.findItem(this._fsm._current_state);
  _$jscoverage['js/vs_fx.js'][2743]++;
  if ((current_pos === pos)) {
    _$jscoverage['js/vs_fx.js'][2743]++;
    return true;
  }
  _$jscoverage['js/vs_fx.js'][2745]++;
  if ((pos > current_pos)) {
    _$jscoverage['js/vs_fx.js'][2747]++;
    while ((current_pos < (pos - 1))) {
      _$jscoverage['js/vs_fx.js'][2749]++;
      this._fsm.fsmNotify(StackController.NEXT, null, true);
      _$jscoverage['js/vs_fx.js'][2750]++;
      (current_pos++);
}
    _$jscoverage['js/vs_fx.js'][2752]++;
    return this._fsm.fsmNotify(StackController.NEXT, instant);
  }
  else {
    _$jscoverage['js/vs_fx.js'][2756]++;
    while (((pos + 1) < current_pos)) {
      _$jscoverage['js/vs_fx.js'][2758]++;
      this._fsm.fsmNotify(StackController.PRED, null, true);
      _$jscoverage['js/vs_fx.js'][2759]++;
      (current_pos--);
}
    _$jscoverage['js/vs_fx.js'][2761]++;
    return this._fsm.fsmNotify(StackController.PRED, instant);
  }
}), goToNextView: (function (instant) {
  _$jscoverage['js/vs_fx.js'][2775]++;
  return this._fsm.fsmNotify(StackController.NEXT, null, instant);
}), goToPreviousView: (function (instant) {
  _$jscoverage['js/vs_fx.js'][2788]++;
  return this._fsm.fsmNotify(StackController.PRED, null, instant);
}), goToFirstView: (function (instant) {
  _$jscoverage['js/vs_fx.js'][2801]++;
  return this._fsm.fsmNotify(StackController.FIRST, instant);
}), handleEvent: (function (event) {
})};
  _$jscoverage['js/vs_fx.js'][2811]++;
  util.extendClass(StackController, Controller);
  _$jscoverage['js/vs_fx.js'][2817]++;
  util.defineClassProperties(StackController, {"viewSize": {set: (function (v) {
  _$jscoverage['js/vs_fx.js'][2828]++;
  if ((! v)) {
    _$jscoverage['js/vs_fx.js'][2828]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][2829]++;
  if (((! util.isArray(v)) || (v.length !== 2))) {
    _$jscoverage['js/vs_fx.js'][2829]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][2830]++;
  if (((! util.isNumber(v[0])) || (! util.isNumber(v[1])))) {
    _$jscoverage['js/vs_fx.js'][2830]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][2832]++;
  if ((! this._view_size)) {
    _$jscoverage['js/vs_fx.js'][2833]++;
    this._view_size = [];
  }
  _$jscoverage['js/vs_fx.js'][2835]++;
  this._view_size[0] = v[0];
  _$jscoverage['js/vs_fx.js'][2836]++;
  this._view_size[1] = v[1];
  _$jscoverage['js/vs_fx.js'][2838]++;
  this._updateViewSize();
}), get: (function () {
  _$jscoverage['js/vs_fx.js'][2847]++;
  if ((! this._view_size)) {
    _$jscoverage['js/vs_fx.js'][2849]++;
    return this._owner.size;
  }
  _$jscoverage['js/vs_fx.js'][2851]++;
  return this._view_size.slice();
})}, "isTactile": {set: (function (v) {
  _$jscoverage['js/vs_fx.js'][2862]++;
  if (v) {
    _$jscoverage['js/vs_fx.js'][2864]++;
    this._is_tactile = true;
    _$jscoverage['js/vs_fx.js'][2865]++;
    if (((! this._owner) || (! this._owner.view))) {
      _$jscoverage['js/vs_fx.js'][2865]++;
      return;
    }
    _$jscoverage['js/vs_fx.js'][2867]++;
    if ((! this._owner_handler_event_extended)) {
      _$jscoverage['js/vs_fx.js'][2869]++;
      this._owner.view.addEventListener(core.POINTER_START, this._owner, false);
      _$jscoverage['js/vs_fx.js'][2870]++;
      this._owner_handler_event = this._owner.handleEvent;
      _$jscoverage['js/vs_fx.js'][2871]++;
      this._owner.handleEvent = this.handleEvent;
    }
    _$jscoverage['js/vs_fx.js'][2873]++;
    this._owner_handler_event_extended = true;
  }
  else {
    _$jscoverage['js/vs_fx.js'][2877]++;
    this._is_tactile = false;
    _$jscoverage['js/vs_fx.js'][2878]++;
    if (((! this._owner) || (! this._owner.view))) {
      _$jscoverage['js/vs_fx.js'][2878]++;
      return;
    }
    _$jscoverage['js/vs_fx.js'][2880]++;
    if (this._owner_handler_event_extended) {
      _$jscoverage['js/vs_fx.js'][2882]++;
      this._owner.view.removeEventListener(core.POINTER_START, this._owner, false);
      _$jscoverage['js/vs_fx.js'][2883]++;
      this._owner.handleEvent = this._owner_handler_event;
      _$jscoverage['js/vs_fx.js'][2885]++;
      this._owner_handler_event_extended = false;
    }
  }
}), get: (function () {
  _$jscoverage['js/vs_fx.js'][2896]++;
  return this._is_tactile;
})}, "animationDuration": {set: (function (time) {
  _$jscoverage['js/vs_fx.js'][2907]++;
  if ((! time)) {
    _$jscoverage['js/vs_fx.js'][2907]++;
    time = 0;
  }
  _$jscoverage['js/vs_fx.js'][2908]++;
  if ((! util.isNumber(time))) {
    _$jscoverage['js/vs_fx.js'][2908]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][2908]++;
  ;
  _$jscoverage['js/vs_fx.js'][2910]++;
  this._animation_duration = time;
})}});
  _$jscoverage['js/vs_fx.js'][2918]++;
  fx.StackController = StackController;
  _$jscoverage['js/vs_fx.js'][2995]++;
  function SlideController(owner) {
    _$jscoverage['js/vs_fx.js'][2997]++;
    this.parent = StackController;
    _$jscoverage['js/vs_fx.js'][2998]++;
    this.parent(owner);
    _$jscoverage['js/vs_fx.js'][2999]++;
    this.constructor = SlideController;
    _$jscoverage['js/vs_fx.js'][3001]++;
    if ((! arguments.length)) {
      _$jscoverage['js/vs_fx.js'][3001]++;
      return;
    }
    _$jscoverage['js/vs_fx.js'][3003]++;
    this._transition_out_1 = new TranslateAnimation(0, 0, 0);
    _$jscoverage['js/vs_fx.js'][3004]++;
    this._transition_out_2 = new TranslateAnimation(0, 0, 0);
    _$jscoverage['js/vs_fx.js'][3005]++;
    this._transition_clear = new TranslateAnimation(0, 0, 0);
    _$jscoverage['js/vs_fx.js'][3007]++;
    this.animationDuration = SlideController.ANIMATION_DURATION;
}
  _$jscoverage['js/vs_fx.js'][3015]++;
  SlideController.ANIMATION_DURATION = 500;
  _$jscoverage['js/vs_fx.js'][3023]++;
  SlideController.HORIZONTAL = 0;
  _$jscoverage['js/vs_fx.js'][3031]++;
  SlideController.VERTICAL = 1;
  _$jscoverage['js/vs_fx.js'][3033]++;
  SlideController.prototype = {_delta: 0, _orientation: SlideController.HORIZONTAL, _transition_out_1: null, _transition_out_2: null, _transition_clear: null, _updateViewSize: (function () {
  _$jscoverage['js/vs_fx.js'][3082]++;
  var size = this.viewSize, i, state_id, state, transform;
  _$jscoverage['js/vs_fx.js'][3083]++;
  if ((this._orientation === SlideController.HORIZONTAL)) {
    _$jscoverage['js/vs_fx.js'][3085]++;
    this._transition_out_1.x = (- size[0]);
    _$jscoverage['js/vs_fx.js'][3086]++;
    this._transition_out_1.y = 0;
    _$jscoverage['js/vs_fx.js'][3087]++;
    this._transition_out_2.x = size[0];
    _$jscoverage['js/vs_fx.js'][3088]++;
    this._transition_out_2.y = 0;
  }
  else {
    _$jscoverage['js/vs_fx.js'][3090]++;
    if ((this._orientation === SlideController.VERTICAL)) {
      _$jscoverage['js/vs_fx.js'][3092]++;
      this._transition_out_1.x = 0;
      _$jscoverage['js/vs_fx.js'][3093]++;
      this._transition_out_1.y = (- size[1]);
      _$jscoverage['js/vs_fx.js'][3094]++;
      this._transition_out_2.x = 0;
      _$jscoverage['js/vs_fx.js'][3095]++;
      this._transition_out_2.y = size[1];
    }
  }
  _$jscoverage['js/vs_fx.js'][3099]++;
  if ((this._orientation === SlideController.HORIZONTAL)) {
    _$jscoverage['js/vs_fx.js'][3101]++;
    transform = ("translate3D(-" + size[0] + "px,0,0)");
  }
  else {
    _$jscoverage['js/vs_fx.js'][3103]++;
    if ((this._orientation === SlideController.VERTICAL)) {
      _$jscoverage['js/vs_fx.js'][3105]++;
      transform = ("translate3D(0,-" + size[1] + "px,0)");
    }
  }
  _$jscoverage['js/vs_fx.js'][3108]++;
  for (i = 0; (i < this._states_array.length); (i++)) {
    _$jscoverage['js/vs_fx.js'][3110]++;
    state_id = this._states_array[i];
    _$jscoverage['js/vs_fx.js'][3111]++;
    state = this._fsm._list_of_state[state_id];
    _$jscoverage['js/vs_fx.js'][3113]++;
    if (((! state) || (! state.comp))) {
      _$jscoverage['js/vs_fx.js'][3113]++;
      continue;
    }
    _$jscoverage['js/vs_fx.js'][3115]++;
    if ((this._fsm._current_state === state_id)) {
      _$jscoverage['js/vs_fx.js'][3118]++;
      if ((this._orientation === SlideController.HORIZONTAL)) {
        _$jscoverage['js/vs_fx.js'][3120]++;
        transform = ("translate3D(" + size[0] + "px,0,0)");
      }
      else {
        _$jscoverage['js/vs_fx.js'][3122]++;
        if ((this._orientation === SlideController.VERTICAL)) {
          _$jscoverage['js/vs_fx.js'][3124]++;
          transform = ("translate3D(0," + size[1] + "px,0)");
        }
      }
      _$jscoverage['js/vs_fx.js'][3128]++;
      state.comp.view.style.webkitTransitionDuration = "0";
      _$jscoverage['js/vs_fx.js'][3129]++;
      setElementTransform(state.comp.view, "translate3D(0,0,0)");
      _$jscoverage['js/vs_fx.js'][3130]++;
      continue;
    }
    _$jscoverage['js/vs_fx.js'][3133]++;
    state.comp.view.style.webkitTransitionDuration = "0";
    _$jscoverage['js/vs_fx.js'][3134]++;
    setElementTransform(state.comp.view, transform);
}
}), push: (function (comp, data, extension, bindings) {
  _$jscoverage['js/vs_fx.js'][3165]++;
  if ((! comp)) {
    _$jscoverage['js/vs_fx.js'][3165]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][3166]++;
  if ((! data)) {
    _$jscoverage['js/vs_fx.js'][3166]++;
    data = {};
  }
  _$jscoverage['js/vs_fx.js'][3168]++;
  var state_id = Controller.prototype.push.call(this, comp, data, extension, bindings);
  _$jscoverage['js/vs_fx.js'][3170]++;
  if ((! state_id)) {
    _$jscoverage['js/vs_fx.js'][3170]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][3172]++;
  this._states_array.push(state_id);
  _$jscoverage['js/vs_fx.js'][3173]++;
  (this.__nb_panels++);
  _$jscoverage['js/vs_fx.js'][3176]++;
  if ((this.__nb_panels === 1)) {
    _$jscoverage['js/vs_fx.js'][3178]++;
    this.initialComponent = state_id;
    _$jscoverage['js/vs_fx.js'][3179]++;
    this._last_comp_id = state_id;
    _$jscoverage['js/vs_fx.js'][3181]++;
    return state_id;
  }
  _$jscoverage['js/vs_fx.js'][3184]++;
  this.addTransition(this._last_comp_id, state_id, StackController.NEXT, this._transition_out_1, this._transition_clear);
  _$jscoverage['js/vs_fx.js'][3186]++;
  this.addTransition(state_id, this._last_comp_id, StackController.PRED, this._transition_out_2, this._transition_clear);
  _$jscoverage['js/vs_fx.js'][3192]++;
  state = this._fsm._list_of_state[state_id];
  _$jscoverage['js/vs_fx.js'][3193]++;
  if ((! state)) {
    _$jscoverage['js/vs_fx.js'][3195]++;
    console.error("Unknown error in vs.fx.StackController.push");
    _$jscoverage['js/vs_fx.js'][3196]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][3198]++;
  if ((this._last_comp_id === this._initial_component)) {
    _$jscoverage['js/vs_fx.js'][3200]++;
    if ((! state.comp)) {
      _$jscoverage['js/vs_fx.js'][3202]++;
      state.comp = this._owner.createAndAddComponent(state.comp_name, state.init_data, extension);
      _$jscoverage['js/vs_fx.js'][3205]++;
      state.comp.configure(state.init_data);
      _$jscoverage['js/vs_fx.js'][3206]++;
      state.comp.setStyle("position", "absolute");
      _$jscoverage['js/vs_fx.js'][3207]++;
      if ((state.comp && state.comp.propertiesDidChange)) {
        _$jscoverage['js/vs_fx.js'][3209]++;
        state.comp.propertiesDidChange();
      }
      _$jscoverage['js/vs_fx.js'][3211]++;
      state.comp.propertyChange();
    }
    _$jscoverage['js/vs_fx.js'][3214]++;
    state.comp.show();
    _$jscoverage['js/vs_fx.js'][3215]++;
    state.comp.setStyle("z-index", this.__nb_panels);
    _$jscoverage['js/vs_fx.js'][3216]++;
    this.configureNewComponent(state.comp);
  }
  else {
    _$jscoverage['js/vs_fx.js'][3220]++;
    if (state.comp) {
      _$jscoverage['js/vs_fx.js'][3222]++;
      state.comp.setStyle("z-index", this.__nb_panels);
      _$jscoverage['js/vs_fx.js'][3223]++;
      this.configureNewComponent(state.comp);
    }
  }
  _$jscoverage['js/vs_fx.js'][3227]++;
  this._last_comp_id = state_id;
  _$jscoverage['js/vs_fx.js'][3228]++;
  return state_id;
}), configureNewComponent: (function (comp) {
  _$jscoverage['js/vs_fx.js'][3237]++;
  var transform, size;
  _$jscoverage['js/vs_fx.js'][3238]++;
  size = this.viewSize;
  _$jscoverage['js/vs_fx.js'][3239]++;
  if ((this._orientation === SlideController.HORIZONTAL)) {
    _$jscoverage['js/vs_fx.js'][3241]++;
    transform = ("translate3D(" + size[0] + "px,0,0)");
  }
  else {
    _$jscoverage['js/vs_fx.js'][3243]++;
    if ((this._orientation === SlideController.VERTICAL)) {
      _$jscoverage['js/vs_fx.js'][3245]++;
      transform = ("translate3D(0," + size[1] + "px,0)");
    }
  }
  _$jscoverage['js/vs_fx.js'][3248]++;
  comp.view.style.webkitTransitionDuration = "0";
  _$jscoverage['js/vs_fx.js'][3249]++;
  setElementTransform(comp.view, transform);
}), handleEvent: (function (event) {
  _$jscoverage['js/vs_fx.js'][3261]++;
  var t_ok = false, size = this.size, duration = this.__controller__._animation_duration;
  _$jscoverage['js/vs_fx.js'][3264]++;
  if ((event.type === core.POINTER_START)) {
    _$jscoverage['js/vs_fx.js'][3266]++;
    if ((this.__controller__._orientation === SlideController.HORIZONTAL)) {
      _$jscoverage['js/vs_fx.js'][3268]++;
      if (event.changedTouches) {
        _$jscoverage['js/vs_fx.js'][3269]++;
        this.__pos = event.changedTouches[0].clientX;
      }
      else {
        _$jscoverage['js/vs_fx.js'][3271]++;
        this.__pos = event.clientX;
      }
    }
    else {
      _$jscoverage['js/vs_fx.js'][3275]++;
      if (event.changedTouches) {
        _$jscoverage['js/vs_fx.js'][3276]++;
        this.__pos = event.changedTouches[0].clientY;
      }
      else {
        _$jscoverage['js/vs_fx.js'][3278]++;
        this.__pos = event.clientY;
      }
    }
    _$jscoverage['js/vs_fx.js'][3281]++;
    document.addEventListener(core.POINTER_END, this, true);
    _$jscoverage['js/vs_fx.js'][3282]++;
    document.addEventListener(core.POINTER_MOVE, this, true);
    _$jscoverage['js/vs_fx.js'][3284]++;
    this.animationDuration = 0;
    _$jscoverage['js/vs_fx.js'][3285]++;
    this.__delta = 0;
  }
  else {
    _$jscoverage['js/vs_fx.js'][3287]++;
    if ((event.type === core.POINTER_MOVE)) {
      _$jscoverage['js/vs_fx.js'][3289]++;
      event.preventDefault();
      _$jscoverage['js/vs_fx.js'][3290]++;
      if ((this.__controller__._orientation === SlideController.HORIZONTAL)) {
        _$jscoverage['js/vs_fx.js'][3292]++;
        if (event.changedTouches) {
          _$jscoverage['js/vs_fx.js'][3293]++;
          this.__delta = (event.changedTouches[0].clientX - this.__pos);
        }
        else {
          _$jscoverage['js/vs_fx.js'][3295]++;
          this.__delta = (event.clientX - this.__pos);
        }
      }
      else {
        _$jscoverage['js/vs_fx.js'][3299]++;
        if (event.changedTouches) {
          _$jscoverage['js/vs_fx.js'][3300]++;
          this.__delta = (event.changedTouches[0].clientY - this.__pos);
        }
        else {
          _$jscoverage['js/vs_fx.js'][3302]++;
          this.__delta = (event.clientY - this.__pos);
        }
      }
    }
    else {
      _$jscoverage['js/vs_fx.js'][3305]++;
      if ((event.type === core.POINTER_END)) {
        _$jscoverage['js/vs_fx.js'][3307]++;
        if ((this.__delta > 50)) {
          _$jscoverage['js/vs_fx.js'][3309]++;
          t_ok = this.__controller__.goToPreviousView();
        }
        else {
          _$jscoverage['js/vs_fx.js'][3311]++;
          if ((this.__delta < -50)) {
            _$jscoverage['js/vs_fx.js'][3313]++;
            t_ok = this.__controller__.goToNextView();
          }
        }
        _$jscoverage['js/vs_fx.js'][3315]++;
        if ((! t_ok)) {
          _$jscoverage['js/vs_fx.js'][3317]++;
          if ((this.__controller__._orientation === SlideController.HORIZONTAL)) {
            _$jscoverage['js/vs_fx.js'][3319]++;
            duration = Math.floor(((duration * this.__delta) / size[0]));
            _$jscoverage['js/vs_fx.js'][3320]++;
            this.animationDuration = duration;
          }
          else {
            _$jscoverage['js/vs_fx.js'][3324]++;
            duration = Math.floor(((duration * this.__delta) / size[1]));
            _$jscoverage['js/vs_fx.js'][3325]++;
            this.animationDuration = duration;
          }
        }
        _$jscoverage['js/vs_fx.js'][3329]++;
        document.removeEventListener(core.POINTER_END, this, true);
        _$jscoverage['js/vs_fx.js'][3330]++;
        document.removeEventListener(core.POINTER_MOVE, this, true);
      }
    }
  }
}), refresh: (function () {
  _$jscoverage['js/vs_fx.js'][3340]++;
  StackController.prototype.refresh.call(this);
  _$jscoverage['js/vs_fx.js'][3341]++;
  this._updateViewSize();
})};
  _$jscoverage['js/vs_fx.js'][3452]++;
  util.extendClass(SlideController, StackController);
  _$jscoverage['js/vs_fx.js'][3458]++;
  util.defineClassProperties(SlideController, {"orientation": {set: (function (v) {
  _$jscoverage['js/vs_fx.js'][3469]++;
  var state, state_id, i = 0, pos = 0;
  _$jscoverage['js/vs_fx.js'][3471]++;
  if (((v !== SlideController.HORIZONTAL) && (v !== SlideController.VERTICAL))) {
    _$jscoverage['js/vs_fx.js'][3472]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][3474]++;
  this._orientation = v;
  _$jscoverage['js/vs_fx.js'][3475]++;
  this._updateViewSize();
}), get: (function () {
  _$jscoverage['js/vs_fx.js'][3484]++;
  return this._orientation;
})}, "animationDuration": {set: (function (v) {
  _$jscoverage['js/vs_fx.js'][3495]++;
  if ((! v)) {
    _$jscoverage['js/vs_fx.js'][3495]++;
    v = 0;
  }
  _$jscoverage['js/vs_fx.js'][3496]++;
  if ((! util.isNumber(v))) {
    _$jscoverage['js/vs_fx.js'][3496]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][3496]++;
  ;
  _$jscoverage['js/vs_fx.js'][3498]++;
  this._animation_duration = v;
  _$jscoverage['js/vs_fx.js'][3499]++;
  this._transition_out_1.duration = (this._animation_duration + "ms");
  _$jscoverage['js/vs_fx.js'][3500]++;
  this._transition_out_2.duration = (this._animation_duration + "ms");
  _$jscoverage['js/vs_fx.js'][3501]++;
  this._transition_clear.duration = (this._animation_duration + "ms");
})}});
  _$jscoverage['js/vs_fx.js'][3509]++;
  fx.SlideController = SlideController;
  _$jscoverage['js/vs_fx.js'][3631]++;
  function NavigationController(owner, navBar, type) {
    _$jscoverage['js/vs_fx.js'][3633]++;
    this.parent = Controller;
    _$jscoverage['js/vs_fx.js'][3634]++;
    this.parent(owner);
    _$jscoverage['js/vs_fx.js'][3635]++;
    this.constructor = NavigationController;
    _$jscoverage['js/vs_fx.js'][3637]++;
    if ((! arguments.length)) {
      _$jscoverage['js/vs_fx.js'][3637]++;
      return;
    }
    _$jscoverage['js/vs_fx.js'][3639]++;
    if (((type == NavigationController.NO_ANIMATION) || (type == NavigationController.CARD_ANIMATION) || (type == NavigationController.SLIDE_ANIMATION))) {
      _$jscoverage['js/vs_fx.js'][3642]++;
      this._animation_type = type;
    }
    else {
      _$jscoverage['js/vs_fx.js'][3645]++;
      this._animation_type = NavigationController.DEFAULT_ANIMATION;
    }
    _$jscoverage['js/vs_fx.js'][3647]++;
    this.setNavigationBar(navBar);
    _$jscoverage['js/vs_fx.js'][3649]++;
    this.__nav_bar_states = {};
}
  _$jscoverage['js/vs_fx.js'][3661]++;
  NavigationController.NO_ANIMATION = 0;
  _$jscoverage['js/vs_fx.js'][3668]++;
  NavigationController.CARD_ANIMATION = 1;
  _$jscoverage['js/vs_fx.js'][3677]++;
  NavigationController.SLIDE_ANIMATION = 2;
  _$jscoverage['js/vs_fx.js'][3684]++;
  NavigationController.DEFAULT_ANIMATION = NavigationController.SLIDE_ANIMATION;
  _$jscoverage['js/vs_fx.js'][3690]++;
  NavigationController.BACK = "back";
  _$jscoverage['js/vs_fx.js'][3692]++;
  NavigationController.prototype = {_nav_bar: null, __nav_bar_states: null, _animation_type: NavigationController.DEFAULT_ANIMATION, destructor: (function () {
  _$jscoverage['js/vs_fx.js'][3722]++;
  Controller.prototype.destructor.call(this);
}), initComponent: (function () {
  _$jscoverage['js/vs_fx.js'][3731]++;
  Controller.prototype.initComponent.call(this);
  _$jscoverage['js/vs_fx.js'][3733]++;
  var size = this._owner.size;
  _$jscoverage['js/vs_fx.js'][3735]++;
  this.__translate_in_right = new TranslateAnimation(0);
  _$jscoverage['js/vs_fx.js'][3736]++;
  this.__translate_out_right = new TranslateAnimation(size[0]);
  _$jscoverage['js/vs_fx.js'][3737]++;
  this.__translate_out_left = new TranslateAnimation((- size[0]));
  _$jscoverage['js/vs_fx.js'][3738]++;
  this.__translate_in_left = new TranslateAnimation(0);
}), setNavigationBar: (function (navBar) {
  _$jscoverage['js/vs_fx.js'][3751]++;
  if (((! navBar) || ((! navBar) instanceof ui.NavigationBar))) {
    _$jscoverage['js/vs_fx.js'][3751]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][3753]++;
  this._nav_bar = navBar;
}), refresh: (function () {
  _$jscoverage['js/vs_fx.js'][3762]++;
  Controller.prototype.refresh.call(this);
  _$jscoverage['js/vs_fx.js'][3763]++;
  this._updateViewSize();
}), _updateViewSize: (function () {
  _$jscoverage['js/vs_fx.js'][3772]++;
  var size = this.viewSize, i, state_id, state, transform;
  _$jscoverage['js/vs_fx.js'][3774]++;
  this.__translate_out_left.x = (- size[0]);
  _$jscoverage['js/vs_fx.js'][3775]++;
  this.__translate_out_right.x = size[0];
}), push: (function (comp, data, bindings) {
  _$jscoverage['js/vs_fx.js'][3815]++;
  if ((! comp)) {
    _$jscoverage['js/vs_fx.js'][3815]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][3816]++;
  if ((! data)) {
    _$jscoverage['js/vs_fx.js'][3816]++;
    data = {};
  }
  _$jscoverage['js/vs_fx.js'][3818]++;
  var size, state_id = Controller.prototype.push.call(this, comp, data, null, bindings);
  _$jscoverage['js/vs_fx.js'][3820]++;
  if ((! state_id)) {
    _$jscoverage['js/vs_fx.js'][3820]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][3822]++;
  var state = this._fsm._list_of_state[state_id];
  _$jscoverage['js/vs_fx.js'][3823]++;
  if ((state && state.comp)) {
    _$jscoverage['js/vs_fx.js'][3825]++;
    this.configureNewComponent(state.comp);
  }
  _$jscoverage['js/vs_fx.js'][3828]++;
  return state_id;
}), configureNavigationBarState: (function (state_id, configurations) {
  _$jscoverage['js/vs_fx.js'][3842]++;
  var state = this._fsm._list_of_state[state_id], comp, i, l, conf, components = [], state_conf = {};
  _$jscoverage['js/vs_fx.js'][3844]++;
  if (((! state) || (! configurations))) {
    _$jscoverage['js/vs_fx.js'][3845]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][3847]++;
  for (((i = 0), (l = configurations.length)); (i < l); (i++)) {
    _$jscoverage['js/vs_fx.js'][3849]++;
    conf = configurations[i];
    _$jscoverage['js/vs_fx.js'][3850]++;
    if ((! conf)) {
      _$jscoverage['js/vs_fx.js'][3850]++;
      continue;
    }
    _$jscoverage['js/vs_fx.js'][3852]++;
    comp = conf.comp;
    _$jscoverage['js/vs_fx.js'][3853]++;
    if ((! comp)) {
      _$jscoverage['js/vs_fx.js'][3853]++;
      continue;
    }
    _$jscoverage['js/vs_fx.js'][3856]++;
    if (util.isString(comp)) {
      _$jscoverage['js/vs_fx.js'][3857]++;
      comp = core.Object._obs[comp];
    }
    _$jscoverage['js/vs_fx.js'][3859]++;
    if (((! comp) instanceof vs.ui.View)) {
      _$jscoverage['js/vs_fx.js'][3860]++;
      continue;
    }
    _$jscoverage['js/vs_fx.js'][3862]++;
    components.push(comp);
    _$jscoverage['js/vs_fx.js'][3863]++;
    if (conf.properties) {
      _$jscoverage['js/vs_fx.js'][3865]++;
      state_conf[comp.id] = conf.properties;
    }
}
  _$jscoverage['js/vs_fx.js'][3869]++;
  this.__nav_bar_states[state_id] = state_conf;
  _$jscoverage['js/vs_fx.js'][3870]++;
  if (this._nav_bar) {
    _$jscoverage['js/vs_fx.js'][3872]++;
    this._nav_bar.setStateItems(state_id, components);
  }
}), configureTransition: (function (from, to, on) {
  _$jscoverage['js/vs_fx.js'][3892]++;
  if (((! from) || (! this._fsm.existState(from)))) {
    _$jscoverage['js/vs_fx.js'][3892]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][3893]++;
  if (((! to) || (! this._fsm.existState(to)))) {
    _$jscoverage['js/vs_fx.js'][3893]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][3894]++;
  if ((! on)) {
    _$jscoverage['js/vs_fx.js'][3894]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][3896]++;
  if ((! this._fsm.existInput(on))) {
    _$jscoverage['js/vs_fx.js'][3896]++;
    this._fsm.addInput(on);
  }
  _$jscoverage['js/vs_fx.js'][3898]++;
  if ((this._animation_type === NavigationController.SLIDE_ANIMATION)) {
    _$jscoverage['js/vs_fx.js'][3900]++;
    this.addTransition(from, to, on, this.__translate_out_left, this.__translate_in_right);
    _$jscoverage['js/vs_fx.js'][3903]++;
    this.addTransition(to, from, NavigationController.BACK, this.__translate_out_right, this.__translate_in_left);
    _$jscoverage['js/vs_fx.js'][3906]++;
    this.__translate_in_left.duration = "300ms";
    _$jscoverage['js/vs_fx.js'][3907]++;
    this.__translate_out_left.duration = "300ms";
    _$jscoverage['js/vs_fx.js'][3908]++;
    this.__translate_in_right.duration = "300ms";
    _$jscoverage['js/vs_fx.js'][3909]++;
    this.__translate_out_right.duration = "300ms";
  }
  else {
    _$jscoverage['js/vs_fx.js'][3911]++;
    if ((this._animation_type === NavigationController.CARD_ANIMATION)) {
      _$jscoverage['js/vs_fx.js'][3913]++;
      this.addTransition(from, to, on, null, this.__translate_in_right);
      _$jscoverage['js/vs_fx.js'][3916]++;
      this.addTransition(to, from, NavigationController.BACK, this.__translate_out_right, null);
      _$jscoverage['js/vs_fx.js'][3919]++;
      this.__translate_in_right.duration = "300ms";
      _$jscoverage['js/vs_fx.js'][3920]++;
      this.__translate_out_right.duration = "300ms";
    }
    else {
      _$jscoverage['js/vs_fx.js'][3924]++;
      this.addTransition(from, to, on, null, this.__translate_in_right);
      _$jscoverage['js/vs_fx.js'][3927]++;
      this.addTransition(to, from, NavigationController.BACK, this.__translate_out_right, null);
      _$jscoverage['js/vs_fx.js'][3930]++;
      this.__translate_in_right.duration = "0";
      _$jscoverage['js/vs_fx.js'][3931]++;
      this.__translate_out_right.duration = "0";
    }
  }
}), configureNewComponent: (function (comp) {
  _$jscoverage['js/vs_fx.js'][3946]++;
  var size = this.viewSize;
  _$jscoverage['js/vs_fx.js'][3948]++;
  comp.translation = [size[0], 0];
}), goTo: (function (state_id, output, event, instant) {
  _$jscoverage['js/vs_fx.js'][3966]++;
  var ok = Controller.prototype.goTo.call(this, state_id, output, event, instant);
  _$jscoverage['js/vs_fx.js'][3969]++;
  if ((ok && this.owner._nav_bar)) {
    _$jscoverage['js/vs_fx.js'][3971]++;
    this.owner._nav_bar.changeState(state_id, this.owner.__nav_bar_states[state_id]);
  }
})};
  _$jscoverage['js/vs_fx.js'][3976]++;
  util.extendClass(NavigationController, StackController);
  _$jscoverage['js/vs_fx.js'][3982]++;
  util.defineClassProperties(NavigationController, {"viewSize": {set: (function (v) {
  _$jscoverage['js/vs_fx.js'][3992]++;
  if ((! v)) {
    _$jscoverage['js/vs_fx.js'][3992]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][3993]++;
  if (((! util.isArray(v)) || (v.length !== 2))) {
    _$jscoverage['js/vs_fx.js'][3993]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][3994]++;
  if (((! util.isNumber(v[0])) || (! util.isNumber(v[1])))) {
    _$jscoverage['js/vs_fx.js'][3994]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][3996]++;
  if ((! this._view_size)) {
    _$jscoverage['js/vs_fx.js'][3997]++;
    this._view_size = [];
  }
  _$jscoverage['js/vs_fx.js'][3999]++;
  this._view_size[0] = v[0];
  _$jscoverage['js/vs_fx.js'][4000]++;
  this._view_size[1] = v[1];
  _$jscoverage['js/vs_fx.js'][4002]++;
  this._updateViewSize();
}), get: (function () {
  _$jscoverage['js/vs_fx.js'][4011]++;
  if ((! this._view_size)) {
    _$jscoverage['js/vs_fx.js'][4013]++;
    return this._owner.size;
  }
  _$jscoverage['js/vs_fx.js'][4015]++;
  return this._view_size.slice();
})}, "initialComponent": {set: (function (comp_id) {
  _$jscoverage['js/vs_fx.js'][4028]++;
  if ((! comp_id)) {
    _$jscoverage['js/vs_fx.js'][4030]++;
    this._initial_component = undefined;
    _$jscoverage['js/vs_fx.js'][4031]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][4034]++;
  if ((! this._fsm.existState(comp_id))) {
    _$jscoverage['js/vs_fx.js'][4034]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][4037]++;
  this._initial_component = comp_id;
  _$jscoverage['js/vs_fx.js'][4038]++;
  this._fsm.initialState = comp_id;
  _$jscoverage['js/vs_fx.js'][4040]++;
  this._fsm.goTo(comp_id);
  _$jscoverage['js/vs_fx.js'][4041]++;
  var state = this._fsm._list_of_state[comp_id];
  _$jscoverage['js/vs_fx.js'][4042]++;
  if ((state && state.comp)) {
    _$jscoverage['js/vs_fx.js'][4044]++;
    state.comp.translation = [0, 0];
  }
}), get: (function () {
  _$jscoverage['js/vs_fx.js'][4053]++;
  return this._initial_component;
})}});
  _$jscoverage['js/vs_fx.js'][4061]++;
  fx.NavigationController = NavigationController;
  _$jscoverage['js/vs_fx.js'][4158]++;
  function CardController(owner) {
    _$jscoverage['js/vs_fx.js'][4160]++;
    this.parent = StackController;
    _$jscoverage['js/vs_fx.js'][4161]++;
    this.parent(owner);
    _$jscoverage['js/vs_fx.js'][4162]++;
    this.constructor = CardController;
    _$jscoverage['js/vs_fx.js'][4164]++;
    if (owner) {
      _$jscoverage['js/vs_fx.js'][4166]++;
      this._transition_out = new TranslateAnimation(0, 0, 0);
      _$jscoverage['js/vs_fx.js'][4167]++;
      this._transition_clear = new TranslateAnimation(0, 0, 0);
      _$jscoverage['js/vs_fx.js'][4169]++;
      this.animationDuration = CardController.ANIMATION_DURATION;
    }
}
  _$jscoverage['js/vs_fx.js'][4177]++;
  CardController.ANIMATION_DURATION = 500;
  _$jscoverage['js/vs_fx.js'][4184]++;
  CardController.LEFT_OUT = 0;
  _$jscoverage['js/vs_fx.js'][4191]++;
  CardController.RIGHT_OUT = 1;
  _$jscoverage['js/vs_fx.js'][4198]++;
  CardController.TOP_OUT = 2;
  _$jscoverage['js/vs_fx.js'][4205]++;
  CardController.BOTTOM_OUT = 3;
  _$jscoverage['js/vs_fx.js'][4207]++;
  CardController.prototype = {_direction: CardController.LEFT_OUT, _transition_out: null, _transition_clear: null, _updateViewSize: (function () {
  _$jscoverage['js/vs_fx.js'][4244]++;
  var size = this.viewSize;
  _$jscoverage['js/vs_fx.js'][4245]++;
  if ((! this._transition_out)) {
    _$jscoverage['js/vs_fx.js'][4245]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][4247]++;
  if ((this._direction === CardController.LEFT_OUT)) {
    _$jscoverage['js/vs_fx.js'][4249]++;
    this._transition_out.x = (- size[0]);
    _$jscoverage['js/vs_fx.js'][4250]++;
    this._transition_out.y = 0;
  }
  else {
    _$jscoverage['js/vs_fx.js'][4252]++;
    if ((this._direction === CardController.RIGHT_OUT)) {
      _$jscoverage['js/vs_fx.js'][4254]++;
      this._transition_out.x = size[0];
      _$jscoverage['js/vs_fx.js'][4255]++;
      this._transition_out.y = 0;
    }
    else {
      _$jscoverage['js/vs_fx.js'][4257]++;
      if ((this._direction === CardController.BOTTOM_OUT)) {
        _$jscoverage['js/vs_fx.js'][4259]++;
        this._transition_out.x = 0;
        _$jscoverage['js/vs_fx.js'][4260]++;
        this._transition_out.y = size[1];
      }
      else {
        _$jscoverage['js/vs_fx.js'][4264]++;
        this._transition_out.x = 0;
        _$jscoverage['js/vs_fx.js'][4265]++;
        this._transition_out.y = (- size[1]);
      }
    }
  }
}), push: (function (comp, data, extension, bindings) {
  _$jscoverage['js/vs_fx.js'][4300]++;
  if ((! comp)) {
    _$jscoverage['js/vs_fx.js'][4300]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][4301]++;
  if ((! data)) {
    _$jscoverage['js/vs_fx.js'][4301]++;
    data = {};
  }
  _$jscoverage['js/vs_fx.js'][4303]++;
  var state_id = Controller.prototype.push.call(this, comp, data, extension, bindings);
  _$jscoverage['js/vs_fx.js'][4305]++;
  if ((! state_id)) {
    _$jscoverage['js/vs_fx.js'][4305]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][4307]++;
  this._states_array.push(state_id);
  _$jscoverage['js/vs_fx.js'][4308]++;
  (this.__nb_panels++);
  _$jscoverage['js/vs_fx.js'][4311]++;
  if ((this.__nb_panels === 1)) {
    _$jscoverage['js/vs_fx.js'][4313]++;
    this.initialComponent = state_id;
    _$jscoverage['js/vs_fx.js'][4314]++;
    this._last_comp_id = state_id;
    _$jscoverage['js/vs_fx.js'][4316]++;
    return state_id;
  }
  _$jscoverage['js/vs_fx.js'][4319]++;
  this.addTransition(this._last_comp_id, state_id, StackController.NEXT, null, this._transition_clear);
  _$jscoverage['js/vs_fx.js'][4321]++;
  this.addTransition(state_id, this._last_comp_id, StackController.PRED, this._transition_out, null);
  _$jscoverage['js/vs_fx.js'][4327]++;
  state = this._fsm._list_of_state[state_id];
  _$jscoverage['js/vs_fx.js'][4328]++;
  if ((! state)) {
    _$jscoverage['js/vs_fx.js'][4330]++;
    console.error("Unknown error in vs.fx.StackController.push");
    _$jscoverage['js/vs_fx.js'][4331]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][4333]++;
  if ((this._last_comp_id === this._initial_component)) {
    _$jscoverage['js/vs_fx.js'][4335]++;
    if ((! state.comp)) {
      _$jscoverage['js/vs_fx.js'][4337]++;
      state.comp = this._owner.createAndAddComponent(state.comp_name, state.init_data, extension);
      _$jscoverage['js/vs_fx.js'][4340]++;
      state.comp.configure(state.init_data);
      _$jscoverage['js/vs_fx.js'][4341]++;
      state.comp.setStyle("position", "absolute");
      _$jscoverage['js/vs_fx.js'][4342]++;
      if ((state.comp && state.comp.propertiesDidChange)) {
        _$jscoverage['js/vs_fx.js'][4344]++;
        state.comp.propertiesDidChange();
      }
      _$jscoverage['js/vs_fx.js'][4346]++;
      state.comp.propertyChange();
    }
    _$jscoverage['js/vs_fx.js'][4349]++;
    state.comp.show();
    _$jscoverage['js/vs_fx.js'][4350]++;
    state.comp.setStyle("z-index", this.__nb_panels);
    _$jscoverage['js/vs_fx.js'][4351]++;
    this.configureNewComponent(state.comp);
  }
  else {
    _$jscoverage['js/vs_fx.js'][4355]++;
    if (state.comp) {
      _$jscoverage['js/vs_fx.js'][4357]++;
      state.comp.setStyle("z-index", this.__nb_panels);
      _$jscoverage['js/vs_fx.js'][4358]++;
      this.configureNewComponent(state.comp);
    }
  }
  _$jscoverage['js/vs_fx.js'][4362]++;
  this._last_comp_id = state_id;
  _$jscoverage['js/vs_fx.js'][4363]++;
  return state_id;
}), configureNewComponent: (function (comp) {
  _$jscoverage['js/vs_fx.js'][4372]++;
  var transform, size;
  _$jscoverage['js/vs_fx.js'][4373]++;
  size = this.viewSize;
  _$jscoverage['js/vs_fx.js'][4374]++;
  if (SUPPORT_3D_TRANSFORM) {
    _$jscoverage['js/vs_fx.js'][4374]++;
    transform = "translate3d";
  }
  else {
    _$jscoverage['js/vs_fx.js'][4375]++;
    transform = "translate";
  }
  _$jscoverage['js/vs_fx.js'][4376]++;
  if ((this._direction === CardController.LEFT_OUT)) {
    _$jscoverage['js/vs_fx.js'][4378]++;
    transform += ("(-" + size[0] + "px,0");
  }
  else {
    _$jscoverage['js/vs_fx.js'][4380]++;
    if ((this._direction === CardController.RIGHT_OUT)) {
      _$jscoverage['js/vs_fx.js'][4382]++;
      transform += ("(" + size[0] + "px,0");
    }
    else {
      _$jscoverage['js/vs_fx.js'][4384]++;
      if ((this._direction === CardController.BOTTOM_OUT)) {
        _$jscoverage['js/vs_fx.js'][4386]++;
        transform += ("(0," + size[1] + "px");
      }
      else {
        _$jscoverage['js/vs_fx.js'][4390]++;
        transform += ("(0,-" + size[1] + "px");
      }
    }
  }
  _$jscoverage['js/vs_fx.js'][4392]++;
  if (SUPPORT_3D_TRANSFORM) {
    _$jscoverage['js/vs_fx.js'][4392]++;
    transform += ",0)";
  }
  else {
    _$jscoverage['js/vs_fx.js'][4393]++;
    transform += ")";
  }
  _$jscoverage['js/vs_fx.js'][4395]++;
  comp.view.style.webkitTransitionDuration = "0";
  _$jscoverage['js/vs_fx.js'][4396]++;
  setElementTransform(comp.view, transform);
}), handleEvent: (function (event) {
  _$jscoverage['js/vs_fx.js'][4405]++;
  var t_ok = false, state, state_before_id, state_before, transform, index;
  _$jscoverage['js/vs_fx.js'][4407]++;
  if ((event.type === core.POINTER_START)) {
    _$jscoverage['js/vs_fx.js'][4409]++;
    if (((this.__controller__._direction === CardController.LEFT_OUT) || (this.__controller__._direction === CardController.RIGHT_OUT))) {
      _$jscoverage['js/vs_fx.js'][4412]++;
      if (event.changedTouches) {
        _$jscoverage['js/vs_fx.js'][4413]++;
        this.__pos = event.changedTouches[0].clientX;
      }
      else {
        _$jscoverage['js/vs_fx.js'][4415]++;
        this.__pos = event.clientX;
      }
    }
    else {
      _$jscoverage['js/vs_fx.js'][4419]++;
      if (event.changedTouches) {
        _$jscoverage['js/vs_fx.js'][4420]++;
        this.__pos = event.changedTouches[0].clientY;
      }
      else {
        _$jscoverage['js/vs_fx.js'][4422]++;
        this.__pos = event.clientY;
      }
    }
    _$jscoverage['js/vs_fx.js'][4425]++;
    document.addEventListener(core.POINTER_END, this, true);
    _$jscoverage['js/vs_fx.js'][4426]++;
    document.addEventListener(core.POINTER_MOVE, this, true);
  }
  else {
    _$jscoverage['js/vs_fx.js'][4428]++;
    if ((event.type === core.POINTER_MOVE)) {
      _$jscoverage['js/vs_fx.js'][4430]++;
      event.preventDefault();
      _$jscoverage['js/vs_fx.js'][4431]++;
      state = this.__controller__._fsm._list_of_state[this.__controller__._fsm._current_state];
      _$jscoverage['js/vs_fx.js'][4433]++;
      index = this.__controller__._states_array.indexOf(this.__controller__._fsm._current_state);
      _$jscoverage['js/vs_fx.js'][4436]++;
      if ((index > 0)) {
        _$jscoverage['js/vs_fx.js'][4437]++;
        state_before_id = this.__controller__._states_array[(index - 1)];
      }
      _$jscoverage['js/vs_fx.js'][4439]++;
      if (((this.__controller__._direction === CardController.LEFT_OUT) || (this.__controller__._direction === CardController.RIGHT_OUT))) {
        _$jscoverage['js/vs_fx.js'][4442]++;
        if (event.changedTouches) {
          _$jscoverage['js/vs_fx.js'][4443]++;
          this.__delta = (event.changedTouches[0].clientX - this.__pos);
        }
        else {
          _$jscoverage['js/vs_fx.js'][4445]++;
          this.__delta = (event.clientX - this.__pos);
        }
        _$jscoverage['js/vs_fx.js'][4447]++;
        if (SUPPORT_3D_TRANSFORM) {
          _$jscoverage['js/vs_fx.js'][4448]++;
          transform = ("translate3d(" + this.__delta + "px,0px,0)");
        }
        else {
          _$jscoverage['js/vs_fx.js'][4449]++;
          transform = ("translate(" + this.__delta + "px,0px)");
        }
      }
      else {
        _$jscoverage['js/vs_fx.js'][4453]++;
        if (event.changedTouches) {
          _$jscoverage['js/vs_fx.js'][4454]++;
          this.__delta = (event.changedTouches[0].clientY - this.__pos);
        }
        else {
          _$jscoverage['js/vs_fx.js'][4456]++;
          this.__delta = (event.clientY - this.__pos);
        }
        _$jscoverage['js/vs_fx.js'][4458]++;
        if (SUPPORT_3D_TRANSFORM) {
          _$jscoverage['js/vs_fx.js'][4459]++;
          transform = ("translate3d(0px," + this.__delta + "px,0)");
        }
        else {
          _$jscoverage['js/vs_fx.js'][4460]++;
          transform = ("translate(0px," + this.__delta + "px)");
        }
      }
      _$jscoverage['js/vs_fx.js'][4462]++;
      if (((this.__controller__._direction === CardController.LEFT_OUT) || (this.__controller__._direction === CardController.TOP_OUT))) {
        _$jscoverage['js/vs_fx.js'][4465]++;
        if ((this.__delta < 0)) {
          _$jscoverage['js/vs_fx.js'][4467]++;
          state.comp.view.style.webkitTransitionDuration = 0;
          _$jscoverage['js/vs_fx.js'][4468]++;
          setElementTransform(state.comp.view, transform);
        }
        else {
          _$jscoverage['js/vs_fx.js'][4470]++;
          if (state_before_id) {
            _$jscoverage['js/vs_fx.js'][4472]++;
            state_before = this.__controller__._fsm._list_of_state[state_before_id];
            _$jscoverage['js/vs_fx.js'][4474]++;
            if ((state_before && state_before.comp)) {
              _$jscoverage['js/vs_fx.js'][4476]++;
              if (((this.__controller__._direction === CardController.LEFT_OUT) || (this.__controller__._direction === CardController.RIGHT_OUT))) {
                _$jscoverage['js/vs_fx.js'][4479]++;
                if (SUPPORT_3D_TRANSFORM) {
                  _$jscoverage['js/vs_fx.js'][4481]++;
                  transform = ("translate3d(" + (this.__delta - this._size[0]) + "px,0px,0)");
                }
                else {
                  _$jscoverage['js/vs_fx.js'][4484]++;
                  transform = ("translate(" + (this.__delta - this._size[0]) + "px,0px)");
                }
              }
              else {
                _$jscoverage['js/vs_fx.js'][4489]++;
                if (SUPPORT_3D_TRANSFORM) {
                  _$jscoverage['js/vs_fx.js'][4491]++;
                  transform = ("translate3d(0px," + (this.__delta - this._size[1]) + "px,0)");
                }
                else {
                  _$jscoverage['js/vs_fx.js'][4494]++;
                  transform = ("translate(0px," + (this.__delta - this._size[1]) + "px)");
                }
              }
              _$jscoverage['js/vs_fx.js'][4497]++;
              state_before.comp.view.style.webkitTransitionDuration = 0;
              _$jscoverage['js/vs_fx.js'][4498]++;
              setElementTransform(state_before.comp.view, transform);
            }
          }
        }
      }
      else {
        _$jscoverage['js/vs_fx.js'][4504]++;
        if ((this.__delta > 0)) {
          _$jscoverage['js/vs_fx.js'][4506]++;
          state.comp.view.style.webkitTransitionDuration = 0;
          _$jscoverage['js/vs_fx.js'][4507]++;
          setElementTransform(state.comp.view, transform);
        }
        else {
          _$jscoverage['js/vs_fx.js'][4509]++;
          if (state_before_id) {
            _$jscoverage['js/vs_fx.js'][4511]++;
            state_before = this.__controller__._fsm._list_of_state[state_before_id];
            _$jscoverage['js/vs_fx.js'][4512]++;
            if ((state_before && state_before.comp)) {
              _$jscoverage['js/vs_fx.js'][4514]++;
              if (((this.__controller__._direction === CardController.LEFT_OUT) || (this.__controller__._direction === CardController.RIGHT_OUT))) {
                _$jscoverage['js/vs_fx.js'][4517]++;
                if (SUPPORT_3D_TRANSFORM) {
                  _$jscoverage['js/vs_fx.js'][4519]++;
                  transform = ("translate3d(" + (this._size[0] + this.__delta) + "px,0px,0)");
                }
                else {
                  _$jscoverage['js/vs_fx.js'][4522]++;
                  transform = ("translate(" + (this._size[0] + this.__delta) + "px,0px)");
                }
              }
              else {
                _$jscoverage['js/vs_fx.js'][4527]++;
                if (SUPPORT_3D_TRANSFORM) {
                  _$jscoverage['js/vs_fx.js'][4529]++;
                  transform = ("translate3d(0px," + (this._size[1] + this.__delta) + "px,0)");
                }
                else {
                  _$jscoverage['js/vs_fx.js'][4532]++;
                  transform = ("translate(0px," + (this._size[1] + this.__delta) + "px)");
                }
              }
              _$jscoverage['js/vs_fx.js'][4535]++;
              state_before.comp.view.style.webkitTransitionDuration = 0;
              _$jscoverage['js/vs_fx.js'][4536]++;
              setElementTransform(state_before.comp.view, transform);
            }
          }
        }
      }
    }
    else {
      _$jscoverage['js/vs_fx.js'][4541]++;
      if ((event.type === core.POINTER_END)) {
        _$jscoverage['js/vs_fx.js'][4543]++;
        state = this.__controller__._fsm._list_of_state[this.__controller__._fsm._current_state];
        _$jscoverage['js/vs_fx.js'][4545]++;
        if (((this.__controller__._direction === CardController.LEFT_OUT) || (this.__controller__._direction === CardController.TOP_OUT))) {
          _$jscoverage['js/vs_fx.js'][4548]++;
          if ((this.__delta > 50)) {
            _$jscoverage['js/vs_fx.js'][4550]++;
            t_ok = this.__controller__.goToPreviousView();
          }
          else {
            _$jscoverage['js/vs_fx.js'][4552]++;
            if ((this.__delta < -50)) {
              _$jscoverage['js/vs_fx.js'][4554]++;
              t_ok = this.__controller__.goToNextView();
            }
          }
        }
        else {
          _$jscoverage['js/vs_fx.js'][4559]++;
          if ((this.__delta > 50)) {
            _$jscoverage['js/vs_fx.js'][4561]++;
            t_ok = this.__controller__.goToNextView();
          }
          else {
            _$jscoverage['js/vs_fx.js'][4563]++;
            if ((this.__delta < -50)) {
              _$jscoverage['js/vs_fx.js'][4565]++;
              t_ok = this.__controller__.goToPreviousView();
            }
          }
        }
        _$jscoverage['js/vs_fx.js'][4568]++;
        if ((! t_ok)) {
          _$jscoverage['js/vs_fx.js'][4570]++;
          index = this.__controller__._states_array.indexOf(this.__controller__._fsm._current_state);
          _$jscoverage['js/vs_fx.js'][4572]++;
          if ((index > 0)) {
            _$jscoverage['js/vs_fx.js'][4573]++;
            state_before_id = this.__controller__._states_array[(index - 1)];
          }
          _$jscoverage['js/vs_fx.js'][4575]++;
          if ((((this.__controller__._direction === CardController.LEFT_OUT) || (this.__controller__._direction === CardController.TOP_OUT)) && (this.__delta < 0))) {
            _$jscoverage['js/vs_fx.js'][4579]++;
            if (SUPPORT_3D_TRANSFORM) {
              _$jscoverage['js/vs_fx.js'][4580]++;
              transform = "translate3d(0,0,0)";
            }
            else {
              _$jscoverage['js/vs_fx.js'][4581]++;
              transform = "translate(0,0)";
            }
            _$jscoverage['js/vs_fx.js'][4583]++;
            state.comp.view.style.webkitTransitionDuration = (this.__controller__._animation_duration + "ms");
            _$jscoverage['js/vs_fx.js'][4585]++;
            setElementTransform(state.comp.view, transform);
          }
          else {
            _$jscoverage['js/vs_fx.js'][4587]++;
            if ((((this.__controller__._direction === CardController.RIGHT_OUT) || (this.__controller__._direction === CardController.BOTTOM_OUT)) && (this.__delta > 0))) {
              _$jscoverage['js/vs_fx.js'][4591]++;
              if (SUPPORT_3D_TRANSFORM) {
                _$jscoverage['js/vs_fx.js'][4592]++;
                transform = "translate3d(0,0,0)";
              }
              else {
                _$jscoverage['js/vs_fx.js'][4593]++;
                transform = "translate(0,0)";
              }
              _$jscoverage['js/vs_fx.js'][4595]++;
              state.comp.view.style.webkitTransitionDuration = (this.__controller__._animation_duration + "ms");
              _$jscoverage['js/vs_fx.js'][4597]++;
              setElementTransform(state.comp.view, transform);
            }
            else {
              _$jscoverage['js/vs_fx.js'][4599]++;
              if (state_before_id) {
                _$jscoverage['js/vs_fx.js'][4601]++;
                state_before = this.__controller__._fsm._list_of_state[state_before_id];
                _$jscoverage['js/vs_fx.js'][4602]++;
                if ((state_before && state_before.comp)) {
                  _$jscoverage['js/vs_fx.js'][4604]++;
                  if (SUPPORT_3D_TRANSFORM) {
                    _$jscoverage['js/vs_fx.js'][4604]++;
                    transform = "translate3d";
                  }
                  else {
                    _$jscoverage['js/vs_fx.js'][4605]++;
                    transform = "translate";
                  }
                  _$jscoverage['js/vs_fx.js'][4607]++;
                  if ((this.__controller__._direction === CardController.LEFT_OUT)) {
                    _$jscoverage['js/vs_fx.js'][4609]++;
                    transform = ("(-" + this._size[0] + "px,0px");
                  }
                  else {
                    _$jscoverage['js/vs_fx.js'][4611]++;
                    if ((this.__controller__._direction === CardController.RIGHT_OUT)) {
                      _$jscoverage['js/vs_fx.js'][4613]++;
                      transform = ("(" + this._size[0] + "px,0px");
                    }
                    else {
                      _$jscoverage['js/vs_fx.js'][4615]++;
                      if ((this.__controller__._direction === CardController.BOTTOM_OUT)) {
                        _$jscoverage['js/vs_fx.js'][4617]++;
                        transform = ("(0px," + this._size[1] + "px");
                      }
                      else {
                        _$jscoverage['js/vs_fx.js'][4621]++;
                        transform = ("(0px,-" + this._size[1] + "px");
                      }
                    }
                  }
                  _$jscoverage['js/vs_fx.js'][4623]++;
                  if (SUPPORT_3D_TRANSFORM) {
                    _$jscoverage['js/vs_fx.js'][4623]++;
                    transform += ",0)";
                  }
                  else {
                    _$jscoverage['js/vs_fx.js'][4624]++;
                    transform += ")";
                  }
                  _$jscoverage['js/vs_fx.js'][4626]++;
                  state_before.comp.view.style.webkitTransitionDuration = (this.__controller__._animation_duration + "ms");
                  _$jscoverage['js/vs_fx.js'][4628]++;
                  setElementTransform(state_before.comp.view, transform);
                }
              }
            }
          }
        }
        _$jscoverage['js/vs_fx.js'][4632]++;
        document.removeEventListener(core.POINTER_END, this, true);
        _$jscoverage['js/vs_fx.js'][4633]++;
        document.removeEventListener(core.POINTER_MOVE, this, true);
      }
    }
  }
})};
  _$jscoverage['js/vs_fx.js'][4637]++;
  util.extendClass(CardController, StackController);
  _$jscoverage['js/vs_fx.js'][4643]++;
  util.defineClassProperties(CardController, {"direction": {set: (function (v) {
  _$jscoverage['js/vs_fx.js'][4653]++;
  var state, state_id, i = 0, pos = 0, index, transform = "", size = this._owner.size;
  _$jscoverage['js/vs_fx.js'][4656]++;
  if (((v !== CardController.LEFT_OUT) && (v !== CardController.RIGHT_OUT) && (v !== CardController.BOTTOM_OUT) && (v !== CardController.TOP_OUT))) {
    _$jscoverage['js/vs_fx.js'][4659]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][4661]++;
  this._direction = v;
  _$jscoverage['js/vs_fx.js'][4662]++;
  this._updateViewSize();
}), get: (function () {
  _$jscoverage['js/vs_fx.js'][4671]++;
  return this._direction;
})}, "animationDuration": {set: (function (v) {
  _$jscoverage['js/vs_fx.js'][4682]++;
  if ((! v)) {
    _$jscoverage['js/vs_fx.js'][4682]++;
    v = 0;
  }
  _$jscoverage['js/vs_fx.js'][4683]++;
  if ((! util.isNumber(v))) {
    _$jscoverage['js/vs_fx.js'][4683]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][4683]++;
  ;
  _$jscoverage['js/vs_fx.js'][4685]++;
  this._animation_duration = v;
  _$jscoverage['js/vs_fx.js'][4686]++;
  if (this._transition_out) {
    _$jscoverage['js/vs_fx.js'][4687]++;
    this._transition_out.duration = (this._animation_duration + "ms");
  }
  _$jscoverage['js/vs_fx.js'][4688]++;
  if (this._transition_clear) {
    _$jscoverage['js/vs_fx.js'][4689]++;
    this._transition_clear.duration = (this._animation_duration + "ms");
  }
})}});
  _$jscoverage['js/vs_fx.js'][4699]++;
  fx.CardController = CardController;
  _$jscoverage['js/vs_fx.js'][4786]++;
  function CubicController(owner, extension) {
    _$jscoverage['js/vs_fx.js'][4788]++;
    this.parent = StackController;
    _$jscoverage['js/vs_fx.js'][4789]++;
    this.parent(owner, extension);
    _$jscoverage['js/vs_fx.js'][4790]++;
    this.constructor = CubicController;
    _$jscoverage['js/vs_fx.js'][4792]++;
    if (owner) {
      _$jscoverage['js/vs_fx.js'][4792]++;
      owner.setStyle("-webkit-transform-style", "preserve-3d");
    }
}
  _$jscoverage['js/vs_fx.js'][4799]++;
  CubicController._translate_animation = new RotateXYZAnimation(-90, 0, 0);
  _$jscoverage['js/vs_fx.js'][4800]++;
  CubicController._translate_animation.init();
  _$jscoverage['js/vs_fx.js'][4801]++;
  CubicController._translate_animation.addKeyFrame("from", {degX: 0});
  _$jscoverage['js/vs_fx.js'][4802]++;
  CubicController._translate_animation.addKeyFrame(50, {degX: -92});
  _$jscoverage['js/vs_fx.js'][4803]++;
  CubicController._translate_animation.addKeyFrame(70, {degX: -84});
  _$jscoverage['js/vs_fx.js'][4804]++;
  CubicController._translate_animation.addKeyFrame(80, {degX: -90});
  _$jscoverage['js/vs_fx.js'][4805]++;
  CubicController._translate_animation.addKeyFrame(95, {degX: -88});
  _$jscoverage['js/vs_fx.js'][4806]++;
  CubicController._translate_animation.durations = "2s";
  _$jscoverage['js/vs_fx.js'][4812]++;
  CubicController.HORIZONTAL = 0;
  _$jscoverage['js/vs_fx.js'][4818]++;
  CubicController.VERTICAL = 1;
  _$jscoverage['js/vs_fx.js'][4821]++;
  CubicController.prototype = {_orientation: CubicController.HORIZONTAL, push: (function (comp, data, bindings) {
  _$jscoverage['js/vs_fx.js'][4865]++;
  if ((! comp)) {
    _$jscoverage['js/vs_fx.js'][4865]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][4867]++;
  if ((! util.isString(comp))) {
    _$jscoverage['js/vs_fx.js'][4869]++;
    var index = this._states_array.length;
    _$jscoverage['js/vs_fx.js'][4870]++;
    comp.position = [0, 0];
    _$jscoverage['js/vs_fx.js'][4871]++;
    comp.setStyle("z-index", (1000 - index));
  }
  _$jscoverage['js/vs_fx.js'][4873]++;
  return StackController.prototype.push.call(this, comp, data, bindings);
}), handleEvent: (function (event) {
  _$jscoverage['js/vs_fx.js'][4886]++;
  var t_ok = false, state, state_before_id, state_before, transform, index;
  _$jscoverage['js/vs_fx.js'][4888]++;
  if ((event.type === core.POINTER_START)) {
    _$jscoverage['js/vs_fx.js'][4890]++;
    if ((this.__layer._orientation === CubicController.HORIZONTAL)) {
      _$jscoverage['js/vs_fx.js'][4892]++;
      if (event.changedTouches) {
        _$jscoverage['js/vs_fx.js'][4893]++;
        this.__pos = event.changedTouches[0].clientX;
      }
      else {
        _$jscoverage['js/vs_fx.js'][4895]++;
        this.__pos = event.clientX;
      }
    }
    else {
      _$jscoverage['js/vs_fx.js'][4899]++;
      if (event.changedTouches) {
        _$jscoverage['js/vs_fx.js'][4900]++;
        this.__pos = event.changedTouches[0].clientY;
      }
      else {
        _$jscoverage['js/vs_fx.js'][4902]++;
        this.__pos = event.clientY;
      }
    }
    _$jscoverage['js/vs_fx.js'][4905]++;
    document.addEventListener(core.POINTER_END, this, true);
    _$jscoverage['js/vs_fx.js'][4906]++;
    document.addEventListener(core.POINTER_MOVE, this, true);
    _$jscoverage['js/vs_fx.js'][4908]++;
    this.animationDuration = 0;
  }
  else {
    _$jscoverage['js/vs_fx.js'][4910]++;
    if ((event.type === core.POINTER_MOVE)) {
      _$jscoverage['js/vs_fx.js'][4912]++;
      event.preventDefault();
      _$jscoverage['js/vs_fx.js'][4913]++;
      state = this.__layer._list_of_state[this.__layer._current_state];
      _$jscoverage['js/vs_fx.js'][4914]++;
      index = this.__layer._states_array.indexOf(this.__layer._current_state);
      _$jscoverage['js/vs_fx.js'][4916]++;
      if ((index > 0)) {
        _$jscoverage['js/vs_fx.js'][4916]++;
        state_before_id = this.__layer._states_array[(index - 1)];
      }
      _$jscoverage['js/vs_fx.js'][4918]++;
      if ((this.__layer._orientation === CubicController.HORIZONTAL)) {
        _$jscoverage['js/vs_fx.js'][4920]++;
        if (event.changedTouches) {
          _$jscoverage['js/vs_fx.js'][4921]++;
          this.__delta = (event.changedTouches[0].clientX - this.__pos);
        }
        else {
          _$jscoverage['js/vs_fx.js'][4923]++;
          this.__delta = (event.clientX - this.__pos);
        }
        _$jscoverage['js/vs_fx.js'][4925]++;
        if (SUPPORT_3D_TRANSFORM) {
          _$jscoverage['js/vs_fx.js'][4926]++;
          transform = ("translate3d(" + this.__delta + "px,0px,0)");
        }
        else {
          _$jscoverage['js/vs_fx.js'][4927]++;
          transform = ("translate(" + this.__delta + "px,0px)");
        }
      }
      else {
        _$jscoverage['js/vs_fx.js'][4931]++;
        if (event.changedTouches) {
          _$jscoverage['js/vs_fx.js'][4932]++;
          this.__delta = (event.changedTouches[0].clientY - this.__pos);
        }
        else {
          _$jscoverage['js/vs_fx.js'][4934]++;
          this.__delta = (event.clientY - this.__pos);
        }
        _$jscoverage['js/vs_fx.js'][4936]++;
        if (SUPPORT_3D_TRANSFORM) {
          _$jscoverage['js/vs_fx.js'][4937]++;
          transform = ("translate3d(0px," + this.__delta + "px,0)");
        }
        else {
          _$jscoverage['js/vs_fx.js'][4938]++;
          transform = ("translate(0px," + this.__delta + "px)");
        }
      }
      _$jscoverage['js/vs_fx.js'][4940]++;
      if ((this.__delta < 0)) {
        _$jscoverage['js/vs_fx.js'][4942]++;
        state.comp.view.style.webkitTransitionDuration = 0;
        _$jscoverage['js/vs_fx.js'][4943]++;
        setElementTransform(state.comp.view, transform);
      }
      else {
        _$jscoverage['js/vs_fx.js'][4945]++;
        if (state_before_id) {
          _$jscoverage['js/vs_fx.js'][4947]++;
          state_before = this.__layer._list_of_state[state_before_id];
          _$jscoverage['js/vs_fx.js'][4948]++;
          if ((state_before && state_before.comp)) {
            _$jscoverage['js/vs_fx.js'][4950]++;
            if ((this.__layer._orientation === CubicController.HORIZONTAL)) {
              _$jscoverage['js/vs_fx.js'][4952]++;
              if (SUPPORT_3D_TRANSFORM) {
                _$jscoverage['js/vs_fx.js'][4954]++;
                transform = ("translate3d(" + (this.__delta - this._size[0]) + "px,0px,0)");
              }
              else {
                _$jscoverage['js/vs_fx.js'][4957]++;
                transform = ("translate(" + (this.__delta - this._size[0]) + "px,0px)");
              }
            }
            else {
              _$jscoverage['js/vs_fx.js'][4962]++;
              if (SUPPORT_3D_TRANSFORM) {
                _$jscoverage['js/vs_fx.js'][4964]++;
                transform = ("translate3d(0px," + (this.__delta - this._size[1]) + "px,0)");
              }
              else {
                _$jscoverage['js/vs_fx.js'][4967]++;
                transform = ("translate(0px," + (this.__delta - this._size[1]) + "px)");
              }
            }
            _$jscoverage['js/vs_fx.js'][4970]++;
            state_before.comp.view.style.webkitTransitionDuration = 0;
            _$jscoverage['js/vs_fx.js'][4971]++;
            setElementTransform(state_before.comp.view, transform);
          }
        }
      }
    }
    else {
      _$jscoverage['js/vs_fx.js'][4975]++;
      if ((event.type === core.POINTER_END)) {
        _$jscoverage['js/vs_fx.js'][4977]++;
        state = this.__layer._list_of_state[this.__layer._current_state];
        _$jscoverage['js/vs_fx.js'][4978]++;
        if ((this.__delta > 50)) {
          _$jscoverage['js/vs_fx.js'][4980]++;
          t_ok = this.__layer.goToPreviousView();
        }
        else {
          _$jscoverage['js/vs_fx.js'][4982]++;
          if ((this.__delta < -50)) {
            _$jscoverage['js/vs_fx.js'][4984]++;
            t_ok = this.__layer.goToNextView();
          }
        }
        _$jscoverage['js/vs_fx.js'][4986]++;
        if ((! t_ok)) {
          _$jscoverage['js/vs_fx.js'][4988]++;
          index = this.__layer._states_array.indexOf(this.__layer._current_state);
          _$jscoverage['js/vs_fx.js'][4990]++;
          if ((index > 0)) {
            _$jscoverage['js/vs_fx.js'][4991]++;
            state_before_id = this.__layer._states_array[(index - 1)];
          }
          _$jscoverage['js/vs_fx.js'][4993]++;
          if ((this.__delta < 0)) {
            _$jscoverage['js/vs_fx.js'][4995]++;
            if (SUPPORT_3D_TRANSFORM) {
              _$jscoverage['js/vs_fx.js'][4996]++;
              transform = "translate3d(0,0,0)";
            }
            else {
              _$jscoverage['js/vs_fx.js'][4997]++;
              transform = "translate(0,0)";
            }
            _$jscoverage['js/vs_fx.js'][4999]++;
            state.comp.view.style.webkitTransitionDuration = (this.__layer._animation_duration + "ms");
            _$jscoverage['js/vs_fx.js'][5001]++;
            setElementTransform(state.comp.view, transform);
          }
          else {
            _$jscoverage['js/vs_fx.js'][5003]++;
            if (state_before_id) {
              _$jscoverage['js/vs_fx.js'][5005]++;
              state_before = this.__layer._list_of_state[state_before_id];
              _$jscoverage['js/vs_fx.js'][5006]++;
              if ((state_before && state_before.comp)) {
                _$jscoverage['js/vs_fx.js'][5008]++;
                if ((this.__layer._orientation === CubicController.HORIZONTAL)) {
                  _$jscoverage['js/vs_fx.js'][5010]++;
                  if (SUPPORT_3D_TRANSFORM) {
                    _$jscoverage['js/vs_fx.js'][5012]++;
                    transform = ("translate3d(" + this._size[0] + "px,0px,0)");
                  }
                  else {
                    _$jscoverage['js/vs_fx.js'][5015]++;
                    transform = ("translate(" + this._size[0] + "px,0px)");
                  }
                }
                else {
                  _$jscoverage['js/vs_fx.js'][5020]++;
                  if (SUPPORT_3D_TRANSFORM) {
                    _$jscoverage['js/vs_fx.js'][5022]++;
                    transform = ("translate3d(0px,-" + this._size[1] + "px,0)");
                  }
                  else {
                    _$jscoverage['js/vs_fx.js'][5025]++;
                    transform = ("translate(0px,-" + this._size[1] + "px)");
                  }
                }
                _$jscoverage['js/vs_fx.js'][5028]++;
                state_before.comp.view.style.webkitTransitionDuration = (this.__layer._animation_duration + "ms");
                _$jscoverage['js/vs_fx.js'][5030]++;
                setElementTransform(state_before.comp.view, transform);
              }
            }
          }
        }
        _$jscoverage['js/vs_fx.js'][5034]++;
        document.removeEventListener(core.POINTER_END, this, true);
        _$jscoverage['js/vs_fx.js'][5035]++;
        document.removeEventListener(core.POINTER_MOVE, this, true);
      }
    }
  }
}), goTo: (function (state_id, output, event) {
  _$jscoverage['js/vs_fx.js'][5054]++;
  var state_to, index = this._states_array.indexOf(state_id), state_from = this._list_of_state[this._current_state];
  _$jscoverage['js/vs_fx.js'][5059]++;
  StackController.prototype.goTo.call(this, state_id, output, event);
  _$jscoverage['js/vs_fx.js'][5060]++;
  if ((! state_id)) {
    _$jscoverage['js/vs_fx.js'][5060]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][5062]++;
  this.owner.animationDuration = this._animation_duration;
  _$jscoverage['js/vs_fx.js'][5064]++;
  state_to = this._list_of_state[this._current_state];
  _$jscoverage['js/vs_fx.js'][5065]++;
  state_to.comp.setStyle("position", "absolute");
  _$jscoverage['js/vs_fx.js'][5066]++;
  state_to.comp.position = [0, 0];
  _$jscoverage['js/vs_fx.js'][5067]++;
  state_to.comp.setStyle("z-index", (1000 - index));
  _$jscoverage['js/vs_fx.js'][5069]++;
  if ((state_from && state_to)) {
    _$jscoverage['js/vs_fx.js'][5071]++;
    state_from.comp.setStyle("-webkit-transform", "scale3d(.835,.835,.835) translateZ(200px)");
    _$jscoverage['js/vs_fx.js'][5073]++;
    state_to.comp.setStyle("-webkit-transform", "scale3d(.835,.835,.835) rotateX(90deg) translateZ(200px)");
  }
  _$jscoverage['js/vs_fx.js'][5076]++;
  function initState(index) {
    _$jscoverage['js/vs_fx.js'][5078]++;
    var state_id = this._states_array[index], state = this._list_of_state[state_id];
    _$jscoverage['js/vs_fx.js'][5081]++;
    if ((! state)) {
      _$jscoverage['js/vs_fx.js'][5081]++;
      return;
    }
    _$jscoverage['js/vs_fx.js'][5083]++;
    if ((! state.comp)) {
      _$jscoverage['js/vs_fx.js'][5085]++;
      state.comp = this.owner.createAndAddComponent(state.comp_name, state.init_data, state.extension);
      _$jscoverage['js/vs_fx.js'][5088]++;
      state.comp.configure(state.init_data);
      _$jscoverage['js/vs_fx.js'][5089]++;
      state.comp.style("position", "absolute");
      _$jscoverage['js/vs_fx.js'][5090]++;
      if ((state.comp && state.comp.propertiesDidChange)) {
        _$jscoverage['js/vs_fx.js'][5092]++;
        state.comp.propertiesDidChange();
      }
      _$jscoverage['js/vs_fx.js'][5094]++;
      state.comp.propertyChange();
    }
    _$jscoverage['js/vs_fx.js'][5096]++;
    if (state.view) {
      _$jscoverage['js/vs_fx.js'][5098]++;
      __setPos(state.view, 0, 0);
    }
    else {
      _$jscoverage['js/vs_fx.js'][5102]++;
      state.comp.position = [0, 0];
    }
    _$jscoverage['js/vs_fx.js'][5104]++;
    state.comp.show();
    _$jscoverage['js/vs_fx.js'][5105]++;
    state.comp.style("z-index", (1000 - index));
}
  _$jscoverage['js/vs_fx.js'][5109]++;
  if ((index > 0)) {
    _$jscoverage['js/vs_fx.js'][5109]++;
    initState.call(this, (index - 1));
  }
  _$jscoverage['js/vs_fx.js'][5112]++;
  if ((index < (this._states_array.length - 1))) {
    _$jscoverage['js/vs_fx.js'][5113]++;
    initState.call(this, (index + 1));
  }
  _$jscoverage['js/vs_fx.js'][5115]++;
  if ((event && (event.on === StackController.NEXT) && state_from)) {
    _$jscoverage['js/vs_fx.js'][5117]++;
    if ((this._orientation === CubicController.HORIZONTAL)) {
      _$jscoverage['js/vs_fx.js'][5119]++;
      CubicController._translate_animation.process(this.owner);
    }
    else {
      _$jscoverage['js/vs_fx.js'][5123]++;
      CubicController._translate_animation.process(this.owner);
    }
  }
  else {
    _$jscoverage['js/vs_fx.js'][5126]++;
    if ((event && (event.on === StackController.PRED) && state_to)) {
      _$jscoverage['js/vs_fx.js'][5128]++;
      CubicController._translate_animation.x = 0;
      _$jscoverage['js/vs_fx.js'][5129]++;
      CubicController._translate_animation.y = 0;
      _$jscoverage['js/vs_fx.js'][5130]++;
      CubicController._translate_animation.process(state_to.comp);
    }
  }
  _$jscoverage['js/vs_fx.js'][5133]++;
  if ((output && this._output_action[output])) {
    _$jscoverage['js/vs_fx.js'][5135]++;
    var clb = this._output_action[output];
    _$jscoverage['js/vs_fx.js'][5136]++;
    if ((clb instanceof Function)) {
      _$jscoverage['js/vs_fx.js'][5138]++;
      clb.call(this.owner, event);
    }
    else {
      _$jscoverage['js/vs_fx.js'][5140]++;
      if (util.isString(clb)) {
        _$jscoverage['js/vs_fx.js'][5142]++;
        (this.owner[this._output_action[output]])(event);
      }
    }
  }
})};
  _$jscoverage['js/vs_fx.js'][5147]++;
  util.extendClass(CubicController, StackController);
  _$jscoverage['js/vs_fx.js'][5153]++;
  fx.CubicController = CubicController;
  _$jscoverage['js/vs_fx.js'][5241]++;
  function OpacityController(owner, extension) {
    _$jscoverage['js/vs_fx.js'][5243]++;
    this.parent = StackController;
    _$jscoverage['js/vs_fx.js'][5244]++;
    this.parent(owner, extension);
    _$jscoverage['js/vs_fx.js'][5245]++;
    this.constructor = OpacityController;
    _$jscoverage['js/vs_fx.js'][5247]++;
    this.animationDuration = OpacityController.ANIMATION_DURATION;
}
  _$jscoverage['js/vs_fx.js'][5251]++;
  OpacityController._opacity_animation = new OpacityAnimation(1);
  _$jscoverage['js/vs_fx.js'][5252]++;
  OpacityController._opacity_animation.init();
  _$jscoverage['js/vs_fx.js'][5253]++;
  OpacityController._opacity_animation.durations = "0.2s";
  _$jscoverage['js/vs_fx.js'][5259]++;
  OpacityController.ANIMATION_DURATION = 500;
  _$jscoverage['js/vs_fx.js'][5261]++;
  OpacityController.prototype = {push: (function (comp, data, bindings) {
  _$jscoverage['js/vs_fx.js'][5298]++;
  if ((! comp)) {
    _$jscoverage['js/vs_fx.js'][5298]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][5300]++;
  if ((! util.isString(comp))) {
    _$jscoverage['js/vs_fx.js'][5302]++;
    var index = this._states_array.length;
    _$jscoverage['js/vs_fx.js'][5303]++;
    comp.position = [0, 0];
    _$jscoverage['js/vs_fx.js'][5304]++;
    comp.setStyle("z-index", (1000 - index));
  }
  _$jscoverage['js/vs_fx.js'][5306]++;
  StackController.prototype.push.call(this, comp, data, bindings);
}), goTo: (function (state_id, output, event) {
  _$jscoverage['js/vs_fx.js'][5327]++;
  var state_to, index = this._states_array.indexOf(state_id), state_from = this._list_of_state[this._current_state];
  _$jscoverage['js/vs_fx.js'][5331]++;
  StackController.prototype.goTo.call(this, state_id, output, event);
  _$jscoverage['js/vs_fx.js'][5332]++;
  if ((! state_id)) {
    _$jscoverage['js/vs_fx.js'][5332]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][5336]++;
  state_to = this._list_of_state[this._current_state];
  _$jscoverage['js/vs_fx.js'][5337]++;
  state_to.comp.setStyle("position", "absolute");
  _$jscoverage['js/vs_fx.js'][5338]++;
  state_to.comp.position = [0, 0];
  _$jscoverage['js/vs_fx.js'][5339]++;
  state_to.comp.setStyle("z-index", (1000 - index));
  _$jscoverage['js/vs_fx.js'][5341]++;
  function initState(index) {
    _$jscoverage['js/vs_fx.js'][5343]++;
    var state_id = this._states_array[index], state = this._list_of_state[state_id];
    _$jscoverage['js/vs_fx.js'][5346]++;
    if ((! state)) {
      _$jscoverage['js/vs_fx.js'][5346]++;
      return;
    }
    _$jscoverage['js/vs_fx.js'][5348]++;
    if ((! state.comp)) {
      _$jscoverage['js/vs_fx.js'][5350]++;
      state.comp = this.owner.createAndAddComponent(state.comp_name, state.init_data, state.extension);
      _$jscoverage['js/vs_fx.js'][5353]++;
      state.comp.configure(state.init_data);
      _$jscoverage['js/vs_fx.js'][5354]++;
      state.comp.setStyle("position", "absolute");
      _$jscoverage['js/vs_fx.js'][5355]++;
      if ((state.comp && state.comp.propertiesDidChange)) {
        _$jscoverage['js/vs_fx.js'][5357]++;
        state.comp.propertiesDidChange();
      }
      _$jscoverage['js/vs_fx.js'][5359]++;
      state.comp.propertyChange();
    }
    _$jscoverage['js/vs_fx.js'][5361]++;
    if (state.view) {
      _$jscoverage['js/vs_fx.js'][5363]++;
      __setPos(state.view, 0, 0);
    }
    else {
      _$jscoverage['js/vs_fx.js'][5367]++;
      state.comp.position = [0, 0];
    }
    _$jscoverage['js/vs_fx.js'][5369]++;
    state.comp.show();
    _$jscoverage['js/vs_fx.js'][5370]++;
    state.comp.setStyle("z-index", (1000 - index));
}
  _$jscoverage['js/vs_fx.js'][5374]++;
  if ((index > 0)) {
    _$jscoverage['js/vs_fx.js'][5374]++;
    initState.call(this, (index - 1));
  }
  _$jscoverage['js/vs_fx.js'][5377]++;
  if ((index < (this._states_array.length - 1))) {
    _$jscoverage['js/vs_fx.js'][5378]++;
    initState.call(this, (index + 1));
  }
  _$jscoverage['js/vs_fx.js'][5380]++;
  if ((event && (event.on === StackController.NEXT) && state_from)) {
    _$jscoverage['js/vs_fx.js'][5382]++;
    OpacityController._opacity_animation.value = 0;
    _$jscoverage['js/vs_fx.js'][5383]++;
    OpacityController._opacity_animation.process(state_from.comp);
  }
  else {
    _$jscoverage['js/vs_fx.js'][5385]++;
    if ((event && (event.on === StackController.PRED) && state_to)) {
      _$jscoverage['js/vs_fx.js'][5387]++;
      OpacityController._opacity_animation.value = 1;
      _$jscoverage['js/vs_fx.js'][5388]++;
      OpacityController._opacity_animation.process(state_to.comp);
    }
  }
  _$jscoverage['js/vs_fx.js'][5391]++;
  if ((output && this._output_action[output])) {
    _$jscoverage['js/vs_fx.js'][5393]++;
    var clb = this._output_action[output];
    _$jscoverage['js/vs_fx.js'][5394]++;
    if ((clb instanceof Function)) {
      _$jscoverage['js/vs_fx.js'][5396]++;
      clb.call(this.owner, event);
    }
    else {
      _$jscoverage['js/vs_fx.js'][5398]++;
      if (util.isString(clb)) {
        _$jscoverage['js/vs_fx.js'][5400]++;
        (this.owner[this._output_action[output]])(event);
      }
    }
  }
})};
  _$jscoverage['js/vs_fx.js'][5405]++;
  util.extendClass(OpacityController, StackController);
  _$jscoverage['js/vs_fx.js'][5411]++;
  util.defineClassProperty(OpacityController, "animationDuration", {set: (function (time) {
  _$jscoverage['js/vs_fx.js'][5419]++;
  if ((! time)) {
    _$jscoverage['js/vs_fx.js'][5419]++;
    time = 0;
  }
  _$jscoverage['js/vs_fx.js'][5420]++;
  if ((! util.isNumber(time))) {
    _$jscoverage['js/vs_fx.js'][5420]++;
    return;
  }
  _$jscoverage['js/vs_fx.js'][5420]++;
  ;
  _$jscoverage['js/vs_fx.js'][5422]++;
  this._animation_duration = time;
  _$jscoverage['js/vs_fx.js'][5423]++;
  OpacityController._opacity_animation.durations = ((time / 1000) + "s");
})});
  _$jscoverage['js/vs_fx.js'][5431]++;
  fx.OpacityController = OpacityController;
})(window);
