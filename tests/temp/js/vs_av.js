/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    this._$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (! this._$jscoverage) {
  this._$jscoverage = {};
}
if (! _$jscoverage['js/vs_av.js']) {
  _$jscoverage['js/vs_av.js'] = [];
  _$jscoverage['js/vs_av.js'][19] = 0;
  _$jscoverage['js/vs_av.js'][21] = 0;
  _$jscoverage['js/vs_av.js'][45] = 0;
  _$jscoverage['js/vs_av.js'][116] = 0;
  _$jscoverage['js/vs_av.js'][118] = 0;
  _$jscoverage['js/vs_av.js'][120] = 0;
  _$jscoverage['js/vs_av.js'][121] = 0;
  _$jscoverage['js/vs_av.js'][122] = 0;
  _$jscoverage['js/vs_av.js'][130] = 0;
  _$jscoverage['js/vs_av.js'][138] = 0;
  _$jscoverage['js/vs_av.js'][147] = 0;
  _$jscoverage['js/vs_av.js'][155] = 0;
  _$jscoverage['js/vs_av.js'][163] = 0;
  _$jscoverage['js/vs_av.js'][165] = 0;
  _$jscoverage['js/vs_av.js'][267] = 0;
  _$jscoverage['js/vs_av.js'][268] = 0;
  _$jscoverage['js/vs_av.js'][270] = 0;
  _$jscoverage['js/vs_av.js'][271] = 0;
  _$jscoverage['js/vs_av.js'][285] = 0;
  _$jscoverage['js/vs_av.js'][296] = 0;
  _$jscoverage['js/vs_av.js'][298] = 0;
  _$jscoverage['js/vs_av.js'][299] = 0;
  _$jscoverage['js/vs_av.js'][300] = 0;
  _$jscoverage['js/vs_av.js'][302] = 0;
  _$jscoverage['js/vs_av.js'][303] = 0;
  _$jscoverage['js/vs_av.js'][314] = 0;
  _$jscoverage['js/vs_av.js'][316] = 0;
  _$jscoverage['js/vs_av.js'][317] = 0;
  _$jscoverage['js/vs_av.js'][320] = 0;
  _$jscoverage['js/vs_av.js'][321] = 0;
  _$jscoverage['js/vs_av.js'][324] = 0;
  _$jscoverage['js/vs_av.js'][326] = 0;
  _$jscoverage['js/vs_av.js'][327] = 0;
  _$jscoverage['js/vs_av.js'][340] = 0;
  _$jscoverage['js/vs_av.js'][343] = 0;
  _$jscoverage['js/vs_av.js'][344] = 0;
  _$jscoverage['js/vs_av.js'][345] = 0;
  _$jscoverage['js/vs_av.js'][346] = 0;
  _$jscoverage['js/vs_av.js'][347] = 0;
  _$jscoverage['js/vs_av.js'][348] = 0;
  _$jscoverage['js/vs_av.js'][350] = 0;
  _$jscoverage['js/vs_av.js'][359] = 0;
  _$jscoverage['js/vs_av.js'][361] = 0;
  _$jscoverage['js/vs_av.js'][362] = 0;
  _$jscoverage['js/vs_av.js'][364] = 0;
  _$jscoverage['js/vs_av.js'][365] = 0;
  _$jscoverage['js/vs_av.js'][369] = 0;
  _$jscoverage['js/vs_av.js'][370] = 0;
  _$jscoverage['js/vs_av.js'][371] = 0;
  _$jscoverage['js/vs_av.js'][372] = 0;
  _$jscoverage['js/vs_av.js'][373] = 0;
  _$jscoverage['js/vs_av.js'][374] = 0;
  _$jscoverage['js/vs_av.js'][376] = 0;
  _$jscoverage['js/vs_av.js'][379] = 0;
  _$jscoverage['js/vs_av.js'][380] = 0;
  _$jscoverage['js/vs_av.js'][382] = 0;
  _$jscoverage['js/vs_av.js'][391] = 0;
  _$jscoverage['js/vs_av.js'][394] = 0;
  _$jscoverage['js/vs_av.js'][395] = 0;
  _$jscoverage['js/vs_av.js'][396] = 0;
  _$jscoverage['js/vs_av.js'][397] = 0;
  _$jscoverage['js/vs_av.js'][400] = 0;
  _$jscoverage['js/vs_av.js'][401] = 0;
  _$jscoverage['js/vs_av.js'][402] = 0;
  _$jscoverage['js/vs_av.js'][403] = 0;
  _$jscoverage['js/vs_av.js'][404] = 0;
  _$jscoverage['js/vs_av.js'][407] = 0;
  _$jscoverage['js/vs_av.js'][408] = 0;
  _$jscoverage['js/vs_av.js'][409] = 0;
  _$jscoverage['js/vs_av.js'][410] = 0;
  _$jscoverage['js/vs_av.js'][411] = 0;
  _$jscoverage['js/vs_av.js'][415] = 0;
  _$jscoverage['js/vs_av.js'][416] = 0;
  _$jscoverage['js/vs_av.js'][417] = 0;
  _$jscoverage['js/vs_av.js'][420] = 0;
  _$jscoverage['js/vs_av.js'][422] = 0;
  _$jscoverage['js/vs_av.js'][426] = 0;
  _$jscoverage['js/vs_av.js'][428] = 0;
  _$jscoverage['js/vs_av.js'][432] = 0;
  _$jscoverage['js/vs_av.js'][438] = 0;
  _$jscoverage['js/vs_av.js'][451] = 0;
  _$jscoverage['js/vs_av.js'][452] = 0;
  _$jscoverage['js/vs_av.js'][454] = 0;
  _$jscoverage['js/vs_av.js'][455] = 0;
  _$jscoverage['js/vs_av.js'][457] = 0;
  _$jscoverage['js/vs_av.js'][465] = 0;
  _$jscoverage['js/vs_av.js'][478] = 0;
  _$jscoverage['js/vs_av.js'][479] = 0;
  _$jscoverage['js/vs_av.js'][480] = 0;
  _$jscoverage['js/vs_av.js'][482] = 0;
  _$jscoverage['js/vs_av.js'][483] = 0;
  _$jscoverage['js/vs_av.js'][485] = 0;
  _$jscoverage['js/vs_av.js'][486] = 0;
  _$jscoverage['js/vs_av.js'][488] = 0;
  _$jscoverage['js/vs_av.js'][490] = 0;
  _$jscoverage['js/vs_av.js'][491] = 0;
  _$jscoverage['js/vs_av.js'][493] = 0;
  _$jscoverage['js/vs_av.js'][494] = 0;
  _$jscoverage['js/vs_av.js'][497] = 0;
  _$jscoverage['js/vs_av.js'][498] = 0;
  _$jscoverage['js/vs_av.js'][507] = 0;
  _$jscoverage['js/vs_av.js'][509] = 0;
  _$jscoverage['js/vs_av.js'][510] = 0;
  _$jscoverage['js/vs_av.js'][512] = 0;
  _$jscoverage['js/vs_av.js'][527] = 0;
  _$jscoverage['js/vs_av.js'][529] = 0;
  _$jscoverage['js/vs_av.js'][531] = 0;
  _$jscoverage['js/vs_av.js'][532] = 0;
  _$jscoverage['js/vs_av.js'][534] = 0;
  _$jscoverage['js/vs_av.js'][542] = 0;
  _$jscoverage['js/vs_av.js'][557] = 0;
  _$jscoverage['js/vs_av.js'][559] = 0;
  _$jscoverage['js/vs_av.js'][561] = 0;
  _$jscoverage['js/vs_av.js'][562] = 0;
  _$jscoverage['js/vs_av.js'][564] = 0;
  _$jscoverage['js/vs_av.js'][572] = 0;
  _$jscoverage['js/vs_av.js'][587] = 0;
  _$jscoverage['js/vs_av.js'][588] = 0;
  _$jscoverage['js/vs_av.js'][590] = 0;
  _$jscoverage['js/vs_av.js'][591] = 0;
  _$jscoverage['js/vs_av.js'][593] = 0;
  _$jscoverage['js/vs_av.js'][601] = 0;
  _$jscoverage['js/vs_av.js'][615] = 0;
  _$jscoverage['js/vs_av.js'][616] = 0;
  _$jscoverage['js/vs_av.js'][618] = 0;
  _$jscoverage['js/vs_av.js'][619] = 0;
  _$jscoverage['js/vs_av.js'][621] = 0;
  _$jscoverage['js/vs_av.js'][629] = 0;
  _$jscoverage['js/vs_av.js'][644] = 0;
  _$jscoverage['js/vs_av.js'][645] = 0;
  _$jscoverage['js/vs_av.js'][647] = 0;
  _$jscoverage['js/vs_av.js'][649] = 0;
  _$jscoverage['js/vs_av.js'][650] = 0;
  _$jscoverage['js/vs_av.js'][652] = 0;
  _$jscoverage['js/vs_av.js'][660] = 0;
  _$jscoverage['js/vs_av.js'][675] = 0;
  _$jscoverage['js/vs_av.js'][676] = 0;
  _$jscoverage['js/vs_av.js'][678] = 0;
  _$jscoverage['js/vs_av.js'][686] = 0;
  _$jscoverage['js/vs_av.js'][700] = 0;
  _$jscoverage['js/vs_av.js'][716] = 0;
  _$jscoverage['js/vs_av.js'][725] = 0;
  _$jscoverage['js/vs_av.js'][790] = 0;
  _$jscoverage['js/vs_av.js'][792] = 0;
  _$jscoverage['js/vs_av.js'][793] = 0;
  _$jscoverage['js/vs_av.js'][794] = 0;
  _$jscoverage['js/vs_av.js'][802] = 0;
  _$jscoverage['js/vs_av.js'][810] = 0;
  _$jscoverage['js/vs_av.js'][819] = 0;
  _$jscoverage['js/vs_av.js'][827] = 0;
  _$jscoverage['js/vs_av.js'][835] = 0;
  _$jscoverage['js/vs_av.js'][837] = 0;
  _$jscoverage['js/vs_av.js'][921] = 0;
  _$jscoverage['js/vs_av.js'][922] = 0;
  _$jscoverage['js/vs_av.js'][924] = 0;
  _$jscoverage['js/vs_av.js'][925] = 0;
  _$jscoverage['js/vs_av.js'][938] = 0;
  _$jscoverage['js/vs_av.js'][948] = 0;
  _$jscoverage['js/vs_av.js'][950] = 0;
  _$jscoverage['js/vs_av.js'][951] = 0;
  _$jscoverage['js/vs_av.js'][952] = 0;
  _$jscoverage['js/vs_av.js'][954] = 0;
  _$jscoverage['js/vs_av.js'][955] = 0;
  _$jscoverage['js/vs_av.js'][965] = 0;
  _$jscoverage['js/vs_av.js'][967] = 0;
  _$jscoverage['js/vs_av.js'][968] = 0;
  _$jscoverage['js/vs_av.js'][969] = 0;
  _$jscoverage['js/vs_av.js'][971] = 0;
  _$jscoverage['js/vs_av.js'][972] = 0;
  _$jscoverage['js/vs_av.js'][974] = 0;
  _$jscoverage['js/vs_av.js'][975] = 0;
  _$jscoverage['js/vs_av.js'][988] = 0;
  _$jscoverage['js/vs_av.js'][991] = 0;
  _$jscoverage['js/vs_av.js'][992] = 0;
  _$jscoverage['js/vs_av.js'][993] = 0;
  _$jscoverage['js/vs_av.js'][994] = 0;
  _$jscoverage['js/vs_av.js'][995] = 0;
  _$jscoverage['js/vs_av.js'][996] = 0;
  _$jscoverage['js/vs_av.js'][998] = 0;
  _$jscoverage['js/vs_av.js'][999] = 0;
  _$jscoverage['js/vs_av.js'][1001] = 0;
  _$jscoverage['js/vs_av.js'][1011] = 0;
  _$jscoverage['js/vs_av.js'][1013] = 0;
  _$jscoverage['js/vs_av.js'][1015] = 0;
  _$jscoverage['js/vs_av.js'][1016] = 0;
  _$jscoverage['js/vs_av.js'][1019] = 0;
  _$jscoverage['js/vs_av.js'][1020] = 0;
  _$jscoverage['js/vs_av.js'][1021] = 0;
  _$jscoverage['js/vs_av.js'][1022] = 0;
  _$jscoverage['js/vs_av.js'][1023] = 0;
  _$jscoverage['js/vs_av.js'][1024] = 0;
  _$jscoverage['js/vs_av.js'][1026] = 0;
  _$jscoverage['js/vs_av.js'][1028] = 0;
  _$jscoverage['js/vs_av.js'][1029] = 0;
  _$jscoverage['js/vs_av.js'][1031] = 0;
  _$jscoverage['js/vs_av.js'][1041] = 0;
  _$jscoverage['js/vs_av.js'][1044] = 0;
  _$jscoverage['js/vs_av.js'][1045] = 0;
  _$jscoverage['js/vs_av.js'][1046] = 0;
  _$jscoverage['js/vs_av.js'][1047] = 0;
  _$jscoverage['js/vs_av.js'][1050] = 0;
  _$jscoverage['js/vs_av.js'][1051] = 0;
  _$jscoverage['js/vs_av.js'][1052] = 0;
  _$jscoverage['js/vs_av.js'][1053] = 0;
  _$jscoverage['js/vs_av.js'][1054] = 0;
  _$jscoverage['js/vs_av.js'][1057] = 0;
  _$jscoverage['js/vs_av.js'][1058] = 0;
  _$jscoverage['js/vs_av.js'][1059] = 0;
  _$jscoverage['js/vs_av.js'][1060] = 0;
  _$jscoverage['js/vs_av.js'][1061] = 0;
  _$jscoverage['js/vs_av.js'][1065] = 0;
  _$jscoverage['js/vs_av.js'][1066] = 0;
  _$jscoverage['js/vs_av.js'][1067] = 0;
  _$jscoverage['js/vs_av.js'][1070] = 0;
  _$jscoverage['js/vs_av.js'][1072] = 0;
  _$jscoverage['js/vs_av.js'][1076] = 0;
  _$jscoverage['js/vs_av.js'][1078] = 0;
  _$jscoverage['js/vs_av.js'][1082] = 0;
  _$jscoverage['js/vs_av.js'][1088] = 0;
  _$jscoverage['js/vs_av.js'][1101] = 0;
  _$jscoverage['js/vs_av.js'][1103] = 0;
  _$jscoverage['js/vs_av.js'][1105] = 0;
  _$jscoverage['js/vs_av.js'][1107] = 0;
  _$jscoverage['js/vs_av.js'][1109] = 0;
  _$jscoverage['js/vs_av.js'][1110] = 0;
  _$jscoverage['js/vs_av.js'][1111] = 0;
  _$jscoverage['js/vs_av.js'][1112] = 0;
  _$jscoverage['js/vs_av.js'][1114] = 0;
  _$jscoverage['js/vs_av.js'][1115] = 0;
  _$jscoverage['js/vs_av.js'][1119] = 0;
  _$jscoverage['js/vs_av.js'][1120] = 0;
  _$jscoverage['js/vs_av.js'][1122] = 0;
  _$jscoverage['js/vs_av.js'][1131] = 0;
  _$jscoverage['js/vs_av.js'][1146] = 0;
  _$jscoverage['js/vs_av.js'][1147] = 0;
  _$jscoverage['js/vs_av.js'][1149] = 0;
  _$jscoverage['js/vs_av.js'][1150] = 0;
  _$jscoverage['js/vs_av.js'][1152] = 0;
  _$jscoverage['js/vs_av.js'][1161] = 0;
  _$jscoverage['js/vs_av.js'][1176] = 0;
  _$jscoverage['js/vs_av.js'][1177] = 0;
  _$jscoverage['js/vs_av.js'][1179] = 0;
  _$jscoverage['js/vs_av.js'][1180] = 0;
  _$jscoverage['js/vs_av.js'][1182] = 0;
  _$jscoverage['js/vs_av.js'][1191] = 0;
  _$jscoverage['js/vs_av.js'][1206] = 0;
  _$jscoverage['js/vs_av.js'][1207] = 0;
  _$jscoverage['js/vs_av.js'][1209] = 0;
  _$jscoverage['js/vs_av.js'][1211] = 0;
  _$jscoverage['js/vs_av.js'][1212] = 0;
  _$jscoverage['js/vs_av.js'][1214] = 0;
  _$jscoverage['js/vs_av.js'][1223] = 0;
  _$jscoverage['js/vs_av.js'][1238] = 0;
  _$jscoverage['js/vs_av.js'][1239] = 0;
  _$jscoverage['js/vs_av.js'][1241] = 0;
  _$jscoverage['js/vs_av.js'][1250] = 0;
  _$jscoverage['js/vs_av.js'][1264] = 0;
  _$jscoverage['js/vs_av.js'][1280] = 0;
  _$jscoverage['js/vs_av.js'][1289] = 0;
  _$jscoverage['js/vs_av.js'][1291] = 0;
}
_$jscoverage['js/vs_av.js'].source = ["<span class=\"c\">/** @license</span>","<span class=\"c\">  Copyright (C) 2009-2012. David Thevenin, ViniSketch SARL (c), and </span>","<span class=\"c\">  contributors. All rights reserved</span>","<span class=\"c\">  </span>","<span class=\"c\">  This program is free software: you can redistribute it and/or modify</span>","<span class=\"c\">  it under the terms of the GNU Lesser General Public License as published</span>","<span class=\"c\">  by the Free Software Foundation, either version 3 of the License, or</span>","<span class=\"c\">  (at your option) any later version.</span>","<span class=\"c\">  </span>","<span class=\"c\">  This program is distributed in the hope that it will be useful,</span>","<span class=\"c\">  but WITHOUT ANY WARRANTY; without even the implied warranty of</span>","<span class=\"c\">  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the</span>","<span class=\"c\">  GNU Lesser General Public License for more details.</span>","<span class=\"c\">  </span>","<span class=\"c\">  You should have received a copy of the GNU Lesser General Public License</span>","<span class=\"c\">  along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.</span>","<span class=\"c\">*/</span>","","<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>window<span class=\"k\">,</span> undefined<span class=\"k\">)</span> <span class=\"k\">{</span>","","<span class=\"k\">var</span> document <span class=\"k\">=</span> window<span class=\"k\">.</span>document<span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\">  Copyright (C) 2009-2012. David Thevenin, ViniSketch SARL (c), and </span>","<span class=\"c\">  contributors. All rights reserved</span>","<span class=\"c\">  </span>","<span class=\"c\">  This program is free software: you can redistribute it and/or modify</span>","<span class=\"c\">  it under the terms of the GNU Lesser General Public License as published</span>","<span class=\"c\">  by the Free Software Foundation, either version 3 of the License, or</span>","<span class=\"c\">  (at your option) any later version.</span>","<span class=\"c\">  </span>","<span class=\"c\">  This program is distributed in the hope that it will be useful,</span>","<span class=\"c\">  but WITHOUT ANY WARRANTY; without even the implied warranty of</span>","<span class=\"c\">  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the</span>","<span class=\"c\">  GNU Lesser General Public License for more details.</span>","<span class=\"c\">  </span>","<span class=\"c\">  You should have received a copy of the GNU Lesser General Public License</span>","<span class=\"c\">  along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.</span>","<span class=\"c\">*/</span>","","<span class=\"c\">/********************************************************************</span>","<span class=\"c\">                   </span>","<span class=\"c\">*********************************************************************/</span>","<span class=\"c\">/** @private */</span>","<span class=\"k\">var</span> vs <span class=\"k\">=</span> window<span class=\"k\">.</span>vs<span class=\"k\">,</span>","  util <span class=\"k\">=</span> vs<span class=\"k\">.</span>util<span class=\"k\">,</span>","  core <span class=\"k\">=</span> vs<span class=\"k\">.</span>core<span class=\"k\">,</span>","  ui <span class=\"k\">=</span> vs<span class=\"k\">.</span>ui<span class=\"k\">,</span>","  av <span class=\"k\">=</span> vs<span class=\"k\">.</span>av<span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\">  Copyright (C) 2009-2012. David Thevenin, ViniSketch SARL (c), and </span>","<span class=\"c\">  contributors. All rights reserved</span>","<span class=\"c\">  </span>","<span class=\"c\">  This program is free software: you can redistribute it and/or modify</span>","<span class=\"c\">  it under the terms of the GNU Lesser General Public License as published</span>","<span class=\"c\">  by the Free Software Foundation, either version 3 of the License, or</span>","<span class=\"c\">  (at your option) any later version.</span>","<span class=\"c\">  </span>","<span class=\"c\">  This program is distributed in the hope that it will be useful,</span>","<span class=\"c\">  but WITHOUT ANY WARRANTY; without even the implied warranty of</span>","<span class=\"c\">  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the</span>","<span class=\"c\">  GNU Lesser General Public License for more details.</span>","<span class=\"c\">  </span>","<span class=\"c\">  You should have received a copy of the GNU Lesser General Public License</span>","<span class=\"c\">  along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.</span>","<span class=\"c\"> </span>","<span class=\"c\"> Use code from Canto.js Copyright 2010 David Flanagan</span>","<span class=\"c\">*/</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> *  The vs.av.Video class</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  @extends vs.ui.View</span>","<span class=\"c\"> *  @class</span>","<span class=\"c\"> *  Implements {@link vs.core.Task}.</span>","<span class=\"c\"> *  &lt;p&gt;</span>","<span class=\"c\"> *  The vs.av.Video class allow to show a movie clip or other video streams.</span>","<span class=\"c\"> *  &lt;p&gt;</span>","<span class=\"c\"> *  Events:</span>","<span class=\"c\"> *  &lt;ul&gt;</span>","<span class=\"c\"> *    &lt;li /&gt; volumechange: Fired after the volume attribute or the muted attribute has changed.</span>","<span class=\"c\"> *    &lt;li /&gt; error: An error occurs while fetching the media data.</span>","<span class=\"c\"> *    &lt;li /&gt; ended : Fired when playback has stopped because the end of the media resource was reached.</span>","<span class=\"c\"> *    &lt;li /&gt; playing : Fired when playback has started.</span>","<span class=\"c\"> *    &lt;li /&gt; play : Playback has begun. Fired after the play() method has returned, or when the</span>","<span class=\"c\"> *           autoplay property has caused playback to begin.</span>","<span class=\"c\"> *    &lt;li /&gt; pause : Playback has been paused. Fired after the pause() method has returned.</span>","<span class=\"c\"> *  &lt;/ul&gt;</span>","<span class=\"c\"> *  &lt;p&gt;</span>","<span class=\"c\"> * The delegate has to implement:</span>","<span class=\"c\"> *  &lt;ul&gt;</span>","<span class=\"c\"> *    &lt;li/&gt;taskDidStop : function (vs.core.Task)</span>","<span class=\"c\"> *    &lt;li/&gt;taskDidPause : function (vs.core.Task)</span>","<span class=\"c\"> *    &lt;li/&gt;taskDidEnd : function (vs.core.Task)</span>","<span class=\"c\"> *  &lt;/ul&gt;</span>","<span class=\"c\"> *  @author David Thevenin</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  @constructor</span>","<span class=\"c\"> *   Creates a new vs.av.Video.</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  @example</span>","<span class=\"c\"> *   var myVideo = new vs.av.Video ({id:'my_video'});</span>","<span class=\"c\"> *   myVideo.init ();</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *   myVideo.src = \"http://yourlink.mp4\";</span>","<span class=\"c\"> *   myVideo.poster = \"http://yourlink.jpg\";</span>","<span class=\"c\"> *   myVideo.controls = true;</span>","<span class=\"c\"> *   myVideo.loop = true;</span>","<span class=\"c\"> *   myVideo.play ();</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @name vs.av.Video </span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @param {Object} config The configuration structure [mandatory]</span>","<span class=\"c\">*/</span>","<span class=\"k\">function</span> Video <span class=\"k\">(</span>config<span class=\"k\">)</span>","<span class=\"k\">{</span>","  <span class=\"k\">if</span> <span class=\"k\">(</span>config <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>config<span class=\"k\">.</span>size<span class=\"k\">)</span> <span class=\"k\">{</span> config<span class=\"k\">.</span>size <span class=\"k\">=</span> <span class=\"k\">[</span><span class=\"s\">320</span><span class=\"k\">,</span> <span class=\"s\">200</span><span class=\"k\">];</span> <span class=\"k\">}</span>","  ","  <span class=\"k\">this</span><span class=\"k\">.</span>parent <span class=\"k\">=</span> ui<span class=\"k\">.</span>View<span class=\"k\">;</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>parent <span class=\"k\">(</span>config<span class=\"k\">);</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>constructor <span class=\"k\">=</span> Video<span class=\"k\">;</span>","<span class=\"k\">}</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * Error code</span>","<span class=\"c\"> * @name vs.av.Video.UNKNOWN_ERR</span>","<span class=\"c\"> * @const</span>","<span class=\"c\"> */</span>","Video<span class=\"k\">.</span>UNKNOWN_ERR <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * Error code: The fetching process for the media resource was aborted by the </span>","<span class=\"c\"> * user agent at the user's request.</span>","<span class=\"c\"> * @name vs.av.Video.MEDIA_ERR_ABORTED</span>","<span class=\"c\"> * @const</span>","<span class=\"c\"> */</span>","Video<span class=\"k\">.</span>MEDIA_ERR_ABORTED <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * Error code: A network error of some description caused the user agent to </span>","<span class=\"c\"> * stop fetching the media resource, after the resource was established to</span>","<span class=\"c\"> * be usable</span>","<span class=\"c\"> * @name vs.av.Video.MEDIA_ERR_NETWORK</span>","<span class=\"c\"> * @const</span>","<span class=\"c\"> */</span>","Video<span class=\"k\">.</span>MEDIA_ERR_NETWORK <span class=\"k\">=</span> <span class=\"s\">2</span><span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * Error code: An error of some description occurred while decoding the</span>","<span class=\"c\"> * media resource, after the resource was established to be usable.</span>","<span class=\"c\"> * @name vs.av.Video.MEDIA_ERR_DECODE</span>","<span class=\"c\"> * @const</span>","<span class=\"c\"> */</span>","Video<span class=\"k\">.</span>MEDIA_ERR_DECODE <span class=\"k\">=</span> <span class=\"s\">3</span><span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * Error code: The media resource indicated by the src attribute was not </span>","<span class=\"c\"> * suitable.</span>","<span class=\"c\"> * @name vs.av.Video.MEDIA_ERR_SRC_NOT_SUPPORTED</span>","<span class=\"c\"> * @const</span>","<span class=\"c\"> */</span>","Video<span class=\"k\">.</span>MEDIA_ERR_SRC_NOT_SUPPORTED <span class=\"k\">=</span> <span class=\"s\">4</span><span class=\"k\">;</span>","","Video<span class=\"k\">.</span>prototype <span class=\"k\">=</span> <span class=\"k\">{</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * TaskDelegate.</span>","<span class=\"c\">   * Methods are called when state changes (stop | pause)</span>","<span class=\"c\">   * Should implements: </span>","<span class=\"c\">   *  &lt;ul&gt;</span>","<span class=\"c\">   *    &lt;li/&gt;taskDidStop : function (vs.core.Task)</span>","<span class=\"c\">   *    &lt;li/&gt;taskDidPause : function (vs.core.Task)</span>","<span class=\"c\">   *    &lt;li/&gt;taskDidEnd : function (vs.core.Task)</span>","<span class=\"c\">   *  &lt;/ul&gt;</span>","<span class=\"c\">   * @name vs.av.Video#delegate </span>","<span class=\"c\">   *@property</span>","<span class=\"c\">  */</span>","  delegate <span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/*****************************************************************</span>","<span class=\"c\">   *                          State</span>","<span class=\"c\">   ****************************************************************/</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   *\t@private</span>","<span class=\"c\">   */</span>","  _state <span class=\"k\">:</span> core<span class=\"k\">.</span>Task<span class=\"k\">.</span>STOPPED<span class=\"k\">,</span>","","  <span class=\"c\">/*****************************************************************</span>","<span class=\"c\">   *</span>","<span class=\"c\">   ****************************************************************/</span>","   ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @private</span>","<span class=\"c\">   * @type {HTMLDivElement}</span>","<span class=\"c\">   */</span>","   __video_node<span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @type {string}</span>","<span class=\"c\">   */</span>","  _src<span class=\"k\">:</span> <span class=\"s\">\"\"</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @type {string}</span>","<span class=\"c\">   */</span>","  _poster<span class=\"k\">:</span> <span class=\"s\">\"\"</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @type {HTMLDivElement}</span>","<span class=\"c\">   */</span>","  _preload<span class=\"k\">:</span> <span class=\"s\">\"\"</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @type {boolean}</span>","<span class=\"c\">   */</span>","  _autoplay<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @type {boolean}</span>","<span class=\"c\">   */</span>","  _loop<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @type {boolean}</span>","<span class=\"c\">   */</span>","  _controls<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @type {number}</span>","<span class=\"c\">   */</span>","  _volume<span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @type {boolean}</span>","<span class=\"c\">   */</span>","  _muted<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @type {number}</span>","<span class=\"c\">   */</span>","  _current_time<span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span>","","  <span class=\"c\">/*****************************************************************</span>","<span class=\"c\">   *              Media player methods</span>","<span class=\"c\">   ****************************************************************/</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * When the play method is invoked, the video start to play.</span>","<span class=\"c\">   * A error event can be fired if a error occurs.</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.av.Video#play </span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  play <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_state <span class=\"k\">===</span> core<span class=\"k\">.</span>Task<span class=\"k\">.</span>STARTED<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>__video_node<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>_state <span class=\"k\">=</span> core<span class=\"k\">.</span>Task<span class=\"k\">.</span>STARTED<span class=\"k\">;</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>__video_node<span class=\"k\">.</span>play <span class=\"k\">();</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   *  Starts the task</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.av.Video#start</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @param {any} param any parameter (scalar, Array, Object)</span>","<span class=\"c\">   * @ignore</span>","<span class=\"c\">   */</span>","  start <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>play <span class=\"k\">();</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   *  When the pause method is invoked, the video is paused.</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.av.Video#pause </span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  pause <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_state <span class=\"k\">===</span> core<span class=\"k\">.</span>Task<span class=\"k\">.</span>PAUSED<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span> <span class=\"k\">}</span>","","    <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>__video_node<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>__video_node<span class=\"k\">.</span>pause <span class=\"k\">();</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>_state <span class=\"k\">=</span> core<span class=\"k\">.</span>Task<span class=\"k\">.</span>PAUSED<span class=\"k\">;</span>","","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>delegate <span class=\"k\">&amp;&amp;</span> <span class=\"k\">this</span><span class=\"k\">.</span>delegate<span class=\"k\">.</span>taskDidPause<span class=\"k\">)</span>","    <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>delegate<span class=\"k\">.</span>taskDidPause <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span> <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   *  When the stop method is invoked, the video is stopped.</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.av.Video#stop </span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  stop <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_state <span class=\"k\">===</span> core<span class=\"k\">.</span>Task<span class=\"k\">.</span>STOPPED<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span> <span class=\"k\">}</span>","","    <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>__video_node<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__video_node<span class=\"k\">.</span>stop<span class=\"k\">)</span> <span class=\"k\">this</span><span class=\"k\">.</span>__video_node<span class=\"k\">.</span>stop <span class=\"k\">();</span>","    <span class=\"k\">else</span>","    <span class=\"k\">{</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>__video_node<span class=\"k\">.</span>pause <span class=\"k\">();</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>__video_node<span class=\"k\">.</span>currentTime <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">this</span><span class=\"k\">.</span>_state <span class=\"k\">=</span> core<span class=\"k\">.</span>Task<span class=\"k\">.</span>STOPPED<span class=\"k\">;</span>","","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>delegate <span class=\"k\">&amp;&amp;</span> <span class=\"k\">this</span><span class=\"k\">.</span>delegate<span class=\"k\">.</span>taskDidStop<span class=\"k\">)</span>","    <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>delegate<span class=\"k\">.</span>taskDidStop <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span> <span class=\"k\">}</span>"," <span class=\"k\">}</span><span class=\"k\">,</span>","","  <span class=\"c\">/*****************************************************************</span>","<span class=\"c\">   *</span>","<span class=\"c\">   ****************************************************************/</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  destructor <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>__i__<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    ","    <span class=\"c\">// bindings</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>__video_node<span class=\"k\">.</span>removeEventListener <span class=\"k\">(</span><span class=\"s\">'volumechange'</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>__video_node<span class=\"k\">.</span>removeEventListener <span class=\"k\">(</span><span class=\"s\">'ended'</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>__video_node<span class=\"k\">.</span>removeEventListener <span class=\"k\">(</span><span class=\"s\">'playing'</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>__video_node<span class=\"k\">.</span>removeEventListener <span class=\"k\">(</span><span class=\"s\">'play'</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>__video_node<span class=\"k\">.</span>removeEventListener <span class=\"k\">(</span><span class=\"s\">'pause'</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>__video_node<span class=\"k\">.</span>removeEventListener <span class=\"k\">(</span><span class=\"s\">'error'</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","","    ui<span class=\"k\">.</span>View<span class=\"k\">.</span>prototype<span class=\"k\">.</span>destructor<span class=\"k\">.</span>call <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  initComponent <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    ui<span class=\"k\">.</span>View<span class=\"k\">.</span>prototype<span class=\"k\">.</span>initComponent<span class=\"k\">.</span>call <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","    ","    <span class=\"k\">this</span><span class=\"k\">.</span>__video_node <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>view<span class=\"k\">.</span>querySelector <span class=\"k\">(</span><span class=\"s\">'video'</span><span class=\"k\">);</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>__video_node<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      console<span class=\"k\">.</span>error <span class=\"k\">(</span><span class=\"s\">'Uncompatible video view'</span><span class=\"k\">);</span>","      <span class=\"k\">return</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","    ","    <span class=\"c\">// bindings</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>__video_node<span class=\"k\">.</span>addEventListener <span class=\"k\">(</span><span class=\"s\">'volumechange'</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>__video_node<span class=\"k\">.</span>addEventListener <span class=\"k\">(</span><span class=\"s\">'ended'</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>__video_node<span class=\"k\">.</span>addEventListener <span class=\"k\">(</span><span class=\"s\">'playing'</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>__video_node<span class=\"k\">.</span>addEventListener <span class=\"k\">(</span><span class=\"s\">'play'</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>__video_node<span class=\"k\">.</span>addEventListener <span class=\"k\">(</span><span class=\"s\">'pause'</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>__video_node<span class=\"k\">.</span>addEventListener <span class=\"k\">(</span><span class=\"s\">'error'</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","    ","    <span class=\"k\">var</span> self <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">,</span>","      _timeupdate <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","    <span class=\"k\">{</span>","      self<span class=\"k\">.</span>_current_time <span class=\"k\">=</span> self<span class=\"k\">.</span>__video_node<span class=\"k\">.</span>currentTime<span class=\"k\">;</span>","      self<span class=\"k\">.</span>propertyChange <span class=\"k\">(</span><span class=\"s\">'currentTime'</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>__video_node<span class=\"k\">.</span>addEventListener <span class=\"k\">(</span><span class=\"s\">'timeupdate'</span><span class=\"k\">,</span> _timeupdate<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  handleEvent <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>event<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">switch</span> <span class=\"k\">(</span>event<span class=\"k\">.</span>type<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">case</span> <span class=\"s\">'volumechange'</span><span class=\"k\">:</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>_volume <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>__video_node<span class=\"k\">.</span>getAttribute <span class=\"k\">(</span><span class=\"s\">'volume'</span><span class=\"k\">);</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>propertyChange <span class=\"k\">(</span><span class=\"s\">'volume'</span><span class=\"k\">);</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>propagate <span class=\"k\">(</span><span class=\"s\">'volumechange'</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>_volume<span class=\"k\">);</span>","      <span class=\"k\">break</span><span class=\"k\">;</span>","","      <span class=\"k\">case</span> <span class=\"s\">'ended'</span><span class=\"k\">:</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>_state <span class=\"k\">=</span> core<span class=\"k\">.</span>Task<span class=\"k\">.</span>STOPED<span class=\"k\">;</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>delegate <span class=\"k\">&amp;&amp;</span> <span class=\"k\">this</span><span class=\"k\">.</span>delegate<span class=\"k\">.</span>taskDidEnd<span class=\"k\">)</span>","        <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>delegate<span class=\"k\">.</span>taskDidEnd <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span> <span class=\"k\">}</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>propagate <span class=\"k\">(</span>event<span class=\"k\">.</span>type<span class=\"k\">);</span>","      <span class=\"k\">break</span><span class=\"k\">;</span>","","      <span class=\"k\">case</span> <span class=\"s\">'pause'</span><span class=\"k\">:</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>delegate <span class=\"k\">&amp;&amp;</span> <span class=\"k\">this</span><span class=\"k\">.</span>delegate<span class=\"k\">.</span>taskDidPause<span class=\"k\">)</span>","        <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>delegate<span class=\"k\">.</span>taskDidPause <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span> <span class=\"k\">}</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>_state <span class=\"k\">=</span> core<span class=\"k\">.</span>Task<span class=\"k\">.</span>PAUSED<span class=\"k\">;</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>propagate <span class=\"k\">(</span>event<span class=\"k\">.</span>type<span class=\"k\">);</span>","      <span class=\"k\">break</span><span class=\"k\">;</span>","","      <span class=\"k\">case</span> <span class=\"s\">'playing'</span><span class=\"k\">:</span>","      <span class=\"k\">case</span> <span class=\"s\">'play'</span><span class=\"k\">:</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>_state <span class=\"k\">=</span> core<span class=\"k\">.</span>Task<span class=\"k\">.</span>STARTED<span class=\"k\">;</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>propagate <span class=\"k\">(</span>event<span class=\"k\">.</span>type<span class=\"k\">);</span>","      <span class=\"k\">break</span><span class=\"k\">;</span>","","      <span class=\"k\">case</span> <span class=\"s\">'error'</span><span class=\"k\">:</span> ","        <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>__video_node<span class=\"k\">.</span>error<span class=\"k\">)</span>","        <span class=\"k\">{</span>","          <span class=\"k\">this</span><span class=\"k\">.</span>propagate <span class=\"k\">(</span>event<span class=\"k\">.</span>type<span class=\"k\">,</span> Video<span class=\"k\">.</span>UNKNOWN_ERR<span class=\"k\">);</span>","        <span class=\"k\">}</span>","        <span class=\"k\">else</span>","        <span class=\"k\">{</span>","          <span class=\"k\">this</span><span class=\"k\">.</span>propagate <span class=\"k\">(</span>event<span class=\"k\">.</span>type<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>__video_node<span class=\"k\">.</span>error<span class=\"k\">.</span>code<span class=\"k\">);</span>","        <span class=\"k\">}</span>","      <span class=\"k\">break</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","util<span class=\"k\">.</span>extendClass <span class=\"k\">(</span>Video<span class=\"k\">,</span> ui<span class=\"k\">.</span>View<span class=\"k\">);</span>","","<span class=\"c\">/********************************************************************</span>","<span class=\"c\">                  Define class properties</span>","<span class=\"c\">********************************************************************/</span>","","util<span class=\"k\">.</span>defineClassProperties <span class=\"k\">(</span>Video<span class=\"k\">,</span> <span class=\"k\">{</span>","","  <span class=\"s\">'controls'</span><span class=\"k\">:</span> <span class=\"k\">{</span>","  ","    <span class=\"c\">/**</span>","<span class=\"c\">     * The controls property indicates the address to expose or not the a user</span>","<span class=\"c\">     * interface for the video controls.</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * @name vs.av.Video#controls </span>","<span class=\"c\">     * @type {boolean}</span>","<span class=\"c\">     */</span>","    set <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>v<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>v<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>_controls <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      <span class=\"k\">else</span> <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>_controls <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      ","      <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>__video_node<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>__video_node<span class=\"k\">.</span>setAttribute <span class=\"k\">(</span><span class=\"s\">\"controls\"</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>_controls<span class=\"k\">);</span>","      ","      <span class=\"k\">this</span><span class=\"k\">.</span>propertyChange <span class=\"k\">(</span><span class=\"s\">'controls'</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","    ","    <span class=\"c\">/**</span>","<span class=\"c\">     * @ignore</span>","<span class=\"c\">     */</span>","    get <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","    <span class=\"k\">{</span>","      <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_controls<span class=\"k\">;</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","  <span class=\"s\">'size'</span><span class=\"k\">:</span> <span class=\"k\">{</span>","  ","   <span class=\"c\">/** </span>","<span class=\"c\">     * Getter|Setter for size. Gives the dimensions of the visual content</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * @type {Array.&lt;number&gt;}</span>","<span class=\"c\">     */</span> ","    set <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>v<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(!</span>v<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span> ","      <span class=\"k\">if</span> <span class=\"k\">(!</span>util<span class=\"k\">.</span>isArray <span class=\"k\">(</span>v<span class=\"k\">)</span> <span class=\"k\">||</span> v<span class=\"k\">.</span>length <span class=\"k\">!==</span> <span class=\"s\">2</span><span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      <span class=\"k\">if</span> <span class=\"k\">(!</span>util<span class=\"k\">.</span>isNumber <span class=\"k\">(</span>v<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">])</span> <span class=\"k\">||</span> <span class=\"k\">!</span>util<span class=\"k\">.</span>isNumber<span class=\"k\">(</span>v<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]))</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","  ","      <span class=\"k\">this</span><span class=\"k\">.</span>_size <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">=</span> v <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_size <span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]</span> <span class=\"k\">=</span> v <span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">];</span>","      ","      <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>view<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_updateSize <span class=\"k\">();</span>","  ","      <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>__video_node<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>__video_node <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>view<span class=\"k\">.</span>querySelector <span class=\"k\">(</span><span class=\"s\">'video'</span><span class=\"k\">);</span>","        <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>__video_node<span class=\"k\">)</span>","        <span class=\"k\">{</span>","          console<span class=\"k\">.</span>error <span class=\"k\">(</span><span class=\"s\">'Uncompatible video view'</span><span class=\"k\">);</span>","          <span class=\"k\">return</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span>","     <span class=\"k\">this</span><span class=\"k\">.</span>__video_node<span class=\"k\">.</span>setAttribute <span class=\"k\">(</span><span class=\"s\">'width'</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>_size <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]);</span>","     <span class=\"k\">this</span><span class=\"k\">.</span>__video_node<span class=\"k\">.</span>setAttribute <span class=\"k\">(</span><span class=\"s\">'height'</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>_size <span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]);</span>    ","    <span class=\"k\">}</span><span class=\"k\">,</span>","  ","    <span class=\"c\">/**</span>","<span class=\"c\">     * @ignore</span>","<span class=\"c\">     * @type {Array.&lt;number&gt;}</span>","<span class=\"c\">     */</span>","    get <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>view <span class=\"k\">&amp;&amp;</span> <span class=\"k\">this</span><span class=\"k\">.</span>view<span class=\"k\">.</span>parentNode<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>_size <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>view<span class=\"k\">.</span>offsetWidth<span class=\"k\">;</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>_size <span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>view<span class=\"k\">.</span>offsetHeight<span class=\"k\">;</span>","      <span class=\"k\">}</span>","      <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_size<span class=\"k\">.</span>slice <span class=\"k\">();</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","  <span class=\"s\">'src'</span><span class=\"k\">:</span> <span class=\"k\">{</span>","  ","    <span class=\"c\">/**</span>","<span class=\"c\">     * The src property attribute gives the address of the media resource to </span>","<span class=\"c\">     * show.</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * @name vs.av.Video#src </span>","<span class=\"c\">     * @type {string}</span>","<span class=\"c\">     */</span>","    set <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>v<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(!</span>util<span class=\"k\">.</span>isString <span class=\"k\">(</span>v<span class=\"k\">))</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      ","      <span class=\"k\">this</span><span class=\"k\">.</span>_src <span class=\"k\">=</span> v<span class=\"k\">;</span>","      ","      <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>__video_node<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>__video_node<span class=\"k\">.</span>setAttribute <span class=\"k\">(</span><span class=\"s\">\"src\"</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>_src<span class=\"k\">);</span>","  ","      <span class=\"k\">this</span><span class=\"k\">.</span>propertyChange <span class=\"k\">(</span><span class=\"s\">'src'</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","  ","    <span class=\"c\">/**</span>","<span class=\"c\">     * @ignore</span>","<span class=\"c\">     */</span>","    get <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","    <span class=\"k\">{</span>","      <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_src<span class=\"k\">;</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","  <span class=\"s\">'poster'</span><span class=\"k\">:</span> <span class=\"k\">{</span>","  ","    <span class=\"c\">/**</span>","<span class=\"c\">     * The src property attribute gives the address of the media resource to </span>","<span class=\"c\">     * show.</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * @name vs.av.Video#poster</span>","<span class=\"c\">     * @type {string}</span>","<span class=\"c\">     */</span>","    set <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>v<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(!</span>util<span class=\"k\">.</span>isString <span class=\"k\">(</span>v<span class=\"k\">))</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      ","      <span class=\"k\">this</span><span class=\"k\">.</span>_poster <span class=\"k\">=</span> v<span class=\"k\">;</span>","      ","      <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>__video_node<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>__video_node<span class=\"k\">.</span>setAttribute <span class=\"k\">(</span><span class=\"s\">\"poster\"</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>_poster<span class=\"k\">);</span>","  ","      <span class=\"k\">this</span><span class=\"k\">.</span>propertyChange <span class=\"k\">(</span><span class=\"s\">'poster'</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","  ","    <span class=\"c\">/**</span>","<span class=\"c\">     * @ignore</span>","<span class=\"c\">     */</span>","    get <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","    <span class=\"k\">{</span>","      <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_poster<span class=\"k\">;</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","  <span class=\"s\">'loop'</span><span class=\"k\">:</span> <span class=\"k\">{</span>","  ","    <span class=\"c\">/**</span>","<span class=\"c\">     * The loop property indicates that the media element is to seek back to</span>","<span class=\"c\">     * the start of the media resource upon reaching the end.</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * @name vs.av.Video#loop </span>","<span class=\"c\">     * @type {boolean}</span>","<span class=\"c\">     */</span>","    set <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>v<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>v<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>_loop <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      <span class=\"k\">else</span> <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>_loop <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      ","      <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>__video_node<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>__video_node<span class=\"k\">.</span>setAttribute <span class=\"k\">(</span><span class=\"s\">\"loop\"</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>_loop<span class=\"k\">);</span>","      ","      <span class=\"k\">this</span><span class=\"k\">.</span>propertyChange <span class=\"k\">(</span><span class=\"s\">'loop'</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","  ","    <span class=\"c\">/**</span>","<span class=\"c\">     * @ignore</span>","<span class=\"c\">     */</span>","    get <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","    <span class=\"k\">{</span>","      <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_loop<span class=\"k\">;</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","  <span class=\"s\">'autoplay'</span><span class=\"k\">:</span> <span class=\"k\">{</span>","    <span class=\"c\">/**</span>","<span class=\"c\">     * The autoplay property indicates the video will automatically begin </span>","<span class=\"c\">     * playback as soon as it can do so without stopping</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * @name vs.av.Video#autoplay </span>","<span class=\"c\">     * @type {boolean}</span>","<span class=\"c\">     */</span>","    set <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>v<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>v<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>_autoplay <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      <span class=\"k\">else</span> <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>_autoplay <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      ","      <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>__video_node<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>__video_node<span class=\"k\">.</span>setAttribute <span class=\"k\">(</span><span class=\"s\">\"autoplay\"</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>_autoplay<span class=\"k\">);</span>","      ","      <span class=\"k\">this</span><span class=\"k\">.</span>propertyChange <span class=\"k\">(</span><span class=\"s\">'autoplay'</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","  ","    <span class=\"c\">/**</span>","<span class=\"c\">     * @ignore</span>","<span class=\"c\">     */</span>","    get <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","    <span class=\"k\">{</span>","      <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_autoplay<span class=\"k\">;</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","  <span class=\"s\">'volume'</span><span class=\"k\">:</span> <span class=\"k\">{</span>","  ","    <span class=\"c\">/**</span>","<span class=\"c\">     * The volume property gives acces to the current playback volume</span>","<span class=\"c\">     * as a number in the range 0.0 to 1.0</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * @name vs.av.Video#volume </span>","<span class=\"c\">     * @type {number}</span>","<span class=\"c\">     */</span>","    set <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>v<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(!</span>util<span class=\"k\">.</span>isNumber <span class=\"k\">(</span>v<span class=\"k\">))</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>v <span class=\"k\">&lt;</span> <span class=\"s\">0</span> <span class=\"k\">||</span> v <span class=\"k\">&gt;</span> <span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      ","      <span class=\"k\">this</span><span class=\"k\">.</span>_volume <span class=\"k\">=</span> v<span class=\"k\">;</span>","      ","      <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>__video_node<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>__video_node<span class=\"k\">.</span>setAttribute <span class=\"k\">(</span><span class=\"s\">\"volume\"</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>_volume<span class=\"k\">);</span>","      ","      <span class=\"k\">this</span><span class=\"k\">.</span>propertyChange <span class=\"k\">(</span><span class=\"s\">'volume'</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","  ","    <span class=\"c\">/**</span>","<span class=\"c\">     * @ignore</span>","<span class=\"c\">     */</span>","    get <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","    <span class=\"k\">{</span>","      <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_volume<span class=\"k\">;</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","  <span class=\"s\">'muted'</span><span class=\"k\">:</span> <span class=\"k\">{</span>","  ","    <span class=\"c\">/**</span>","<span class=\"c\">     * The muted property is true if the audio channels are muted and</span>","<span class=\"c\">     * false otherwise</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * @name vs.av.Video#muted </span>","<span class=\"c\">     * @type {boolean}</span>","<span class=\"c\">     */</span>","    set <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>v<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>v<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>_muted <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      <span class=\"k\">else</span> <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>_muted <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      ","      <span class=\"k\">this</span><span class=\"k\">.</span>propertyChange <span class=\"k\">(</span><span class=\"s\">'muted'</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","  ","    <span class=\"c\">/**</span>","<span class=\"c\">     * @ignore</span>","<span class=\"c\">     */</span>","    get <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","    <span class=\"k\">{</span>","      <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_muted<span class=\"k\">;</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","  <span class=\"s\">'currentTime'</span><span class=\"k\">:</span> <span class=\"k\">{</span>","  ","    <span class=\"c\">/**</span>","<span class=\"c\">     * The current playback position </span>","<span class=\"c\">     *</span>","<span class=\"c\">     * @name vs.av.Video#currentTime </span>","<span class=\"c\">     * @type {number}</span>","<span class=\"c\">     */</span>","    get <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","    <span class=\"k\">{</span>","      <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_current_time<span class=\"k\">;</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","  <span class=\"s\">'state'</span><span class=\"k\">:</span> <span class=\"k\">{</span>","  ","    <span class=\"c\">/** </span>","<span class=\"c\">     * Return the task State. &lt;br /&gt;</span>","<span class=\"c\">     * Possible values: {@link vs.core.Task.STARTED},</span>","<span class=\"c\">     * {@link vs.core.Task.STOPPED},</span>","<span class=\"c\">     * {@link vs.core.Task.PAUSED}</span>","<span class=\"c\">     * @name vs.av.Video#state</span>","<span class=\"c\">     * @type {number}</span>","<span class=\"c\">     */</span> ","    get <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","    <span class=\"k\">{</span>","      <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_state<span class=\"k\">;</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">);</span>","","<span class=\"c\">/********************************************************************</span>","<span class=\"c\">                      Export</span>","<span class=\"c\">*********************************************************************/</span>","<span class=\"c\">/** @private */</span>","av<span class=\"k\">.</span>Video <span class=\"k\">=</span> Video<span class=\"k\">;</span>","<span class=\"c\">/**</span>","<span class=\"c\">  Copyright (C) 2009-2012. David Thevenin, ViniSketch SARL (c), and </span>","<span class=\"c\">  contributors. All rights reserved</span>","<span class=\"c\">  </span>","<span class=\"c\">  This program is free software: you can redistribute it and/or modify</span>","<span class=\"c\">  it under the terms of the GNU Lesser General Public License as published</span>","<span class=\"c\">  by the Free Software Foundation, either version 3 of the License, or</span>","<span class=\"c\">  (at your option) any later version.</span>","<span class=\"c\">  </span>","<span class=\"c\">  This program is distributed in the hope that it will be useful,</span>","<span class=\"c\">  but WITHOUT ANY WARRANTY; without even the implied warranty of</span>","<span class=\"c\">  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the</span>","<span class=\"c\">  GNU Lesser General Public License for more details.</span>","<span class=\"c\">  </span>","<span class=\"c\">  You should have received a copy of the GNU Lesser General Public License</span>","<span class=\"c\">  along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.</span>","<span class=\"c\"> </span>","<span class=\"c\"> Use code from Canto.js Copyright 2010 David Flanagan</span>","<span class=\"c\">*/</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> *  The vs.av.Audio class</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  @extends vs.core.EventSource</span>","<span class=\"c\"> *  @class</span>","<span class=\"c\"> *  Implements {@link vs.core.Task}.</span>","<span class=\"c\"> *  &lt;p&gt;</span>","<span class=\"c\"> *  The Audio class allow to show a movie clip or other video streams.</span>","<span class=\"c\"> *  &lt;p&gt;</span>","<span class=\"c\"> *  Events:</span>","<span class=\"c\"> *  &lt;ul&gt;</span>","<span class=\"c\"> *    &lt;li /&gt; volumechange: Fired after the volume attribute or the muted attribute has changed.</span>","<span class=\"c\"> *    &lt;li /&gt; error: An error occurs while fetching the media data.</span>","<span class=\"c\"> *    &lt;li /&gt; ended : Fired when playback has stopped because the end of the media resource was reached.</span>","<span class=\"c\"> *    &lt;li /&gt; playing : Fired when playback has started.</span>","<span class=\"c\"> *    &lt;li /&gt; play : Playback has begun. Fired after the play() method has returned, or when the</span>","<span class=\"c\"> *           autoplay property has caused playback to begin.</span>","<span class=\"c\"> *    &lt;li /&gt; pause : Playback has been paused. Fired after the pause() method has returned.</span>","<span class=\"c\"> *  &lt;/ul&gt;</span>","<span class=\"c\"> *  &lt;p&gt;</span>","<span class=\"c\"> * The delegate has to implement:</span>","<span class=\"c\"> *  &lt;ul&gt;</span>","<span class=\"c\"> *    &lt;li/&gt;taskDidStop : function (vs.core.Task)</span>","<span class=\"c\"> *    &lt;li/&gt;taskDidPause : function (vs.core.Task)</span>","<span class=\"c\"> *    &lt;li/&gt;taskDidEnd : function (vs.core.Task)</span>","<span class=\"c\"> *  &lt;/ul&gt;</span>","<span class=\"c\"> *  @author David Thevenin</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  @constructor</span>","<span class=\"c\"> *   Creates a new vs.av.Audio.</span>","<span class=\"c\"> *  @name vs.av.Audio</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *  @example</span>","<span class=\"c\"> *   var myVideo = new vs.av.Audio ({id:'my_video'});</span>","<span class=\"c\"> *   myVideo.init ();</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *   myVideo.src = \"http://yourlink.mp4\";</span>","<span class=\"c\"> *   myVideo.poster = \"http://yourlink.jpg\";</span>","<span class=\"c\"> *   myVideo.controls = true;</span>","<span class=\"c\"> *   myVideo.loop = true;</span>","<span class=\"c\"> *   myVideo.play ();</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *\t@param {Object} config The configuration structure [mandatory]</span>","<span class=\"c\">*/</span>","<span class=\"k\">function</span> Audio <span class=\"k\">(</span>config<span class=\"k\">)</span>","<span class=\"k\">{</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>parent <span class=\"k\">=</span> core<span class=\"k\">.</span>EventSource<span class=\"k\">;</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>parent <span class=\"k\">(</span>config<span class=\"k\">);</span>","  <span class=\"k\">this</span><span class=\"k\">.</span>constructor <span class=\"k\">=</span> Audio<span class=\"k\">;</span>","<span class=\"k\">}</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * Error code</span>","<span class=\"c\"> * @const</span>","<span class=\"c\"> * @name vs.av.Audio.UNKNOWN_ERR</span>","<span class=\"c\"> */</span>","Audio<span class=\"k\">.</span>UNKNOWN_ERR <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * Error code: The fetching process for the media resource was aborted by the </span>","<span class=\"c\"> * user agent at the user's request.</span>","<span class=\"c\"> * @const</span>","<span class=\"c\"> * @name vs.av.Audio.MEDIA_ERR_ABORTED</span>","<span class=\"c\"> */</span>","Audio<span class=\"k\">.</span>MEDIA_ERR_ABORTED <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * Error code: A network error of some description caused the user agent to </span>","<span class=\"c\"> * stop fetching the media resource, after the resource was established to</span>","<span class=\"c\"> * be usable</span>","<span class=\"c\"> * @const</span>","<span class=\"c\"> * @name vs.av.Audio.MEDIA_ERR_NETWORK</span>","<span class=\"c\"> */</span>","Audio<span class=\"k\">.</span>MEDIA_ERR_NETWORK <span class=\"k\">=</span> <span class=\"s\">2</span><span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * Error code: An error of some description occurred while decoding the</span>","<span class=\"c\"> * media resource, after the resource was established to be usable.</span>","<span class=\"c\"> * @const</span>","<span class=\"c\"> * @name vs.av.Audio.MEDIA_ERR_DECODE</span>","<span class=\"c\"> */</span>","Audio<span class=\"k\">.</span>MEDIA_ERR_DECODE <span class=\"k\">=</span> <span class=\"s\">3</span><span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * Error code: The media resource indicated by the src attribute was not </span>","<span class=\"c\"> * suitable.</span>","<span class=\"c\"> * @const</span>","<span class=\"c\"> * @name vs.av.Audio.MEDIA_ERR_SRC_NOT_SUPPORTED</span>","<span class=\"c\"> */</span>","Audio<span class=\"k\">.</span>MEDIA_ERR_SRC_NOT_SUPPORTED <span class=\"k\">=</span> <span class=\"s\">4</span><span class=\"k\">;</span>","","Audio<span class=\"k\">.</span>prototype <span class=\"k\">=</span> <span class=\"k\">{</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * TaskDelegate.</span>","<span class=\"c\">   * Methods are called when state changes (stop | pause)</span>","<span class=\"c\">   * Should implements: </span>","<span class=\"c\">   *  &lt;ul&gt;</span>","<span class=\"c\">   *    &lt;li/&gt;taskDidStop : function (vs.core.Task)</span>","<span class=\"c\">   *    &lt;li/&gt;taskDidPause : function (vs.core.Task)</span>","<span class=\"c\">   *    &lt;li/&gt;taskDidEnd : function (vs.core.Task)</span>","<span class=\"c\">   *  &lt;/ul&gt;</span>","<span class=\"c\">   *\t@property</span>","<span class=\"c\">   * @name vs.av.Audio#delegate</span>","<span class=\"c\">   */</span>","  delegate <span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/*****************************************************************</span>","<span class=\"c\">   *                          State</span>","<span class=\"c\">   ****************************************************************/</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * @private</span>","<span class=\"c\">   */</span>","  _state <span class=\"k\">:</span> core<span class=\"k\">.</span>Task<span class=\"k\">.</span>STOPPED<span class=\"k\">,</span>","","  <span class=\"c\">/*****************************************************************</span>","<span class=\"c\">   *</span>","<span class=\"c\">   ****************************************************************/</span>","   ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @private</span>","<span class=\"c\">   * @type {AudioConstructor}</span>","<span class=\"c\">   */</span>","   __audio<span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @type {string}</span>","<span class=\"c\">   */</span>","  _src<span class=\"k\">:</span> <span class=\"s\">\"\"</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @type {boolean}</span>","<span class=\"c\">   */</span>","  _autoplay<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @type {boolean}</span>","<span class=\"c\">   */</span>","  _loop<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @type {number}</span>","<span class=\"c\">   */</span>","  _volume<span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @type {boolean}</span>","<span class=\"c\">   */</span>","  _muted<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @type {number}</span>","<span class=\"c\">   */</span>","  _current_time<span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span>","","  <span class=\"c\">/*****************************************************************</span>","<span class=\"c\">   *              Media player methods</span>","<span class=\"c\">   ****************************************************************/</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * When the play method is invoked, the video start to play.</span>","<span class=\"c\">   * A error event can be fired if a error occurs.</span>","<span class=\"c\">   *</span>","<span class=\"c\">   * @name vs.av.Audio#play</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  play <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_state <span class=\"k\">===</span> core<span class=\"k\">.</span>Task<span class=\"k\">.</span>STARTED<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>__audio<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>_state <span class=\"k\">=</span> core<span class=\"k\">.</span>Task<span class=\"k\">.</span>STARTED<span class=\"k\">;</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>__audio<span class=\"k\">.</span>play <span class=\"k\">();</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   *  Starts the task</span>","<span class=\"c\">   *</span>","<span class=\"c\">   *@param {any} param any parameter (scalar, Array, Object)</span>","<span class=\"c\">   * @ignore</span>","<span class=\"c\">   * @name vs.av.Audio#start</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  start <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>play <span class=\"k\">();</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * When the pause method is invoked, the video is paused.</span>","<span class=\"c\">   * @name vs.av.Audio#pause</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  pause <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_state <span class=\"k\">===</span> core<span class=\"k\">.</span>Task<span class=\"k\">.</span>PAUSED<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span> <span class=\"k\">}</span>","","    <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>__audio<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>__audio<span class=\"k\">.</span>pause <span class=\"k\">();</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>_state <span class=\"k\">=</span> core<span class=\"k\">.</span>Task<span class=\"k\">.</span>PAUSED<span class=\"k\">;</span>","","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>delegate <span class=\"k\">&amp;&amp;</span> <span class=\"k\">this</span><span class=\"k\">.</span>delegate<span class=\"k\">.</span>taskDidPause<span class=\"k\">)</span>","    <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>delegate<span class=\"k\">.</span>taskDidPause <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span> <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * When the stop method is invoked, the video is stopped.</span>","<span class=\"c\">   * @name vs.av.Audio#stop</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  stop <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_state <span class=\"k\">===</span> core<span class=\"k\">.</span>Task<span class=\"k\">.</span>STOPPED<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span> <span class=\"k\">}</span>","","    <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>__audio<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>window<span class=\"k\">.</span>Media<span class=\"k\">)</span>","    <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>__audio<span class=\"k\">.</span>stop <span class=\"k\">();</span> <span class=\"k\">}</span>","    <span class=\"k\">else</span>","    <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>__audio<span class=\"k\">.</span>pause <span class=\"k\">();</span> <span class=\"k\">}</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>_state <span class=\"k\">=</span> core<span class=\"k\">.</span>Task<span class=\"k\">.</span>STOPPED<span class=\"k\">;</span>","","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>delegate <span class=\"k\">&amp;&amp;</span> <span class=\"k\">this</span><span class=\"k\">.</span>delegate<span class=\"k\">.</span>taskDidStop<span class=\"k\">)</span>","    <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>delegate<span class=\"k\">.</span>taskDidStop <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span> <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","  <span class=\"c\">/*****************************************************************</span>","<span class=\"c\">   *</span>","<span class=\"c\">   ****************************************************************/</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  destructor <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>__i__<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","    ","    <span class=\"c\">// unbinding</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>__audio<span class=\"k\">.</span>removeEventListener <span class=\"k\">(</span><span class=\"s\">'volumechange'</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>__audio<span class=\"k\">.</span>removeEventListener <span class=\"k\">(</span><span class=\"s\">'ended'</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>__audio<span class=\"k\">.</span>removeEventListener <span class=\"k\">(</span><span class=\"s\">'playing'</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>__audio<span class=\"k\">.</span>removeEventListener <span class=\"k\">(</span><span class=\"s\">'play'</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>__audio<span class=\"k\">.</span>removeEventListener <span class=\"k\">(</span><span class=\"s\">'pause'</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>__audio<span class=\"k\">.</span>removeEventListener <span class=\"k\">(</span><span class=\"s\">'error'</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","    ","    <span class=\"k\">delete</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__audio<span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>__audio <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","","    core<span class=\"k\">.</span>EventSource<span class=\"k\">.</span>prototype<span class=\"k\">.</span>destructor<span class=\"k\">.</span>call <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @name vs.av.Audio#initComponent</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  initComponent<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","  <span class=\"k\">{</span>","    core<span class=\"k\">.</span>EventSource<span class=\"k\">.</span>prototype<span class=\"k\">.</span>initComponent<span class=\"k\">.</span>call <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","    ","    <span class=\"k\">this</span><span class=\"k\">.</span>__audio <span class=\"k\">=</span> <span class=\"k\">new</span> window<span class=\"k\">.</span>Audio <span class=\"k\">();</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>__audio<span class=\"k\">.</span>preload <span class=\"k\">=</span> <span class=\"s\">\"auto\"</span><span class=\"k\">;</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>__audio<span class=\"k\">.</span>autoplay <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_autoplay<span class=\"k\">;</span>","","    <span class=\"c\">// bindings     </span>","    <span class=\"k\">this</span><span class=\"k\">.</span>__audio<span class=\"k\">.</span>addEventListener <span class=\"k\">(</span><span class=\"s\">'volumechange'</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>__audio<span class=\"k\">.</span>addEventListener <span class=\"k\">(</span><span class=\"s\">'ended'</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>__audio<span class=\"k\">.</span>addEventListener <span class=\"k\">(</span><span class=\"s\">'playing'</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>__audio<span class=\"k\">.</span>addEventListener <span class=\"k\">(</span><span class=\"s\">'play'</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>__audio<span class=\"k\">.</span>addEventListener <span class=\"k\">(</span><span class=\"s\">'pause'</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>__audio<span class=\"k\">.</span>addEventListener <span class=\"k\">(</span><span class=\"s\">'error'</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","    ","    <span class=\"k\">var</span> self <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">,</span> _timeupdate <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","    <span class=\"k\">{</span>","      self<span class=\"k\">.</span>_current_time <span class=\"k\">=</span> self<span class=\"k\">.</span>__audio<span class=\"k\">.</span>currentTime<span class=\"k\">;</span>","      self<span class=\"k\">.</span>propertyChange <span class=\"k\">(</span><span class=\"s\">'currentTime'</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>__audio<span class=\"k\">.</span>addEventListener <span class=\"k\">(</span><span class=\"s\">'timeupdate'</span><span class=\"k\">,</span> _timeupdate<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","  <span class=\"c\">/**</span>","<span class=\"c\">   * @protected</span>","<span class=\"c\">   * @name vs.av.Audio#handleEvent</span>","<span class=\"c\">   * @function</span>","<span class=\"c\">   */</span>","  handleEvent <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>event<span class=\"k\">)</span>","  <span class=\"k\">{</span>","    <span class=\"k\">switch</span> <span class=\"k\">(</span>event<span class=\"k\">.</span>type<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">case</span> <span class=\"s\">'volumechange'</span><span class=\"k\">:</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>_volume <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>__audio<span class=\"k\">.</span>volume<span class=\"k\">;</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>propertyChange <span class=\"k\">(</span><span class=\"s\">'volume'</span><span class=\"k\">);</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>propagate <span class=\"k\">(</span><span class=\"s\">'volumechange'</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>_volume<span class=\"k\">);</span>","      <span class=\"k\">break</span><span class=\"k\">;</span>","","      <span class=\"k\">case</span> <span class=\"s\">'ended'</span><span class=\"k\">:</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>_state <span class=\"k\">=</span> core<span class=\"k\">.</span>Task<span class=\"k\">.</span>STOPED<span class=\"k\">;</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>delegate <span class=\"k\">&amp;&amp;</span> <span class=\"k\">this</span><span class=\"k\">.</span>delegate<span class=\"k\">.</span>taskDidEnd<span class=\"k\">)</span>","        <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>delegate<span class=\"k\">.</span>taskDidEnd <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span> <span class=\"k\">}</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>propagate <span class=\"k\">(</span>event<span class=\"k\">.</span>type<span class=\"k\">);</span>","      <span class=\"k\">break</span><span class=\"k\">;</span>","","      <span class=\"k\">case</span> <span class=\"s\">'pause'</span><span class=\"k\">:</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>delegate <span class=\"k\">&amp;&amp;</span> <span class=\"k\">this</span><span class=\"k\">.</span>delegate<span class=\"k\">.</span>taskDidPause<span class=\"k\">)</span>","        <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>delegate<span class=\"k\">.</span>taskDidPause <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span> <span class=\"k\">}</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>_state <span class=\"k\">=</span> core<span class=\"k\">.</span>Task<span class=\"k\">.</span>PAUSED<span class=\"k\">;</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>propagate <span class=\"k\">(</span>event<span class=\"k\">.</span>type<span class=\"k\">);</span>","      <span class=\"k\">break</span><span class=\"k\">;</span>","","      <span class=\"k\">case</span> <span class=\"s\">'playing'</span><span class=\"k\">:</span>","      <span class=\"k\">case</span> <span class=\"s\">'play'</span><span class=\"k\">:</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>_state <span class=\"k\">=</span> core<span class=\"k\">.</span>Task<span class=\"k\">.</span>STARTED<span class=\"k\">;</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>propagate <span class=\"k\">(</span>event<span class=\"k\">.</span>type<span class=\"k\">);</span>","      <span class=\"k\">break</span><span class=\"k\">;</span>","","      <span class=\"k\">case</span> <span class=\"s\">'error'</span><span class=\"k\">:</span> ","        <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>__audio<span class=\"k\">.</span>error<span class=\"k\">)</span>","        <span class=\"k\">{</span>","          <span class=\"k\">this</span><span class=\"k\">.</span>propagate <span class=\"k\">(</span>event<span class=\"k\">.</span>type<span class=\"k\">,</span> Audio<span class=\"k\">.</span>UNKNOWN_ERR<span class=\"k\">);</span>","        <span class=\"k\">}</span>","        <span class=\"k\">else</span>","        <span class=\"k\">{</span>","          <span class=\"k\">this</span><span class=\"k\">.</span>propagate <span class=\"k\">(</span>event<span class=\"k\">.</span>type<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>__audio<span class=\"k\">.</span>error<span class=\"k\">.</span>code<span class=\"k\">);</span>","        <span class=\"k\">}</span>","      <span class=\"k\">break</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","util<span class=\"k\">.</span>extendClass <span class=\"k\">(</span>Audio<span class=\"k\">,</span> core<span class=\"k\">.</span>EventSource<span class=\"k\">);</span>","","<span class=\"c\">/********************************************************************</span>","<span class=\"c\">                  Define class properties</span>","<span class=\"c\">********************************************************************/</span>","","util<span class=\"k\">.</span>defineClassProperties <span class=\"k\">(</span>Audio<span class=\"k\">,</span> <span class=\"k\">{</span>","","  <span class=\"s\">'src'</span><span class=\"k\">:</span> <span class=\"k\">{</span>","  ","    <span class=\"c\">/**</span>","<span class=\"c\">     * The src property attribute gives the address of the media resource to </span>","<span class=\"c\">     * show.</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * @name vs.av.Audio#src </span>","<span class=\"c\">     * @type {string}</span>","<span class=\"c\">     */</span>","    set <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>v<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(!</span>vs<span class=\"k\">.</span>util<span class=\"k\">.</span>isString <span class=\"k\">(</span>v<span class=\"k\">))</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      ","      <span class=\"k\">this</span><span class=\"k\">.</span>_src <span class=\"k\">=</span> v<span class=\"k\">,</span> self <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","      ","      <span class=\"k\">if</span> <span class=\"k\">(</span>window<span class=\"k\">.</span>Media<span class=\"k\">)</span>","      <span class=\"k\">{</span>","        <span class=\"k\">function</span> onSuccess <span class=\"k\">()</span>","        <span class=\"k\">{</span>","          self<span class=\"k\">.</span>_state <span class=\"k\">=</span> core<span class=\"k\">.</span>Task<span class=\"k\">.</span>STOPED<span class=\"k\">;</span>","          <span class=\"k\">if</span> <span class=\"k\">(</span>self<span class=\"k\">.</span>delegate <span class=\"k\">&amp;&amp;</span> self<span class=\"k\">.</span>delegate<span class=\"k\">.</span>taskDidEnd<span class=\"k\">)</span>","          <span class=\"k\">{</span> self<span class=\"k\">.</span>delegate<span class=\"k\">.</span>taskDidEnd <span class=\"k\">(</span>self<span class=\"k\">);</span> <span class=\"k\">}</span>","          self<span class=\"k\">.</span>propagate <span class=\"k\">(</span>event<span class=\"k\">.</span>type<span class=\"k\">);</span>","        <span class=\"k\">}</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>__audio <span class=\"k\">=</span> <span class=\"k\">new</span> window<span class=\"k\">.</span>Media <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_src<span class=\"k\">,</span> onSuccess<span class=\"k\">);</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_autoplay<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>play <span class=\"k\">();</span> <span class=\"k\">}</span>","      <span class=\"k\">}</span>","      <span class=\"k\">else</span>","      <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>__audio<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>__audio<span class=\"k\">.</span>src <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_src<span class=\"k\">;</span>","      <span class=\"k\">}</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>propertyChange <span class=\"k\">(</span><span class=\"s\">'src'</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","  ","    <span class=\"c\">/**</span>","<span class=\"c\">     * @ignore </span>","<span class=\"c\">     * @type {string}</span>","<span class=\"c\">     */</span>","    get <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","    <span class=\"k\">{</span>","      <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_src<span class=\"k\">;</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","  <span class=\"s\">'loop'</span><span class=\"k\">:</span> <span class=\"k\">{</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * The loop property indicates that the media element is to seek back to</span>","<span class=\"c\">     * the start of the media resource upon reaching the end.</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * @name vs.av.Audio#loop </span>","<span class=\"c\">     * @type {boolean}</span>","<span class=\"c\">     */</span>","    set <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>v<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>v<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>_loop <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      <span class=\"k\">else</span> <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>_loop <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      ","      <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>__audio<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>__audio<span class=\"k\">.</span>loop <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_loop<span class=\"k\">;</span>","      ","      <span class=\"k\">this</span><span class=\"k\">.</span>propertyChange <span class=\"k\">(</span><span class=\"s\">'loop'</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","  ","    <span class=\"c\">/**</span>","<span class=\"c\">     * @ignore </span>","<span class=\"c\">     * @type {boolean}</span>","<span class=\"c\">     */</span>","    get <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","    <span class=\"k\">{</span>","      <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_loop<span class=\"k\">;</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","  <span class=\"s\">'autoplay'</span><span class=\"k\">:</span> <span class=\"k\">{</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * The autoplay property indicates the video will automatically begin playback </span>","<span class=\"c\">     * as soon as it can do so without stopping</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * @name vs.av.Audio#autoplay </span>","<span class=\"c\">     * @type {boolean}</span>","<span class=\"c\">     */</span>","    set <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>v<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>v<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>_autoplay <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      <span class=\"k\">else</span> <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>_autoplay <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      ","      <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>__audio<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>__audio<span class=\"k\">.</span>autoplay <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_autoplay<span class=\"k\">;</span>","      ","      <span class=\"k\">this</span><span class=\"k\">.</span>propertyChange <span class=\"k\">(</span><span class=\"s\">'autoplay'</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","  ","    <span class=\"c\">/**</span>","<span class=\"c\">     * @ignore </span>","<span class=\"c\">     * @type {boolean}</span>","<span class=\"c\">     */</span>","    get <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","    <span class=\"k\">{</span>","      <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_autoplay<span class=\"k\">;</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","  <span class=\"s\">'volume'</span><span class=\"k\">:</span> <span class=\"k\">{</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * The volume property gives acces to the current playback volume</span>","<span class=\"c\">     * as a number in the range 0.0 to 1.0</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * @name vs.av.Audio#volume </span>","<span class=\"c\">     * @type {number}</span>","<span class=\"c\">     */</span>","    set <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>v<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(!</span>vs<span class=\"k\">.</span>util<span class=\"k\">.</span>isNumber <span class=\"k\">(</span>v<span class=\"k\">))</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>v <span class=\"k\">&lt;</span> <span class=\"s\">0</span> <span class=\"k\">||</span> v <span class=\"k\">&gt;</span> <span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      ","      <span class=\"k\">this</span><span class=\"k\">.</span>_volume <span class=\"k\">=</span> v<span class=\"k\">;</span>","      ","      <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>__audio<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>__audio<span class=\"k\">.</span>volume <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_volume<span class=\"k\">;</span>","      ","      <span class=\"k\">this</span><span class=\"k\">.</span>propertyChange <span class=\"k\">(</span><span class=\"s\">'volume'</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","  ","    <span class=\"c\">/**</span>","<span class=\"c\">     * @ignore </span>","<span class=\"c\">     * @type {number}</span>","<span class=\"c\">     */</span>","    get <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","    <span class=\"k\">{</span>","      <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_volume<span class=\"k\">;</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","  <span class=\"s\">'muted'</span><span class=\"k\">:</span> <span class=\"k\">{</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * The muted property is true if the audio channels are muted and</span>","<span class=\"c\">     * false otherwise</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * @name vs.av.Audio#muted </span>","<span class=\"c\">     * @type {boolean}</span>","<span class=\"c\">     */</span>","    set <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>v<span class=\"k\">)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>v<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>_muted <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      <span class=\"k\">else</span> <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>_muted <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span> <span class=\"k\">}</span>","      ","      <span class=\"k\">this</span><span class=\"k\">.</span>propertyChange <span class=\"k\">(</span><span class=\"s\">'muted'</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","  ","    <span class=\"c\">/**</span>","<span class=\"c\">     * @ignore </span>","<span class=\"c\">     * @type {boolean}</span>","<span class=\"c\">     */</span>","    get <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","    <span class=\"k\">{</span>","      <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_muted<span class=\"k\">;</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","  <span class=\"s\">'currentTime'</span><span class=\"k\">:</span> <span class=\"k\">{</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * The current playback position </span>","<span class=\"c\">     *</span>","<span class=\"c\">     * @name vs.av.Audio#currentTime </span>","<span class=\"c\">     * @type {number}</span>","<span class=\"c\">     */</span>","    get <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","    <span class=\"k\">{</span>","      <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_current_time<span class=\"k\">;</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","  ","  <span class=\"s\">'state'</span><span class=\"k\">:</span> <span class=\"k\">{</span>","  ","    <span class=\"c\">/** </span>","<span class=\"c\">     * Return the task State. &lt;br /&gt;</span>","<span class=\"c\">     * Possible values: {@link vs.core.Task.STARTED},</span>","<span class=\"c\">     * {@link vs.core.Task.STOPPED},</span>","<span class=\"c\">     * {@link vs.core.Task.PAUSED}</span>","<span class=\"c\">     * @name vs.av.Audio#state</span>","<span class=\"c\">     * @type {number}</span>","<span class=\"c\">     */</span> ","    get <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span>","    <span class=\"k\">{</span>","      <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_state<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","  <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">);</span>","","<span class=\"c\">/********************************************************************</span>","<span class=\"c\">                      Export</span>","<span class=\"c\">*********************************************************************/</span>","<span class=\"c\">/** @private */</span>","av<span class=\"k\">.</span>Audio <span class=\"k\">=</span> Audio<span class=\"k\">;</span>","","Video<span class=\"k\">.</span>prototype<span class=\"k\">.</span>html_template <span class=\"k\">=</span> <span class=\"s\">\"</span><span class=\"t\">\\</span>","<span class=\"s\">&lt;div class='vs_av_video'&gt;&lt;video class='video_inner'&gt;&lt;/video&gt;&lt;/div&gt;</span><span class=\"t\">\\</span>","<span class=\"s\">\"</span><span class=\"k\">;</span>","","<span class=\"k\">}</span><span class=\"k\">)(</span>window<span class=\"k\">);</span>"];
_$jscoverage['js/vs_av.js'][19]++;
(function (window, undefined) {
  _$jscoverage['js/vs_av.js'][21]++;
  var document = window.document;
  _$jscoverage['js/vs_av.js'][45]++;
  var vs = window.vs, util = vs.util, core = vs.core, ui = vs.ui, av = vs.av;
  _$jscoverage['js/vs_av.js'][116]++;
  function Video(config) {
    _$jscoverage['js/vs_av.js'][118]++;
    if ((config && (! config.size))) {
      _$jscoverage['js/vs_av.js'][118]++;
      config.size = [320, 200];
    }
    _$jscoverage['js/vs_av.js'][120]++;
    this.parent = ui.View;
    _$jscoverage['js/vs_av.js'][121]++;
    this.parent(config);
    _$jscoverage['js/vs_av.js'][122]++;
    this.constructor = Video;
}
  _$jscoverage['js/vs_av.js'][130]++;
  Video.UNKNOWN_ERR = 0;
  _$jscoverage['js/vs_av.js'][138]++;
  Video.MEDIA_ERR_ABORTED = 1;
  _$jscoverage['js/vs_av.js'][147]++;
  Video.MEDIA_ERR_NETWORK = 2;
  _$jscoverage['js/vs_av.js'][155]++;
  Video.MEDIA_ERR_DECODE = 3;
  _$jscoverage['js/vs_av.js'][163]++;
  Video.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;
  _$jscoverage['js/vs_av.js'][165]++;
  Video.prototype = {delegate: null, _state: core.Task.STOPPED, __video_node: null, _src: "", _poster: "", _preload: "", _autoplay: false, _loop: false, _controls: false, _volume: 1, _muted: false, _current_time: 0, play: (function () {
  _$jscoverage['js/vs_av.js'][267]++;
  if ((this._state === core.Task.STARTED)) {
    _$jscoverage['js/vs_av.js'][267]++;
    return false;
  }
  _$jscoverage['js/vs_av.js'][268]++;
  if ((! this.__video_node)) {
    _$jscoverage['js/vs_av.js'][268]++;
    return;
  }
  _$jscoverage['js/vs_av.js'][270]++;
  this._state = core.Task.STARTED;
  _$jscoverage['js/vs_av.js'][271]++;
  this.__video_node.play();
}), start: (function () {
  _$jscoverage['js/vs_av.js'][285]++;
  this.play();
}), pause: (function () {
  _$jscoverage['js/vs_av.js'][296]++;
  if ((this._state === core.Task.PAUSED)) {
    _$jscoverage['js/vs_av.js'][296]++;
    return false;
  }
  _$jscoverage['js/vs_av.js'][298]++;
  if ((! this.__video_node)) {
    _$jscoverage['js/vs_av.js'][298]++;
    return;
  }
  _$jscoverage['js/vs_av.js'][299]++;
  this.__video_node.pause();
  _$jscoverage['js/vs_av.js'][300]++;
  this._state = core.Task.PAUSED;
  _$jscoverage['js/vs_av.js'][302]++;
  if ((this.delegate && this.delegate.taskDidPause)) {
    _$jscoverage['js/vs_av.js'][303]++;
    this.delegate.taskDidPause(this);
  }
}), stop: (function () {
  _$jscoverage['js/vs_av.js'][314]++;
  if ((this._state === core.Task.STOPPED)) {
    _$jscoverage['js/vs_av.js'][314]++;
    return false;
  }
  _$jscoverage['js/vs_av.js'][316]++;
  if ((! this.__video_node)) {
    _$jscoverage['js/vs_av.js'][316]++;
    return;
  }
  _$jscoverage['js/vs_av.js'][317]++;
  if (this.__video_node.stop) {
    _$jscoverage['js/vs_av.js'][317]++;
    this.__video_node.stop();
  }
  else {
    _$jscoverage['js/vs_av.js'][320]++;
    this.__video_node.pause();
    _$jscoverage['js/vs_av.js'][321]++;
    this.__video_node.currentTime = 0;
  }
  _$jscoverage['js/vs_av.js'][324]++;
  this._state = core.Task.STOPPED;
  _$jscoverage['js/vs_av.js'][326]++;
  if ((this.delegate && this.delegate.taskDidStop)) {
    _$jscoverage['js/vs_av.js'][327]++;
    this.delegate.taskDidStop(this);
  }
}), destructor: (function () {
  _$jscoverage['js/vs_av.js'][340]++;
  if ((! this.__i__)) {
    _$jscoverage['js/vs_av.js'][340]++;
    return;
  }
  _$jscoverage['js/vs_av.js'][343]++;
  this.__video_node.removeEventListener("volumechange", this);
  _$jscoverage['js/vs_av.js'][344]++;
  this.__video_node.removeEventListener("ended", this);
  _$jscoverage['js/vs_av.js'][345]++;
  this.__video_node.removeEventListener("playing", this);
  _$jscoverage['js/vs_av.js'][346]++;
  this.__video_node.removeEventListener("play", this);
  _$jscoverage['js/vs_av.js'][347]++;
  this.__video_node.removeEventListener("pause", this);
  _$jscoverage['js/vs_av.js'][348]++;
  this.__video_node.removeEventListener("error", this);
  _$jscoverage['js/vs_av.js'][350]++;
  ui.View.prototype.destructor.call(this);
}), initComponent: (function () {
  _$jscoverage['js/vs_av.js'][359]++;
  ui.View.prototype.initComponent.call(this);
  _$jscoverage['js/vs_av.js'][361]++;
  this.__video_node = this.view.querySelector("video");
  _$jscoverage['js/vs_av.js'][362]++;
  if ((! this.__video_node)) {
    _$jscoverage['js/vs_av.js'][364]++;
    console.error("Uncompatible video view");
    _$jscoverage['js/vs_av.js'][365]++;
    return;
  }
  _$jscoverage['js/vs_av.js'][369]++;
  this.__video_node.addEventListener("volumechange", this);
  _$jscoverage['js/vs_av.js'][370]++;
  this.__video_node.addEventListener("ended", this);
  _$jscoverage['js/vs_av.js'][371]++;
  this.__video_node.addEventListener("playing", this);
  _$jscoverage['js/vs_av.js'][372]++;
  this.__video_node.addEventListener("play", this);
  _$jscoverage['js/vs_av.js'][373]++;
  this.__video_node.addEventListener("pause", this);
  _$jscoverage['js/vs_av.js'][374]++;
  this.__video_node.addEventListener("error", this);
  _$jscoverage['js/vs_av.js'][376]++;
  var self = this, _timeupdate = (function () {
  _$jscoverage['js/vs_av.js'][379]++;
  self._current_time = self.__video_node.currentTime;
  _$jscoverage['js/vs_av.js'][380]++;
  self.propertyChange("currentTime");
});
  _$jscoverage['js/vs_av.js'][382]++;
  this.__video_node.addEventListener("timeupdate", _timeupdate, false);
}), handleEvent: (function (event) {
  _$jscoverage['js/vs_av.js'][391]++;
  switch (event.type) {
  case "volumechange":
    _$jscoverage['js/vs_av.js'][394]++;
    this._volume = this.__video_node.getAttribute("volume");
    _$jscoverage['js/vs_av.js'][395]++;
    this.propertyChange("volume");
    _$jscoverage['js/vs_av.js'][396]++;
    this.propagate("volumechange", this._volume);
    _$jscoverage['js/vs_av.js'][397]++;
    break;
  case "ended":
    _$jscoverage['js/vs_av.js'][400]++;
    this._state = core.Task.STOPED;
    _$jscoverage['js/vs_av.js'][401]++;
    if ((this.delegate && this.delegate.taskDidEnd)) {
      _$jscoverage['js/vs_av.js'][402]++;
      this.delegate.taskDidEnd(this);
    }
    _$jscoverage['js/vs_av.js'][403]++;
    this.propagate(event.type);
    _$jscoverage['js/vs_av.js'][404]++;
    break;
  case "pause":
    _$jscoverage['js/vs_av.js'][407]++;
    if ((this.delegate && this.delegate.taskDidPause)) {
      _$jscoverage['js/vs_av.js'][408]++;
      this.delegate.taskDidPause(this);
    }
    _$jscoverage['js/vs_av.js'][409]++;
    this._state = core.Task.PAUSED;
    _$jscoverage['js/vs_av.js'][410]++;
    this.propagate(event.type);
    _$jscoverage['js/vs_av.js'][411]++;
    break;
  case "playing":
  case "play":
    _$jscoverage['js/vs_av.js'][415]++;
    this._state = core.Task.STARTED;
    _$jscoverage['js/vs_av.js'][416]++;
    this.propagate(event.type);
    _$jscoverage['js/vs_av.js'][417]++;
    break;
  case "error":
    _$jscoverage['js/vs_av.js'][420]++;
    if ((! this.__video_node.error)) {
      _$jscoverage['js/vs_av.js'][422]++;
      this.propagate(event.type, Video.UNKNOWN_ERR);
    }
    else {
      _$jscoverage['js/vs_av.js'][426]++;
      this.propagate(event.type, this.__video_node.error.code);
    }
    _$jscoverage['js/vs_av.js'][428]++;
    break;
  }
})};
  _$jscoverage['js/vs_av.js'][432]++;
  util.extendClass(Video, ui.View);
  _$jscoverage['js/vs_av.js'][438]++;
  util.defineClassProperties(Video, {"controls": {set: (function (v) {
  _$jscoverage['js/vs_av.js'][451]++;
  if (v) {
    _$jscoverage['js/vs_av.js'][451]++;
    this._controls = true;
  }
  else {
    _$jscoverage['js/vs_av.js'][452]++;
    this._controls = false;
  }
  _$jscoverage['js/vs_av.js'][454]++;
  if ((! this.__video_node)) {
    _$jscoverage['js/vs_av.js'][454]++;
    return;
  }
  _$jscoverage['js/vs_av.js'][455]++;
  this.__video_node.setAttribute("controls", this._controls);
  _$jscoverage['js/vs_av.js'][457]++;
  this.propertyChange("controls");
}), get: (function () {
  _$jscoverage['js/vs_av.js'][465]++;
  return this._controls;
})}, "size": {set: (function (v) {
  _$jscoverage['js/vs_av.js'][478]++;
  if ((! v)) {
    _$jscoverage['js/vs_av.js'][478]++;
    return;
  }
  _$jscoverage['js/vs_av.js'][479]++;
  if (((! util.isArray(v)) || (v.length !== 2))) {
    _$jscoverage['js/vs_av.js'][479]++;
    return;
  }
  _$jscoverage['js/vs_av.js'][480]++;
  if (((! util.isNumber(v[0])) || (! util.isNumber(v[1])))) {
    _$jscoverage['js/vs_av.js'][480]++;
    return;
  }
  _$jscoverage['js/vs_av.js'][482]++;
  this._size[0] = v[0];
  _$jscoverage['js/vs_av.js'][483]++;
  this._size[1] = v[1];
  _$jscoverage['js/vs_av.js'][485]++;
  if ((! this.view)) {
    _$jscoverage['js/vs_av.js'][485]++;
    return;
  }
  _$jscoverage['js/vs_av.js'][486]++;
  this._updateSize();
  _$jscoverage['js/vs_av.js'][488]++;
  if ((! this.__video_node)) {
    _$jscoverage['js/vs_av.js'][490]++;
    this.__video_node = this.view.querySelector("video");
    _$jscoverage['js/vs_av.js'][491]++;
    if ((! this.__video_node)) {
      _$jscoverage['js/vs_av.js'][493]++;
      console.error("Uncompatible video view");
      _$jscoverage['js/vs_av.js'][494]++;
      return;
    }
  }
  _$jscoverage['js/vs_av.js'][497]++;
  this.__video_node.setAttribute("width", this._size[0]);
  _$jscoverage['js/vs_av.js'][498]++;
  this.__video_node.setAttribute("height", this._size[1]);
}), get: (function () {
  _$jscoverage['js/vs_av.js'][507]++;
  if ((this.view && this.view.parentNode)) {
    _$jscoverage['js/vs_av.js'][509]++;
    this._size[0] = this.view.offsetWidth;
    _$jscoverage['js/vs_av.js'][510]++;
    this._size[1] = this.view.offsetHeight;
  }
  _$jscoverage['js/vs_av.js'][512]++;
  return this._size.slice();
})}, "src": {set: (function (v) {
  _$jscoverage['js/vs_av.js'][527]++;
  if ((! util.isString(v))) {
    _$jscoverage['js/vs_av.js'][527]++;
    return;
  }
  _$jscoverage['js/vs_av.js'][529]++;
  this._src = v;
  _$jscoverage['js/vs_av.js'][531]++;
  if ((! this.__video_node)) {
    _$jscoverage['js/vs_av.js'][531]++;
    return;
  }
  _$jscoverage['js/vs_av.js'][532]++;
  this.__video_node.setAttribute("src", this._src);
  _$jscoverage['js/vs_av.js'][534]++;
  this.propertyChange("src");
}), get: (function () {
  _$jscoverage['js/vs_av.js'][542]++;
  return this._src;
})}, "poster": {set: (function (v) {
  _$jscoverage['js/vs_av.js'][557]++;
  if ((! util.isString(v))) {
    _$jscoverage['js/vs_av.js'][557]++;
    return;
  }
  _$jscoverage['js/vs_av.js'][559]++;
  this._poster = v;
  _$jscoverage['js/vs_av.js'][561]++;
  if ((! this.__video_node)) {
    _$jscoverage['js/vs_av.js'][561]++;
    return;
  }
  _$jscoverage['js/vs_av.js'][562]++;
  this.__video_node.setAttribute("poster", this._poster);
  _$jscoverage['js/vs_av.js'][564]++;
  this.propertyChange("poster");
}), get: (function () {
  _$jscoverage['js/vs_av.js'][572]++;
  return this._poster;
})}, "loop": {set: (function (v) {
  _$jscoverage['js/vs_av.js'][587]++;
  if (v) {
    _$jscoverage['js/vs_av.js'][587]++;
    this._loop = true;
  }
  else {
    _$jscoverage['js/vs_av.js'][588]++;
    this._loop = false;
  }
  _$jscoverage['js/vs_av.js'][590]++;
  if ((! this.__video_node)) {
    _$jscoverage['js/vs_av.js'][590]++;
    return;
  }
  _$jscoverage['js/vs_av.js'][591]++;
  this.__video_node.setAttribute("loop", this._loop);
  _$jscoverage['js/vs_av.js'][593]++;
  this.propertyChange("loop");
}), get: (function () {
  _$jscoverage['js/vs_av.js'][601]++;
  return this._loop;
})}, "autoplay": {set: (function (v) {
  _$jscoverage['js/vs_av.js'][615]++;
  if (v) {
    _$jscoverage['js/vs_av.js'][615]++;
    this._autoplay = true;
  }
  else {
    _$jscoverage['js/vs_av.js'][616]++;
    this._autoplay = false;
  }
  _$jscoverage['js/vs_av.js'][618]++;
  if ((! this.__video_node)) {
    _$jscoverage['js/vs_av.js'][618]++;
    return;
  }
  _$jscoverage['js/vs_av.js'][619]++;
  this.__video_node.setAttribute("autoplay", this._autoplay);
  _$jscoverage['js/vs_av.js'][621]++;
  this.propertyChange("autoplay");
}), get: (function () {
  _$jscoverage['js/vs_av.js'][629]++;
  return this._autoplay;
})}, "volume": {set: (function (v) {
  _$jscoverage['js/vs_av.js'][644]++;
  if ((! util.isNumber(v))) {
    _$jscoverage['js/vs_av.js'][644]++;
    return;
  }
  _$jscoverage['js/vs_av.js'][645]++;
  if (((v < 0) || (v > 1))) {
    _$jscoverage['js/vs_av.js'][645]++;
    return;
  }
  _$jscoverage['js/vs_av.js'][647]++;
  this._volume = v;
  _$jscoverage['js/vs_av.js'][649]++;
  if ((! this.__video_node)) {
    _$jscoverage['js/vs_av.js'][649]++;
    return;
  }
  _$jscoverage['js/vs_av.js'][650]++;
  this.__video_node.setAttribute("volume", this._volume);
  _$jscoverage['js/vs_av.js'][652]++;
  this.propertyChange("volume");
}), get: (function () {
  _$jscoverage['js/vs_av.js'][660]++;
  return this._volume;
})}, "muted": {set: (function (v) {
  _$jscoverage['js/vs_av.js'][675]++;
  if (v) {
    _$jscoverage['js/vs_av.js'][675]++;
    this._muted = true;
  }
  else {
    _$jscoverage['js/vs_av.js'][676]++;
    this._muted = false;
  }
  _$jscoverage['js/vs_av.js'][678]++;
  this.propertyChange("muted");
}), get: (function () {
  _$jscoverage['js/vs_av.js'][686]++;
  return this._muted;
})}, "currentTime": {get: (function () {
  _$jscoverage['js/vs_av.js'][700]++;
  return this._current_time;
})}, "state": {get: (function () {
  _$jscoverage['js/vs_av.js'][716]++;
  return this._state;
})}});
  _$jscoverage['js/vs_av.js'][725]++;
  av.Video = Video;
  _$jscoverage['js/vs_av.js'][790]++;
  function Audio(config) {
    _$jscoverage['js/vs_av.js'][792]++;
    this.parent = core.EventSource;
    _$jscoverage['js/vs_av.js'][793]++;
    this.parent(config);
    _$jscoverage['js/vs_av.js'][794]++;
    this.constructor = Audio;
}
  _$jscoverage['js/vs_av.js'][802]++;
  Audio.UNKNOWN_ERR = 0;
  _$jscoverage['js/vs_av.js'][810]++;
  Audio.MEDIA_ERR_ABORTED = 1;
  _$jscoverage['js/vs_av.js'][819]++;
  Audio.MEDIA_ERR_NETWORK = 2;
  _$jscoverage['js/vs_av.js'][827]++;
  Audio.MEDIA_ERR_DECODE = 3;
  _$jscoverage['js/vs_av.js'][835]++;
  Audio.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;
  _$jscoverage['js/vs_av.js'][837]++;
  Audio.prototype = {delegate: null, _state: core.Task.STOPPED, __audio: null, _src: "", _autoplay: false, _loop: false, _volume: 1, _muted: false, _current_time: 0, play: (function () {
  _$jscoverage['js/vs_av.js'][921]++;
  if ((this._state === core.Task.STARTED)) {
    _$jscoverage['js/vs_av.js'][921]++;
    return false;
  }
  _$jscoverage['js/vs_av.js'][922]++;
  if ((! this.__audio)) {
    _$jscoverage['js/vs_av.js'][922]++;
    return;
  }
  _$jscoverage['js/vs_av.js'][924]++;
  this._state = core.Task.STARTED;
  _$jscoverage['js/vs_av.js'][925]++;
  this.__audio.play();
}), start: (function () {
  _$jscoverage['js/vs_av.js'][938]++;
  this.play();
}), pause: (function () {
  _$jscoverage['js/vs_av.js'][948]++;
  if ((this._state === core.Task.PAUSED)) {
    _$jscoverage['js/vs_av.js'][948]++;
    return false;
  }
  _$jscoverage['js/vs_av.js'][950]++;
  if ((! this.__audio)) {
    _$jscoverage['js/vs_av.js'][950]++;
    return;
  }
  _$jscoverage['js/vs_av.js'][951]++;
  this.__audio.pause();
  _$jscoverage['js/vs_av.js'][952]++;
  this._state = core.Task.PAUSED;
  _$jscoverage['js/vs_av.js'][954]++;
  if ((this.delegate && this.delegate.taskDidPause)) {
    _$jscoverage['js/vs_av.js'][955]++;
    this.delegate.taskDidPause(this);
  }
}), stop: (function () {
  _$jscoverage['js/vs_av.js'][965]++;
  if ((this._state === core.Task.STOPPED)) {
    _$jscoverage['js/vs_av.js'][965]++;
    return false;
  }
  _$jscoverage['js/vs_av.js'][967]++;
  if ((! this.__audio)) {
    _$jscoverage['js/vs_av.js'][967]++;
    return;
  }
  _$jscoverage['js/vs_av.js'][968]++;
  if (window.Media) {
    _$jscoverage['js/vs_av.js'][969]++;
    this.__audio.stop();
  }
  else {
    _$jscoverage['js/vs_av.js'][971]++;
    this.__audio.pause();
  }
  _$jscoverage['js/vs_av.js'][972]++;
  this._state = core.Task.STOPPED;
  _$jscoverage['js/vs_av.js'][974]++;
  if ((this.delegate && this.delegate.taskDidStop)) {
    _$jscoverage['js/vs_av.js'][975]++;
    this.delegate.taskDidStop(this);
  }
}), destructor: (function () {
  _$jscoverage['js/vs_av.js'][988]++;
  if ((! this.__i__)) {
    _$jscoverage['js/vs_av.js'][988]++;
    return;
  }
  _$jscoverage['js/vs_av.js'][991]++;
  this.__audio.removeEventListener("volumechange", this);
  _$jscoverage['js/vs_av.js'][992]++;
  this.__audio.removeEventListener("ended", this);
  _$jscoverage['js/vs_av.js'][993]++;
  this.__audio.removeEventListener("playing", this);
  _$jscoverage['js/vs_av.js'][994]++;
  this.__audio.removeEventListener("play", this);
  _$jscoverage['js/vs_av.js'][995]++;
  this.__audio.removeEventListener("pause", this);
  _$jscoverage['js/vs_av.js'][996]++;
  this.__audio.removeEventListener("error", this);
  _$jscoverage['js/vs_av.js'][998]++;
  (delete this.__audio);
  _$jscoverage['js/vs_av.js'][999]++;
  this.__audio = null;
  _$jscoverage['js/vs_av.js'][1001]++;
  core.EventSource.prototype.destructor.call(this);
}), initComponent: (function () {
  _$jscoverage['js/vs_av.js'][1011]++;
  core.EventSource.prototype.initComponent.call(this);
  _$jscoverage['js/vs_av.js'][1013]++;
  this.__audio = new (window.Audio)();
  _$jscoverage['js/vs_av.js'][1015]++;
  this.__audio.preload = "auto";
  _$jscoverage['js/vs_av.js'][1016]++;
  this.__audio.autoplay = this._autoplay;
  _$jscoverage['js/vs_av.js'][1019]++;
  this.__audio.addEventListener("volumechange", this);
  _$jscoverage['js/vs_av.js'][1020]++;
  this.__audio.addEventListener("ended", this);
  _$jscoverage['js/vs_av.js'][1021]++;
  this.__audio.addEventListener("playing", this);
  _$jscoverage['js/vs_av.js'][1022]++;
  this.__audio.addEventListener("play", this);
  _$jscoverage['js/vs_av.js'][1023]++;
  this.__audio.addEventListener("pause", this);
  _$jscoverage['js/vs_av.js'][1024]++;
  this.__audio.addEventListener("error", this);
  _$jscoverage['js/vs_av.js'][1026]++;
  var self = this, _timeupdate = (function () {
  _$jscoverage['js/vs_av.js'][1028]++;
  self._current_time = self.__audio.currentTime;
  _$jscoverage['js/vs_av.js'][1029]++;
  self.propertyChange("currentTime");
});
  _$jscoverage['js/vs_av.js'][1031]++;
  this.__audio.addEventListener("timeupdate", _timeupdate, false);
}), handleEvent: (function (event) {
  _$jscoverage['js/vs_av.js'][1041]++;
  switch (event.type) {
  case "volumechange":
    _$jscoverage['js/vs_av.js'][1044]++;
    this._volume = this.__audio.volume;
    _$jscoverage['js/vs_av.js'][1045]++;
    this.propertyChange("volume");
    _$jscoverage['js/vs_av.js'][1046]++;
    this.propagate("volumechange", this._volume);
    _$jscoverage['js/vs_av.js'][1047]++;
    break;
  case "ended":
    _$jscoverage['js/vs_av.js'][1050]++;
    this._state = core.Task.STOPED;
    _$jscoverage['js/vs_av.js'][1051]++;
    if ((this.delegate && this.delegate.taskDidEnd)) {
      _$jscoverage['js/vs_av.js'][1052]++;
      this.delegate.taskDidEnd(this);
    }
    _$jscoverage['js/vs_av.js'][1053]++;
    this.propagate(event.type);
    _$jscoverage['js/vs_av.js'][1054]++;
    break;
  case "pause":
    _$jscoverage['js/vs_av.js'][1057]++;
    if ((this.delegate && this.delegate.taskDidPause)) {
      _$jscoverage['js/vs_av.js'][1058]++;
      this.delegate.taskDidPause(this);
    }
    _$jscoverage['js/vs_av.js'][1059]++;
    this._state = core.Task.PAUSED;
    _$jscoverage['js/vs_av.js'][1060]++;
    this.propagate(event.type);
    _$jscoverage['js/vs_av.js'][1061]++;
    break;
  case "playing":
  case "play":
    _$jscoverage['js/vs_av.js'][1065]++;
    this._state = core.Task.STARTED;
    _$jscoverage['js/vs_av.js'][1066]++;
    this.propagate(event.type);
    _$jscoverage['js/vs_av.js'][1067]++;
    break;
  case "error":
    _$jscoverage['js/vs_av.js'][1070]++;
    if ((! this.__audio.error)) {
      _$jscoverage['js/vs_av.js'][1072]++;
      this.propagate(event.type, Audio.UNKNOWN_ERR);
    }
    else {
      _$jscoverage['js/vs_av.js'][1076]++;
      this.propagate(event.type, this.__audio.error.code);
    }
    _$jscoverage['js/vs_av.js'][1078]++;
    break;
  }
})};
  _$jscoverage['js/vs_av.js'][1082]++;
  util.extendClass(Audio, core.EventSource);
  _$jscoverage['js/vs_av.js'][1088]++;
  util.defineClassProperties(Audio, {"src": {set: (function (v) {
  _$jscoverage['js/vs_av.js'][1101]++;
  if ((! vs.util.isString(v))) {
    _$jscoverage['js/vs_av.js'][1101]++;
    return;
  }
  _$jscoverage['js/vs_av.js'][1103]++;
  ((this._src = v), (self = this));
  _$jscoverage['js/vs_av.js'][1105]++;
  if (window.Media) {
    _$jscoverage['js/vs_av.js'][1107]++;
    function onSuccess() {
      _$jscoverage['js/vs_av.js'][1109]++;
      self._state = core.Task.STOPED;
      _$jscoverage['js/vs_av.js'][1110]++;
      if ((self.delegate && self.delegate.taskDidEnd)) {
        _$jscoverage['js/vs_av.js'][1111]++;
        self.delegate.taskDidEnd(self);
      }
      _$jscoverage['js/vs_av.js'][1112]++;
      self.propagate(event.type);
}
    _$jscoverage['js/vs_av.js'][1114]++;
    this.__audio = new (window.Media)(this._src, onSuccess);
    _$jscoverage['js/vs_av.js'][1115]++;
    if (this._autoplay) {
      _$jscoverage['js/vs_av.js'][1115]++;
      this.play();
    }
  }
  else {
    _$jscoverage['js/vs_av.js'][1119]++;
    if ((! this.__audio)) {
      _$jscoverage['js/vs_av.js'][1119]++;
      return;
    }
    _$jscoverage['js/vs_av.js'][1120]++;
    this.__audio.src = this._src;
  }
  _$jscoverage['js/vs_av.js'][1122]++;
  this.propertyChange("src");
}), get: (function () {
  _$jscoverage['js/vs_av.js'][1131]++;
  return this._src;
})}, "loop": {set: (function (v) {
  _$jscoverage['js/vs_av.js'][1146]++;
  if (v) {
    _$jscoverage['js/vs_av.js'][1146]++;
    this._loop = true;
  }
  else {
    _$jscoverage['js/vs_av.js'][1147]++;
    this._loop = false;
  }
  _$jscoverage['js/vs_av.js'][1149]++;
  if ((! this.__audio)) {
    _$jscoverage['js/vs_av.js'][1149]++;
    return;
  }
  _$jscoverage['js/vs_av.js'][1150]++;
  this.__audio.loop = this._loop;
  _$jscoverage['js/vs_av.js'][1152]++;
  this.propertyChange("loop");
}), get: (function () {
  _$jscoverage['js/vs_av.js'][1161]++;
  return this._loop;
})}, "autoplay": {set: (function (v) {
  _$jscoverage['js/vs_av.js'][1176]++;
  if (v) {
    _$jscoverage['js/vs_av.js'][1176]++;
    this._autoplay = true;
  }
  else {
    _$jscoverage['js/vs_av.js'][1177]++;
    this._autoplay = false;
  }
  _$jscoverage['js/vs_av.js'][1179]++;
  if ((! this.__audio)) {
    _$jscoverage['js/vs_av.js'][1179]++;
    return;
  }
  _$jscoverage['js/vs_av.js'][1180]++;
  this.__audio.autoplay = this._autoplay;
  _$jscoverage['js/vs_av.js'][1182]++;
  this.propertyChange("autoplay");
}), get: (function () {
  _$jscoverage['js/vs_av.js'][1191]++;
  return this._autoplay;
})}, "volume": {set: (function (v) {
  _$jscoverage['js/vs_av.js'][1206]++;
  if ((! vs.util.isNumber(v))) {
    _$jscoverage['js/vs_av.js'][1206]++;
    return;
  }
  _$jscoverage['js/vs_av.js'][1207]++;
  if (((v < 0) || (v > 1))) {
    _$jscoverage['js/vs_av.js'][1207]++;
    return;
  }
  _$jscoverage['js/vs_av.js'][1209]++;
  this._volume = v;
  _$jscoverage['js/vs_av.js'][1211]++;
  if ((! this.__audio)) {
    _$jscoverage['js/vs_av.js'][1211]++;
    return;
  }
  _$jscoverage['js/vs_av.js'][1212]++;
  this.__audio.volume = this._volume;
  _$jscoverage['js/vs_av.js'][1214]++;
  this.propertyChange("volume");
}), get: (function () {
  _$jscoverage['js/vs_av.js'][1223]++;
  return this._volume;
})}, "muted": {set: (function (v) {
  _$jscoverage['js/vs_av.js'][1238]++;
  if (v) {
    _$jscoverage['js/vs_av.js'][1238]++;
    this._muted = true;
  }
  else {
    _$jscoverage['js/vs_av.js'][1239]++;
    this._muted = false;
  }
  _$jscoverage['js/vs_av.js'][1241]++;
  this.propertyChange("muted");
}), get: (function () {
  _$jscoverage['js/vs_av.js'][1250]++;
  return this._muted;
})}, "currentTime": {get: (function () {
  _$jscoverage['js/vs_av.js'][1264]++;
  return this._current_time;
})}, "state": {get: (function () {
  _$jscoverage['js/vs_av.js'][1280]++;
  return this._state;
})}});
  _$jscoverage['js/vs_av.js'][1289]++;
  av.Audio = Audio;
  _$jscoverage['js/vs_av.js'][1291]++;
  Video.prototype.html_template = "<div class='vs_av_video'><video class='video_inner'></video></div>";
})(window);
